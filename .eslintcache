[{"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js":"1","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js":"2","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js":"3","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js":"4","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js":"5","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js":"6","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js":"7","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js":"8","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js":"9","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js":"10","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js":"11","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js":"12","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js":"13","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js":"14","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js":"15","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js":"16","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js":"17","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js":"18","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js":"19","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js":"20","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js":"21","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js":"22","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js":"24","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js":"25","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js":"26","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js":"27","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js":"28","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js":"29","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js":"30","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js":"31","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js":"32","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js":"33","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js":"34","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js":"35","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js":"36","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js":"37","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js":"38","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js":"39","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js":"40","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js":"41","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js":"42","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js":"43","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js":"44","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js":"45","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js":"46","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js":"47","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js":"48","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js":"49","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js":"50","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js":"51","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js":"52","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js":"53","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js":"54","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js":"55","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js":"56","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js":"57","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js":"58","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js":"59","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js":"60","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js":"61","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js":"62","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js":"63","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js":"64","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js":"65","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js":"66","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js":"67","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js":"68","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js":"69","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js":"70","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js":"71","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js":"72","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js":"73","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\confirmDelete.js":"74","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js":"75","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js":"76","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"77","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"78","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js":"79","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js":"80","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js":"81","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js":"82","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js":"83","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js":"84","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js":"85","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js":"86","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js":"87","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\StaffInput.js":"88","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js":"89","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js":"90","C:\\Users\\malla\\Desktop\\project\\src\\index.js":"91","C:\\Users\\malla\\Desktop\\project\\src\\App.js":"92","C:\\Users\\malla\\Desktop\\project\\src\\reportWebVitals.js":"93","C:\\Users\\malla\\Desktop\\project\\src\\noMatch.js":"94","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\Patient.js":"95","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SysAdm.js":"96","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MedDoc.js":"97","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MedAdm.js":"98","C:\\Users\\malla\\Desktop\\project\\src\\User\\LoginUI.js":"99","C:\\Users\\malla\\Desktop\\project\\src\\util\\AuthRoute.js":"100","C:\\Users\\malla\\Desktop\\project\\src\\User\\ResetPasswordUI.js":"101","C:\\Users\\malla\\Desktop\\project\\src\\util\\Auth.js":"102","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\RegisterUI.js":"103","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MARoute.js":"104","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MDRoute.js":"105","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\PRoute.js":"106","C:\\Users\\malla\\Desktop\\project\\src\\App.styles.js":"107","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\SARoute.js":"108","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\SASideBarData.js":"109","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.js":"110","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MDSideBarData.js":"111","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\PSideBarData.js":"112","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MASideBarData.js":"113","C:\\Users\\malla\\Desktop\\project\\src\\components\\Navbar\\NavigationbarSA.js":"114","C:\\Users\\malla\\Desktop\\project\\src\\components\\PasswordStrengthIndicator.js":"115","C:\\Users\\malla\\Desktop\\project\\src\\firebase.js":"116","C:\\Users\\malla\\Desktop\\project\\src\\util\\IdleTimerContainer.js":"117","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js":"118","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticle.js":"119","C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticle.js":"120","C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js":"121","C:\\Users\\malla\\Desktop\\project\\src\\components\\EditArticle\\EditArticle.js":"122","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MAHomepageUI.js":"123","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ResAppointmentUI.js":"124","C:\\Users\\malla\\Desktop\\project\\src\\util\\MedAdmRoute.js":"125","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\changePwUI.js":"126","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js":"127","C:\\Users\\malla\\Desktop\\project\\src\\User\\myProfilePageUI.js":"128","C:\\Users\\malla\\Desktop\\project\\src\\User\\ViewHealthArticleUI.js":"129","C:\\Users\\malla\\Desktop\\project\\src\\util\\DoctorRoute.js":"130","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js":"131","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MDHomepageUI.js":"132","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js":"133","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMPUI.js":"134","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js":"135","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\changePwUI.js":"136","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMC.js":"137","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMC.js":"138","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewReceipt.js":"139","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewIndividualMPUI.js":"140","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ScheduleAppointmentUI.js":"141","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\PatientViewArticle.js":"142","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchDoctor.js":"143","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorProfile.js":"144","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\CancelAppointmentUI.js":"145","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ResAppointmentUI.js":"146","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\BookAppointmentUI.js":"147","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\userAppointmentUI.js":"148","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMyMPUI.js":"149","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\changePwUI.js":"150","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PHomepageUI.js":"151","C:\\Users\\malla\\Desktop\\project\\src\\util\\PatientRoute.js":"152","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\DocRescheduleUI.js":"153","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js":"154","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMPUI.js":"155","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js":"156","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\EditMedicalRecord.js":"157","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js":"158","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js":"159","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SAHomepageUI.js":"160","C:\\Users\\malla\\Desktop\\project\\src\\util\\SystemAdminRoute.js":"161","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\confirmDelete.js":"162","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js":"163","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\CreateAccountUI.js":"164","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js":"165","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"166","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\changePwUI.js":"167","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"168","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchBar.js":"169","C:\\Users\\malla\\Desktop\\project\\src\\components\\ArticleCard\\ArticleCard.js":"170","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\dropDownBar.js":"171","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MC.js":"172","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorCard.js":"173","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PatientComment.js":"174","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js":"175","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\searchBar.js":"176","C:\\Users\\malla\\Desktop\\project\\src\\components\\navbarUI.js":"177","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\dropDownBar.js":"178","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\UserInput.js":"179","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\StaffInput.js":"180"},{"size":583,"mtime":1609073849358,"results":"181","hashOfConfig":"182"},{"size":2096,"mtime":1611327975795,"results":"183","hashOfConfig":"182"},{"size":375,"mtime":1609073849361,"results":"184","hashOfConfig":"182"},{"size":339,"mtime":1611154119483,"results":"185","hashOfConfig":"182"},{"size":1688,"mtime":1613729540440,"results":"186","hashOfConfig":"182"},{"size":467,"mtime":1613729567785,"results":"187","hashOfConfig":"182"},{"size":852,"mtime":1609468629584,"results":"188","hashOfConfig":"182"},{"size":854,"mtime":1609504207739,"results":"189","hashOfConfig":"182"},{"size":2659,"mtime":1613729276454,"results":"190","hashOfConfig":"182"},{"size":3157,"mtime":1613729171675,"results":"191","hashOfConfig":"182"},{"size":10205,"mtime":1613728316967,"results":"192","hashOfConfig":"182"},{"size":855,"mtime":1610210889738,"results":"193","hashOfConfig":"182"},{"size":855,"mtime":1610210889735,"results":"194","hashOfConfig":"182"},{"size":4828,"mtime":1613577007043,"results":"195","hashOfConfig":"182"},{"size":4480,"mtime":1611994942859,"results":"196","hashOfConfig":"182"},{"size":3367,"mtime":1613555079868,"results":"197","hashOfConfig":"182"},{"size":433,"mtime":1609547222515,"results":"198","hashOfConfig":"182"},{"size":1821,"mtime":1613729648389,"results":"199","hashOfConfig":"182"},{"size":3216,"mtime":1613555680382,"results":"200","hashOfConfig":"182"},{"size":773,"mtime":1610729184252,"results":"201","hashOfConfig":"182"},{"size":1197,"mtime":1610436627100,"results":"202","hashOfConfig":"182"},{"size":615,"mtime":1613279283183,"results":"203","hashOfConfig":"182"},{"size":5650,"mtime":1609504207720,"results":"204","hashOfConfig":"182"},{"size":720,"mtime":1612938154835,"results":"205","hashOfConfig":"182"},{"size":606,"mtime":1613555079886,"results":"206","hashOfConfig":"182"},{"size":813,"mtime":1613718348130,"results":"207","hashOfConfig":"182"},{"size":1723,"mtime":1613715466565,"results":"208","hashOfConfig":"182"},{"size":7823,"mtime":1613729240727,"results":"209","hashOfConfig":"182"},{"size":2443,"mtime":1613730007753,"results":"210","hashOfConfig":"182"},{"size":1117,"mtime":1613729587978,"results":"211","hashOfConfig":"182"},{"size":3149,"mtime":1613729372893,"results":"212","hashOfConfig":"182"},{"size":7941,"mtime":1613730253425,"results":"213","hashOfConfig":"182"},{"size":7115,"mtime":1613730428242,"results":"214","hashOfConfig":"182"},{"size":3809,"mtime":1613730399671,"results":"215","hashOfConfig":"182"},{"size":1176,"mtime":1613729719796,"results":"216","hashOfConfig":"182"},{"size":6436,"mtime":1613730182352,"results":"217","hashOfConfig":"182"},{"size":2585,"mtime":1613728631000,"results":"218","hashOfConfig":"182"},{"size":4251,"mtime":1613724215817,"results":"219","hashOfConfig":"182"},{"size":2541,"mtime":1613727962897,"results":"220","hashOfConfig":"182"},{"size":5611,"mtime":1613727891693,"results":"221","hashOfConfig":"182"},{"size":5726,"mtime":1613727753849,"results":"222","hashOfConfig":"182"},{"size":7862,"mtime":1613728419534,"results":"223","hashOfConfig":"182"},{"size":3894,"mtime":1613730465527,"results":"224","hashOfConfig":"182"},{"size":6808,"mtime":1613728591183,"results":"225","hashOfConfig":"182"},{"size":4956,"mtime":1613728102509,"results":"226","hashOfConfig":"182"},{"size":9919,"mtime":1613725137667,"results":"227","hashOfConfig":"182"},{"size":1136,"mtime":1613729690671,"results":"228","hashOfConfig":"182"},{"size":2557,"mtime":1613729849220,"results":"229","hashOfConfig":"182"},{"size":3527,"mtime":1613728609182,"results":"230","hashOfConfig":"182"},{"size":6951,"mtime":1613725159122,"results":"231","hashOfConfig":"182"},{"size":5392,"mtime":1613728673988,"results":"232","hashOfConfig":"182"},{"size":4463,"mtime":1613577007048,"results":"233","hashOfConfig":"182"},{"size":4338,"mtime":1612534671829,"results":"234","hashOfConfig":"182"},{"size":4463,"mtime":1613577007052,"results":"235","hashOfConfig":"182"},{"size":5357,"mtime":1613730324100,"results":"236","hashOfConfig":"182"},{"size":8181,"mtime":1613555079882,"results":"237","hashOfConfig":"182"},{"size":7007,"mtime":1613730093474,"results":"238","hashOfConfig":"182"},{"size":13972,"mtime":1613730108080,"results":"239","hashOfConfig":"182"},{"size":6175,"mtime":1613730686579,"results":"240","hashOfConfig":"182"},{"size":9300,"mtime":1613279283180,"results":"241","hashOfConfig":"182"},{"size":8181,"mtime":1613555079884,"results":"242","hashOfConfig":"182"},{"size":6162,"mtime":1613730059601,"results":"243","hashOfConfig":"182"},{"size":14903,"mtime":1613730585350,"results":"244","hashOfConfig":"182"},{"size":6446,"mtime":1613728257552,"results":"245","hashOfConfig":"182"},{"size":7689,"mtime":1613729963626,"results":"246","hashOfConfig":"182"},{"size":4775,"mtime":1613729781444,"results":"247","hashOfConfig":"182"},{"size":4558,"mtime":1613729924971,"results":"248","hashOfConfig":"182"},{"size":8780,"mtime":1613729915789,"results":"249","hashOfConfig":"182"},{"size":12102,"mtime":1613727504368,"results":"250","hashOfConfig":"182"},{"size":4643,"mtime":1613728833922,"results":"251","hashOfConfig":"182"},{"size":10707,"mtime":1613727056146,"results":"252","hashOfConfig":"182"},{"size":2452,"mtime":1613728728789,"results":"253","hashOfConfig":"182"},{"size":13242,"mtime":1613722366939,"results":"254","hashOfConfig":"182"},{"size":5521,"mtime":1613728803328,"results":"255","hashOfConfig":"182"},{"size":3867,"mtime":1613729048988,"results":"256","hashOfConfig":"182"},{"size":1136,"mtime":1613729748439,"results":"257","hashOfConfig":"182"},{"size":5023,"mtime":1613729106402,"results":"258","hashOfConfig":"182"},{"size":3473,"mtime":1613714801695,"results":"259","hashOfConfig":"182"},{"size":682,"mtime":1612505280494,"results":"260","hashOfConfig":"182"},{"size":1399,"mtime":1610543862366,"results":"261","hashOfConfig":"182"},{"size":1515,"mtime":1613728073991,"results":"262","hashOfConfig":"182"},{"size":8273,"mtime":1613728206069,"results":"263","hashOfConfig":"182"},{"size":2723,"mtime":1613730300055,"results":"264","hashOfConfig":"182"},{"size":1600,"mtime":1610266066804,"results":"265","hashOfConfig":"182"},{"size":828,"mtime":1609511739548,"results":"266","hashOfConfig":"182"},{"size":682,"mtime":1611154119482,"results":"267","hashOfConfig":"182"},{"size":949,"mtime":1613555079880,"results":"268","hashOfConfig":"182"},{"size":1675,"mtime":1613728933847,"results":"269","hashOfConfig":"182"},{"size":2025,"mtime":1613574182415,"results":"270","hashOfConfig":"182"},{"size":832,"mtime":1612938154805,"results":"271","hashOfConfig":"182"},{"size":583,"mtime":1609073849358,"results":"272","hashOfConfig":"273"},{"size":2096,"mtime":1611327975795,"results":"274","hashOfConfig":"273"},{"size":375,"mtime":1609073849361,"results":"275","hashOfConfig":"273"},{"size":339,"mtime":1611154119483,"results":"276","hashOfConfig":"273"},{"size":854,"mtime":1609504207739,"results":"277","hashOfConfig":"273"},{"size":852,"mtime":1609468629584,"results":"278","hashOfConfig":"273"},{"size":855,"mtime":1610210889735,"results":"279","hashOfConfig":"273"},{"size":855,"mtime":1610210889738,"results":"280","hashOfConfig":"273"},{"size":3157,"mtime":1613729171675,"results":"281","hashOfConfig":"273"},{"size":467,"mtime":1613729567785,"results":"282","hashOfConfig":"273"},{"size":2659,"mtime":1613729276454,"results":"283","hashOfConfig":"273"},{"size":1688,"mtime":1613729540440,"results":"284","hashOfConfig":"273"},{"size":10205,"mtime":1613728316967,"results":"285","hashOfConfig":"273"},{"size":3367,"mtime":1613555079868,"results":"286","hashOfConfig":"273"},{"size":4828,"mtime":1613577007043,"results":"287","hashOfConfig":"273"},{"size":4480,"mtime":1611994942859,"results":"288","hashOfConfig":"273"},{"size":433,"mtime":1609547222515,"results":"289","hashOfConfig":"273"},{"size":3216,"mtime":1613555680382,"results":"290","hashOfConfig":"273"},{"size":615,"mtime":1613279283183,"results":"291","hashOfConfig":"273"},{"size":5650,"mtime":1609504207720,"results":"292","hashOfConfig":"273"},{"size":720,"mtime":1612938154835,"results":"293","hashOfConfig":"273"},{"size":773,"mtime":1610729184252,"results":"294","hashOfConfig":"273"},{"size":606,"mtime":1613555079886,"results":"295","hashOfConfig":"273"},{"size":1723,"mtime":1613715466565,"results":"296","hashOfConfig":"273"},{"size":1197,"mtime":1610436627100,"results":"297","hashOfConfig":"273"},{"size":813,"mtime":1613718348130,"results":"298","hashOfConfig":"273"},{"size":1821,"mtime":1613729648389,"results":"299","hashOfConfig":"273"},{"size":4463,"mtime":1613577007052,"results":"300","hashOfConfig":"273"},{"size":4463,"mtime":1613577007048,"results":"301","hashOfConfig":"273"},{"size":8181,"mtime":1613555079882,"results":"302","hashOfConfig":"273"},{"size":8181,"mtime":1613555079884,"results":"303","hashOfConfig":"273"},{"size":9300,"mtime":1613279283180,"results":"304","hashOfConfig":"273"},{"size":4558,"mtime":1613729924971,"results":"305","hashOfConfig":"273"},{"size":7689,"mtime":1613729963626,"results":"306","hashOfConfig":"273"},{"size":1136,"mtime":1613729690671,"results":"307","hashOfConfig":"273"},{"size":2557,"mtime":1613729849220,"results":"308","hashOfConfig":"273"},{"size":4775,"mtime":1613729781444,"results":"309","hashOfConfig":"273"},{"size":7823,"mtime":1613729240727,"results":"310","hashOfConfig":"273"},{"size":3149,"mtime":1613729372893,"results":"311","hashOfConfig":"273"},{"size":1117,"mtime":1613729587978,"results":"312","hashOfConfig":"273"},{"size":12102,"mtime":1613727504368,"results":"313","hashOfConfig":"273"},{"size":5357,"mtime":1613730324100,"results":"314","hashOfConfig":"273"},{"size":8780,"mtime":1613729915789,"results":"315","hashOfConfig":"273"},{"size":13972,"mtime":1613730108080,"results":"316","hashOfConfig":"273"},{"size":3894,"mtime":1613730465527,"results":"317","hashOfConfig":"273"},{"size":2443,"mtime":1613730007753,"results":"318","hashOfConfig":"273"},{"size":6162,"mtime":1613730059601,"results":"319","hashOfConfig":"273"},{"size":3527,"mtime":1613728609182,"results":"320","hashOfConfig":"273"},{"size":5392,"mtime":1613728673988,"results":"321","hashOfConfig":"273"},{"size":6951,"mtime":1613725159122,"results":"322","hashOfConfig":"273"},{"size":9919,"mtime":1613725137667,"results":"323","hashOfConfig":"273"},{"size":4338,"mtime":1612534671829,"results":"324","hashOfConfig":"273"},{"size":6808,"mtime":1613728591183,"results":"325","hashOfConfig":"273"},{"size":4956,"mtime":1613728102509,"results":"326","hashOfConfig":"273"},{"size":4276,"mtime":1613738140679,"results":"327","hashOfConfig":"273"},{"size":7862,"mtime":1613728419534,"results":"328","hashOfConfig":"273"},{"size":5611,"mtime":1613727891693,"results":"329","hashOfConfig":"273"},{"size":5726,"mtime":1613727753849,"results":"330","hashOfConfig":"273"},{"size":2585,"mtime":1613728631000,"results":"331","hashOfConfig":"273"},{"size":2541,"mtime":1613727962897,"results":"332","hashOfConfig":"273"},{"size":6446,"mtime":1613728257552,"results":"333","hashOfConfig":"273"},{"size":1176,"mtime":1613729719796,"results":"334","hashOfConfig":"273"},{"size":6436,"mtime":1613730182352,"results":"335","hashOfConfig":"273"},{"size":7115,"mtime":1613730428242,"results":"336","hashOfConfig":"273"},{"size":14903,"mtime":1613730585350,"results":"337","hashOfConfig":"273"},{"size":3809,"mtime":1613730399671,"results":"338","hashOfConfig":"273"},{"size":7941,"mtime":1613730253425,"results":"339","hashOfConfig":"273"},{"size":7007,"mtime":1613730093474,"results":"340","hashOfConfig":"273"},{"size":6175,"mtime":1613730686579,"results":"341","hashOfConfig":"273"},{"size":4643,"mtime":1613728833922,"results":"342","hashOfConfig":"273"},{"size":1136,"mtime":1613729748439,"results":"343","hashOfConfig":"273"},{"size":5521,"mtime":1613728803328,"results":"344","hashOfConfig":"273"},{"size":13242,"mtime":1613722366939,"results":"345","hashOfConfig":"273"},{"size":10707,"mtime":1613727056146,"results":"346","hashOfConfig":"273"},{"size":3867,"mtime":1613729048988,"results":"347","hashOfConfig":"273"},{"size":5023,"mtime":1613729106402,"results":"348","hashOfConfig":"273"},{"size":2452,"mtime":1613728728789,"results":"349","hashOfConfig":"273"},{"size":3473,"mtime":1613714801695,"results":"350","hashOfConfig":"273"},{"size":682,"mtime":1612505280494,"results":"351","hashOfConfig":"273"},{"size":1600,"mtime":1610266066804,"results":"352","hashOfConfig":"273"},{"size":1399,"mtime":1610543862366,"results":"353","hashOfConfig":"273"},{"size":2723,"mtime":1613730300055,"results":"354","hashOfConfig":"273"},{"size":1515,"mtime":1613728073991,"results":"355","hashOfConfig":"273"},{"size":8273,"mtime":1613728206069,"results":"356","hashOfConfig":"273"},{"size":832,"mtime":1612938154805,"results":"357","hashOfConfig":"273"},{"size":682,"mtime":1611154119482,"results":"358","hashOfConfig":"273"},{"size":828,"mtime":1609511739548,"results":"359","hashOfConfig":"273"},{"size":949,"mtime":1613555079880,"results":"360","hashOfConfig":"273"},{"size":2025,"mtime":1613574182415,"results":"361","hashOfConfig":"273"},{"size":1675,"mtime":1613728933847,"results":"362","hashOfConfig":"273"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},"andvhl",{"filePath":"366","messages":"367","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"365"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"365"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"365"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"365"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"365"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"365"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"365"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"365"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"365"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"365"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"365"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"365"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"365"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"365"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"365"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"365"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"365"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"365"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"365"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"365"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"365"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"365"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"365"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"365"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"365"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"365"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"365"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"365"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"365"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"365"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"365"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"365"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"365"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"365"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"365"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"365"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"365"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"365"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"365"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"365"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"365"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"365"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"365"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"365"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"365"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"365"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"365"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"365"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"365"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"365"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"365"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"365"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"365"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"365"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"365"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"365"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"365"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"365"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"365"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"365"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"365"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"365"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"605"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},"dhplhe",{"filePath":"611","messages":"612","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"610"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"610"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"610"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"610"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"610"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"610"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"610"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"610"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"610"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"610"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"610"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"610"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"610"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"610"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"610"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"610"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"610"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"610"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"610"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"610"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"610"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"610"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"610"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"610"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"610"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"610"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"610"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"610"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"610"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"610"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"610"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"610"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"610"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"610"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"610"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"610"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"610"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"610"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"610"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"610"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"610"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"610"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"610"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"610"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"610"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"610"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"610"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"610"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"610"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"610"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"610"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"610"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"610"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"610"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"610"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"610"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"610"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"610"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"610"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"610"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"610"},"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js",[],["789","790"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js",["791","792","793","794","795","796","797","798"],"import './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { AuthProvider } from './util/Auth';\r\nimport PrivateRoute from \"./util/AuthRoute\";\r\n\r\n// User ------------------------------------------------------\r\nimport LoginUI from './User/LoginUI';\r\nimport ResetPasswordUI from './User/ResetPasswordUI';\r\n\r\n// System Admin ----------------------------------------------\r\nimport SysAdm from \"./SystemAdmin/SysAdm\";\r\n\r\n// Patient ---------------------------------------------------\r\nimport Patient from './Patient/Patient';\r\nimport RegisterUI  from './Patient/RegisterUI';\r\n\r\n// Medical Doctor --------------------------------------------\r\nimport MedDoc from './MedicalDoctor/MedDoc'\r\n\r\n// Medical Admin ---------------------------------------------\r\nimport MedAdm from './MedicalAdmin/MedAdm'\r\n\r\nimport NoMatch from './noMatch'\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n      <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          // User Login Page\r\n          <Route exact path=\"/\" component={LoginUI}/>\r\n\r\n          // Patient Create New Account Page\r\n          <Route path=\"/register\" component={RegisterUI}/>\r\n\r\n          // User Reset Password Page\r\n          <Route path=\"/resetPassword\" component={ResetPasswordUI}/>\r\n\r\n          // System admin Main Page ----------------------------------------\r\n          <PrivateRoute path=\"/SysAdm\" component={SysAdm} />\r\n\r\n          // Patient Main Page ---------------------------------------------\r\n          <PrivateRoute path=\"/Patient\" component={Patient}/>\r\n\r\n          // Medical Doctor Main Page --------------------------------------\r\n          <PrivateRoute path=\"/MedDoc\" component={MedDoc}/>\r\n\r\n          // Medical Admin Main Page ---------------------------------------\r\n          <PrivateRoute path=\"/MedAdm\" component={MedAdm}/>\r\n          \r\n          // Display error if path does not match\r\n          <Route path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n          \r\n        </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js",["799"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\n// authcontext helps to get current logged in user by firebase\r\n// it contains all the firebase functions like login, signup, reset password, logout,\r\n// delete account, update passowrd and email etc which can be exported and used in the rest of \r\n// program\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function deleteAccount(currentUser){\r\n    return auth.delete(currentUser)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js",["800","801","802","803","804","805"],"import React, {useState} from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { auth, firestore } from '../firebase';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nfunction LoginUI() {\r\n    //useStates react hooks\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const {login} = useAuth();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const {currentUser} = useAuth();\r\n\r\n    //handle submit function logs user in by calling the firebase login function\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(Email, Password);\r\n            history.push(\"/Patient\");\r\n        }catch(error) {\r\n            setError(error.message);\r\n        }\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h1 className= \"text-center mb-4\" style={{\r\n                     fontSize: '2em'\r\n                 }}>MyAppointment</h1>\r\n                 <h2 className= \"text-center mb-4\"> Login</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        value={Password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Button className=\"w-100\" type=\"submit\">Login</Button>\r\n                 </Form>\r\n                 <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/resetPassword\">Forgot Password?</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Don't have an account? <Link to=\"/register\"><u>Join Now!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js",["806","807","808","809","810","811","812","813","814","815","816"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { auth, firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport {useAuth} from '../util/Auth'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\nfunction RegisterUI() {\r\n\r\n   //useStates\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Password, setPassword] = useState(\"\"); \r\n   const [ConfirmPassword, setConfirmPassword] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const history = useHistory();\r\n   let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const NRICRef = useRef();\r\n   const AddressRef = useRef();\r\n   const DOBRef = useRef();\r\n   const EmailRef = useRef();\r\n   const TelephoneRef = useRef();\r\n   const PasswordRef = useRef();\r\n   const ConfirmPasswordRef = useRef();\r\n\r\n   const {signup} = useAuth()\r\n   const {currentUser} = useAuth()\r\n\r\n   // Check Validity\r\n   const isNumber = /\\d/;\r\n   const isSpecChar = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\r\n   const isLower = /[a-z]/;\r\n   const isUpper = /[A-Z]/;\r\n\r\n   const [passwordFocused, setPasswordFocused] = useState(false);\r\n   const [passwordValidity, setPasswordValidity] = useState ({\r\n      minChar: null,\r\n      lower: null,\r\n      upper: null,\r\n      number: null,\r\n      specialChar: null\r\n   });\r\n\r\n   const submitCreateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your account has been created successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   const onChangePassword = password =>\r\n   {\r\n      setPassword(password);\r\n      setPasswordValidity({\r\n         minChar: password.length >=8 ? true : false,\r\n         lower: isLower.test(password) ? true : false,\r\n         upper: isUpper.test(password) ? true : false,\r\n         number: isNumber.test(password) ? true : false,\r\n         specialChar: isSpecChar.test(password) ? true : false\r\n      })\r\n   }\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      if(Password !== ConfirmPassword)\r\n      {\r\n         return setError(\"Passwords do not match\")\r\n      }\r\n\r\n      if (passwordValidity.minChar == false || passwordValidity.lower == false || passwordValidity.upper == false || passwordValidity.number == false || passwordValidity.specialChar == false)\r\n      {\r\n         return setError(\"Password do not meet the requirement\");\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         await signup(Email, Password) \r\n\r\n         firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            NRIC: NRIC,\r\n            Address: Address,\r\n            DOB: DOB,\r\n            Email: Email.toLowerCase(),\r\n            Telephone: Telephone,\r\n            Role: \"Patient\",\r\n         })\r\n         .then(() => {\r\n            submitCreateAlert()\r\n         })\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(URI+\"/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setAddress(\"\");\r\n      setDOB(\"\");\r\n      setEmail(\"\");\r\n      setTelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setPasswordFocused(false);\r\n      };\r\n\r\n   return (\r\n      <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n          <IdleTimerContainer></IdleTimerContainer>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create your Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control\r\n                        ref={NRICRef}\r\n                        value={NRIC}\r\n                        onChange={(e) => setNRIC(e.target.value)} \r\n                        pattern = \"[s S| t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={AddressRef}\r\n                        value={Address}\r\n                        onChange={(e) => setAddress(e.target.value)} \r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        ref={DOBRef}\r\n                        value={DOB}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)} \r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        ref={TelephoneRef}\r\n                        value={Telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Form.Group id = \"Password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={PasswordRef}\r\n                        value={Password}\r\n                        onFocus = {() => setPasswordFocused(true)}\r\n                        onChange={(e) => onChangePassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"ConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={ConfirmPasswordRef}\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n\r\n                     { passwordFocused && <PasswordStrengthIndicator validity={passwordValidity}/>}\r\n\r\n                     <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                 </Form>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/\"><u>Login!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default RegisterUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js",["817"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport DoctorRoute from \"../util/DoctorRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MDHomepageUI from \"../MedicalDoctor/MDHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalDoctor/changePwUI\";\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticle\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticle\";\r\nimport CreateMPUI from \"../MedicalDoctor/CreateMPUI\";\r\nimport ViewPatientProfileUI from \"../MedicalDoctor/ViewPatientProfileUI\";\r\nimport CreateMedicalRecord from \"../MedicalDoctor/CreateMedicalRecord\";\r\nimport EditMedicalRecord from \"../MedicalDoctor/EditMedicalRecord\";\r\nimport TransferMedicalRecord from \"../MedicalDoctor/TransferMedicalRecord\";\r\nimport ViewMPUI from \"../MedicalDoctor/ViewMPUI\";\r\nimport ViewAllocatedPatientUI from \"../MedicalDoctor/ViewAllocatedPatientUI\"\r\nimport DocRescheduleUI from \"../MedicalDoctor/DocRescheduleUI\";\r\nimport CreateMC from \"../MedicalDoctor/CreateMC\"\r\nimport ViewMedicalCertificate from \"../MedicalDoctor/ViewMedicalCertificate\"\r\n\r\nconst MDRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            {/* // Medical Doctor Homepage */}\r\n            <DoctorRoute exact path= {`${path}`} component={MDHomepageUI} role={user.Role}/>\r\n\r\n            {/* // View My Profile */}\r\n            <DoctorRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <DoctorRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Profile */}\r\n            <DoctorRoute exact path={`${path}/PatientProfile`} component={ViewPatientProfileUI} role={user.Role}/>\r\n\r\n            {/* // craete medical record */}\r\n            <DoctorRoute exact path={`${path}/CreateMedicalRecord`} component={CreateMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // edit medical record */}\r\n            <DoctorRoute exact path={`${path}/EditMedicalRecord`} component={EditMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // transfer medical record */}\r\n            <DoctorRoute exact path={`${path}/TransferMedicalRecord`} component={TransferMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Document */}\r\n            <DoctorRoute exact path={`${path}/CreateMP`} component={CreateMPUI} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Certificate */}\r\n            <DoctorRoute exact path={`${path}/CreateMC`} component={CreateMC} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Record */}\r\n            <DoctorRoute exact path={`${path}/ViewMP`} component={ViewMPUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Certicficate */}\r\n            <DoctorRoute exact path={`${path}/ViewMC`} component={ViewMedicalCertificate} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Schedule`} component={ViewAllocatedPatientUI} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Reschedule`} component={DocRescheduleUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI} />\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            {/* // Create New Health Post */}\r\n            <DoctorRoute path={`${path}/ViewHealthArticle/new-article`} component={NewArticle} role = {user.Role}/>\r\n\r\n            {/* // Edit Article */}\r\n            <DoctorRoute path={`${path}/edit-article`} component={EditArticle}/>\r\n            \r\n\r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n            \r\n        </Switch>\r\n    )}\r\n\r\nexport default MDRoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js",["818","819","820"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport PrivateRoute from \"../util/AuthRoute\";\r\nimport PatientRoute from \"../util/PatientRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport { AuthProvider } from '../util/Auth';\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport PHomePageUI from \"../Patient/PHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../Patient/changePwUI\";\r\nimport ViewMyMPUI from \"../Patient/ViewMyMPUI\"\r\nimport UserAppointmentUI from '../Patient/userAppointmentUI';\r\nimport BookAppointmentUI from '../Patient/BookAppointmentUI';\r\nimport ResAppointmentUI from '../Patient/ResAppointmentUI';\r\nimport CancelAppointmentUI from '../Patient/CancelAppointmentUI';\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport PatientViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\nimport DoctorProfile from \"../Patient/doctorProfile\";\r\nimport SearchDoctor from \"../Patient/searchDoctor\";\r\nimport ScheduleAppointmentUI from \"../Patient/ScheduleAppointmentUI\"\r\nimport ViewIndividualMPUI from \"../Patient/ViewIndividualMPUI\";\r\nimport ViewMC from \"../Patient/ViewMC\";\r\nimport ViewReceipt from \"../Patient/ViewReceipt\";\r\n\r\nconst PRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            <PatientRoute exact path= {`${path}`} component={PHomePageUI} role={user.Role}/>\r\n\r\n            {/* // My Profile */}\r\n            <PatientRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <PatientRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Medical Profile */}\r\n            <PatientRoute exact path={`${path}/MedicalProfile`} component={ViewMyMPUI} role={user.Role}/>\r\n\r\n            {/* // Individual Medical Profile */}\r\n            <PatientRoute exact path={`${path}/ViewMedicalProfile`} component={ViewIndividualMPUI} role={user.Role}/>\r\n\r\n            {/* // View MC */}\r\n            <PatientRoute exact path={`${path}/ViewMC`} component={ViewMC} role={user.Role}/>\r\n\r\n            {/* // View Receipt */}\r\n            <PatientRoute exact path={`${path}/ViewReceipt`} component={ViewReceipt} role={user.Role}/>\r\n\r\n            {/* // Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment`} component={UserAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Book Apointment */}\r\n            <PatientRoute exact path={`${path}/bookAppointment/`} component={BookAppointmentUI} role={user.Role}/>\r\n            <PatientRoute exact path={`${path}/scheduleAppointment/`} component={ScheduleAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={PatientViewArticle}/>\r\n\r\n            {/* // Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/searchDoctor`} component={SearchDoctor} role={user.Role}/>\r\n\r\n            {/* // Individual Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/doctorProfile/:id`} component={DoctorProfile} role={user.Role}/>\r\n            \r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n        </Switch>\r\n    )}\r\n\r\nexport default PRoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js",["821","822","823","824","825","826","827","828","829","830","831"],"import React, {useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport MedAdmRoute from \"../util/MedAdmRoute\"\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MAHomepageUI from \"../MedicalAdmin/MAHomepageUI\";\r\nimport ResAppointmentUI from \"../MedicalAdmin/ResAppointmentUI\";\r\nimport CancelAppointmentUI from \"../MedicalAdmin/CancelAppointmentUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalAdmin/changePwUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticleMedAdm\";\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticleMedAdm\";\r\nimport ViewDoctorScheduleUI from \"../MedicalAdmin/ViewDoctorScheduleUI\";\r\nimport CreateFollowUpUI from \"../MedicalAdmin/CreateFollowUpUI\"\r\n\r\nconst MARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Medical Admin Homepage\r\n            <MedAdmRoute exact path= {`${path}`} component={MAHomepageUI} role={user.Role}/>\r\n\r\n            // View My Profile\r\n            <MedAdmRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <MedAdmRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            // View Doctor schedule\r\n            <MedAdmRoute exact path={`${path}/Schedule`} component={ViewDoctorScheduleUI} role={user.Role}/>\r\n\r\n            // Create Follow Up Appointment\r\n            <MedAdmRoute exact path={`${path}/Create`} component={CreateFollowUpUI} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route  path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            // Create New Health Post\r\n            <MedAdmRoute path={`${path}/ViewHealthArticle/new-article`} component={NewArticle} role={user.Role}/>\r\n\r\n            // Edit Article\r\n            <MedAdmRoute path={`${path}/edit-article`} component={EditArticle} role={user.Role}/>\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default MARoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js",["832"],"import Reeact, {useRef, useState} from 'react'\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { auth } from '../firebase';\r\nimport Modal from 'react-modal'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nModal.setAppElement('#root')\r\n\r\n// this is count down timer to monitor users activity\r\n// if user stays idle while logged in the counter automatically logs the user out\r\nfunction IdleTimerContainer(){\r\n    const [modalIsOpen, setModalIsOpen] = useState(false) \r\n    const idleTimerRef = useRef(null)\r\n    const sessionTimeoutRef = useRef(null)\r\n\r\n    const onIdle = () => {\r\n        setModalIsOpen(true)\r\n        //timeout within 5 secs\r\n        sessionTimeoutRef.current = setTimeout(logOut, 5 * 1000)\r\n    }\r\n\r\n    const stayActive = () => {\r\n        setModalIsOpen(false)\r\n        clearTimeout(sessionTimeoutRef.current)\r\n    }\r\n\r\n    const logOut = () => {\r\n        setModalIsOpen(false)\r\n        auth.signOut()\r\n        clearTimeout(sessionTimeoutRef.current)\r\n    }\r\n\r\n\r\nreturn (\r\n    <div>\r\n        {/* {\r\n        isLoggedIn ? <h2>Hello Jas</h2>: <h2>Hello Guest</h2>\r\n        } */}\r\n        <Container className=\"d-flex align-items-center justify-content-center\">\r\n        <Modal isOpen = {modalIsOpen}>\r\n            <h1 style = {{fontSize: \"60px\"}}>You've been idle for awhile!</h1>\r\n            <h1 style = {{fontSize: \"30px\"}}>You will be logged out soon</h1>\r\n            <div>\r\n                <button onClick ={logOut}>Log me out</button>\r\n                <button onClick = {stayActive}>Keep me logged in</button>  \r\n            </div>\r\n        </Modal>\r\n        </Container>\r\n        <IdleTimer ref = {idleTimerRef}\r\n         timeout = {1000 * 60 * 15} //Session will time out within 15 minutes\r\n          onIdle = {onIdle}>\r\n        </IdleTimer>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default IdleTimerContainer","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js",["833","834","835","836","837","838","839","840","841","842","843","844"],"import React, {useState} from 'react';\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport SAHomePageUI from \"../SystemAdmin/SAHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ViewAllAccountUI from \"../SystemAdmin/ViewAllAccountUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ChangePasswordUI from \"../SystemAdmin/changePwUI\";\r\nimport CreateAccountUI from \"../SystemAdmin/CreateAccountUI\";\r\nimport ViewIndividualAccountUI from \"../SystemAdmin/ViewIndividualAccountUI\";\r\nimport ViewAllStaffAccount from \"../SystemAdmin/ViewAllStaffAccount\";\r\nimport ViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\nimport ConfirmDelete from \"../SystemAdmin/confirmDelete\";\r\n\r\nimport SystemAdminRoute from \"../util/SystemAdminRoute\";\r\n\r\n\r\nconst SARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Sys Adm Homepage\r\n            <SystemAdminRoute exact path= {`${path}`} component={SAHomePageUI} role={user.Role}/>\r\n\r\n            // My Profils\r\n            <SystemAdminRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <SystemAdminRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            // View All Account\r\n            <SystemAdminRoute exact path= {`${path}/viewAllAccount`} component={ViewAllAccountUI} role={user.Role} />\r\n\r\n            // Create New Account\r\n            <SystemAdminRoute exact path={`${path}/viewAllAccount/createAccount`} component={CreateAccountUI} role={user.Role}/>\r\n\r\n            // View Individual Account\r\n            <SystemAdminRoute exact path={`${path}/viewIndvAcc`} component={ViewIndividualAccountUI} role={user.Role}/>\r\n\r\n            // View Individual Account\r\n            <SystemAdminRoute exact path={`${path}/confirmDel`} component={ConfirmDelete} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            //View All Staff\r\n            <SystemAdminRoute path={`${path}/viewAllStaffAccount`} component={ViewAllStaffAccount} role={user.Role}/>\r\n\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default SARoute;\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js",["845"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePw'}\r\n        ]},\r\n\r\n    {name: 'Medical Profile', to: '/MedicalProfile', icon: '/icons/medicalProfile.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Appointment', to: '/Appointment', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'Doctor Profile', to: '/searchDoctor', icon: '/icons/doctor.svg', \r\n       subMenuItems: []}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js",["846"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n   {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n       \r\n   {name: 'My Profiles', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n      subMenuItems: [\r\n         {name: 'Change Password', to: '/changePW'}\r\n      ]},\r\n\r\n   {name: 'Manage Account', to: '/viewAllAccount', icon: '/icons/manageAccount.svg', \r\n      subMenuItems: [\r\n         {name: 'Create New Account', to: '/createAccount'}\r\n      ]},\r\n\r\n   {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n      subMenuItems: []}\r\n];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js",["847"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Patient Profile', to: '/PatientProfile', icon: '/icons/patient.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js",["848"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems:[]},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js",["849","850","851"],"import React, {useState} from 'react';\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport { firestore, auth } from '../../firebase';\r\nimport {useAuth} from '../../util/Auth';\r\n\r\n\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #2B3856; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #95B9C7;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand, .navbar-brand:hover {\r\n    font-size: 1.4em;\r\n    color: #98AFC7;\r\n    cursor: default;\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\n\r\nconst NaviBar = () => {\r\n\r\n  const {currentUser} = useAuth()\r\n  const [users, setUsers] = useState([])\r\n  //fetch user data\r\n  React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Users\")\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n      };\r\n      fetchData();\r\n   }, [])\r\n   const user = {...users[0]}\r\n\r\n   function deleteUser(){\r\n    currentUser.delete().then(function() {\r\n        alert(\"Exit successfully\")\r\n      }).catch(function(error) {\r\n        alert(error)\r\n      });  \r\n}\r\n\r\n    return(\r\n        <Styles>\r\n        <Navbar>\r\n            <Navbar.Brand>My Appointment</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n              <Nav className=\"ml-auto\">\r\n               <Nav.Item><Nav.Link onClick={() => auth.signOut()}>Logout</Nav.Link></Nav.Item>\r\n              </Nav>\r\n        </Navbar>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default NaviBar;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js",["852","853"],"import React, { useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport {useRouteMatch} from 'react-router-dom';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction MyProfilePageUI() {\r\n\r\n   // react hooks\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Role] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n\r\n   const [enableFields, setEnableFields] = useState(true);\r\n   const [editEnabled, setEditEnabled] = useState(false);\r\n   const[updateEnabled, setUpdateEnabled] = useState(true);\r\n   const { currentUser } = useAuth();\r\n   const { updateEmail } = useAuth();\r\n   const [Users, setUsers] = useState([]);\r\n\r\n   const {path} = useRouteMatch();\r\n\r\n   //fetches data on render\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Users\").limit(1)\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n   function onEdit(){\r\n      setEditEnabled(true);\r\n      setUpdateEnabled(false);\r\n      setEnableFields(false);\r\n      setFirstName(Users[0].FirstName);\r\n      setLastName(Users[0].LastName);\r\n      setNRIC(Users[0].NRIC);\r\n      setDOB(Users[0].DOB);\r\n      setAddress(Users[0].Address);\r\n      setEmail(Users[0].Email);\r\n      setTelephone(Users[0].Telephone);\r\n   }\r\n\r\n  \r\n   //alert message\r\n   const submitUpdate = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your ' + Users.map(user => user.Role.toLowerCase()) + ' account has been updated successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit function updates use profile data in the database\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      try{\r\n         setError(\"\");\r\n         setUpdateEnabled(true);\r\n         if(currentUser.email !== Email)\r\n         {\r\n            await updateEmail(Email);\r\n         }\r\n         //update data in firestore collection\r\n         firestore.collection(\"Users\").doc(Users[0].id)\r\n            .update({\r\n               FirstName: FirstName,\r\n               LastName: LastName,\r\n               NRIC: NRIC,\r\n               Address: Address,\r\n               DOB: DOB,\r\n               Email: Email.toLowerCase(),\r\n               Telephone: Telephone\r\n            })\r\n            .then(() => {\r\n               submitUpdate()\r\n            })\r\n      }catch(error){\r\n         setError(error.message);\r\n      }\r\n      setEnableFields(true);\r\n      setUpdateEnabled(true);\r\n      setEditEnabled(false);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n            {Users.map(user => \r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">My Profile</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.FirstName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.LastName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.NRIC} \r\n                        disabled = {true} \r\n                        onChange={(e) => setNRIC(e.target.value)}\r\n                        pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Address} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.DOB} \r\n                        disabled = {true}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Email} \r\n                        disabled = {true} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Telephone} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <Button onClick={onEdit} disabled = {editEnabled} className=\"w-100 my-2\">Edit</Button>\r\n                     <Button disabled = {updateEnabled} className=\"w-100 my-2\" type=\"submit\">Update</Button>\r\n                     <Button href = {`${path}`} disabled = {updateEnabled} className=\"w-100 my-2\">Cancel</Button>\r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n            )}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyProfilePageUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js",["854"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\n// this route is for logged in doctor that has been autheticated\r\nfunction DoctorRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Patient\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/Patient\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n      {role === \"System Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/sysadm\"/>)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js",["855","856"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction EditMedicalRecord() {\r\n    //react hooks\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n    const {path} = useRouteMatch();\r\n\r\n    //useStates\r\n    const [allergies, setAllergies] = useState(\"\");\r\n    const [demographics, setDemographics] = useState(\"\");\r\n    const [diagnoses, setDiagnoses] = useState(\"\");\r\n    const [labResults, setLabResults] = useState(\"\");\r\n    const [medicalHistory, setMedicalHistory] = useState(\"\");\r\n    const [vitals, setVitals] = useState(\"\");\r\n    const [error, setError] = useState(\"\"); \r\n    const [medRec, setMedRec] = useState([]);\r\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n\r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setAllergies(md.Allergies);\r\n        setDemographics(md.Demographics);\r\n        setDiagnoses(md.Diagnoses);\r\n        setLabResults(md.LabResults);\r\n        setMedicalHistory(md.MedicalHistory);\r\n        setVitals(md.Vitals);\r\n    }\r\n\r\n    // alert box\r\n    const medicalRecordUpdatedAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Patient medical record has been updated successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      // handle submit function updates medical records data in the firebase\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n                Allergies : allergies,\r\n                Demographics : demographics,\r\n                Diagnoses : diagnoses,\r\n                LabResults : labResults,\r\n                MedicalHistory : medicalHistory,\r\n                Vitals : vitals,\r\n            })\r\n            .then(() => {\r\n                medicalRecordUpdatedAlert()\r\n                history.push(\"/MedDoc/PatientProfile\");\r\n             })\r\n        }\r\n        catch(error){\r\n            return setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n                    <Card>\r\n                        <h2 className= \"text-center mb-4 mt-3\">View/Edit Medical Record</h2>\r\n                        <Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id = \"Name\">\r\n                                <Form.Label>Patient Name</Form.Label>\r\n                                <Form.Control \r\n                                    defaultValue = {md.Patient} \r\n                                    disabled = {true} \r\n                                    type=\"text\" required/>\r\n                                </Form.Group>\r\n                                <Form.Group id = \"allergies\">\r\n                                <Form.Label>Allergies</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Allergies}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setAllergies(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"demographics\">\r\n                                <Form.Label>Demographics</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Demographics}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDemographics(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"diagnoses\">\r\n                                <Form.Label>Diagnoses</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Diagnoses}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDiagnoses(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"labResults\">\r\n                                <Form.Label>Lab Results</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.LabResults}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setLabResults(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"medicalHistory\">\r\n                                <Form.Label>Medical History</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.MedicalHistory}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setMedicalHistory(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"vitals\">\r\n                                <Form.Label>Vitals</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Vitals}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setVitals(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                                <Button type=\"submit\" className=\"w-100 my-2\" disabled={fieldsDisabled}>Update Medical Record</Button>\r\n                                <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js",["857","858","859"],"import React,{useState} from 'react';\r\nimport {Button, Card, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport \"../Patient/UserAppointmentUI.css\";\r\nimport moment from 'moment';\r\nimport Calendar from 'react-awesome-calendar';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\n\r\n\r\nconst Moment = require('moment')\r\n\r\nconst convertTime12to24 = (time12h) => {\r\n  const [time, modifier] = time12h.split(' ');\r\n\r\n  let [hours, minutes] = time.split(':');\r\n\r\n  if (hours === '12') {\r\n    hours = '00';\r\n  }\r\n\r\n  if (modifier === 'PM') {\r\n    hours = parseInt(hours, 10) + 12;\r\n  }\r\n\r\n  return `${hours}:${minutes}:00`;\r\n}\r\n\r\nfunction ViewAllocatedPatientUI() {\r\n  // react hooks\r\n   const [toggleState, setToggleState] = useState(1);\r\n   const [appointments, setAppointments] = useState([]);\r\n   const [doctor, setDoctor] = useState([]);\r\n   const {currentUser} = useAuth();\r\n\r\n   // toggle tab\r\n   const toggleTab = (index) => {\r\n      setToggleState(index);\r\n    };\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Appointment\")\r\n         .where(\"DocEmail\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n          firestore.collection(\"Medical Doctors\").limit(1)\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n   //filter upcoming\r\n   const filterUpcoming = appointments.filter(app =>{\r\n    return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) >= new Date();\r\n })\r\n\r\n  //filter past\r\n  const filterPast = appointments.filter(app =>{\r\n    return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) < new Date();\r\n })\r\n\r\n  //sort according to date and timeslot for past in desc order\r\n  const sortedPast = filterPast.sort((a,b) => \r\n  new Date(b.Date + \" \"+ convertTime12to24(b.Timeslot.substr(0,8)))-\r\n  new Date(a.Date + \" \"+ convertTime12to24(a.Timeslot.substr(0,8)))\r\n)\r\n\r\n   // sort according to date and timeslot ascending order\r\n   const sorted = filterUpcoming.sort((a,b) => \r\n      new Date(a.Date + \" \"+ convertTime12to24(a.Timeslot.substr(0,8)))-\r\n      new Date(b.Date + \" \"+ convertTime12to24(b.Timeslot.substr(0,8)))\r\n   )\r\n\r\n   const events = [];\r\n   const doc = {...doctor[0]};\r\n\r\n   // create event array and populate all future appointments\r\n   for(var i = 0; i < sorted.length; i++)\r\n   {\r\n     // convert to match UTC format\r\n     var fromDate = new Date(sorted[i].Date+\" \"+convertTime12to24(sorted[i].Timeslot.substr(0,8)));\r\n     fromDate.setHours(fromDate.getHours()+8);\r\n     var toDate = new Date(sorted[i].Date+\" \"+convertTime12to24(sorted[i].Timeslot.substr(11,sorted[i].Timeslot.length)));\r\n     toDate.setHours(toDate.getHours()+8);\r\n\r\n     // create event object\r\n      const obj = {\r\n        id : sorted[i].id,\r\n        color : '\t#FFA500',\r\n        from : fromDate,\r\n        to : toDate,\r\n        title : sorted[i].Patient+ \" ( \"+sorted[i].Timeslot+\" )\"\r\n      }\r\n\r\n      //push to array\r\n      events.push(obj);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n        <IdleTimerContainer></IdleTimerContainer>\r\n        <Container>\r\n          <Card>\r\n            <div className=\"text-center\">\r\n          <Card.Title className=\"text-center\">Your Schedule</Card.Title>\r\n          <Card.Img variant=\"left\" src={doc.Image} width=\"220px\"/>\r\n            <Card.Title>{doc.Name}</Card.Title>\r\n            </div>\r\n          </Card>\r\n          </Container>\r\n          <Container>\r\n        <Card className=\"my-5\">\r\n        <Calendar\r\n                events={events}\r\n            />\r\n            </Card>\r\n            </Container>\r\n            <Container className = \"my-5 w-100\">\r\n        <Card>\r\n          <div className=\"bloc-tabs\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Upcoming\r\n        </button>\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Past\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div className={toggleState === 1 ? \"content  active-content\" : \"content\"}>\r\n          <h2>Upcoming Patient To See</h2>\r\n          <hr />\r\n          {sorted.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Patient : {app.Patient}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <Link to={{\r\n                        pathname: '/MedDoc/Reschedule', \r\n                        state:{appointment: app}\r\n            }}><Button className = \"mt-2\"variant=\"primary\">Reschedule</Button></Link>\r\n                <div className=\"col text-right\">\r\n                  {!app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/CreateMP', \r\n                        state:{appointment: app}\r\n            }}><Button>Create Medical Document</Button></Link> : null}\r\n            {app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/ViewMP', \r\n                        state:{appointment: app}\r\n            }}><Button>View/Edit Medical Document</Button></Link> : null}\r\n                </div>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n\r\n        <div className={toggleState === 2 ? \"content  active-content\" : \"content\"}>\r\n          <h2>Past Patient Seen</h2>\r\n          <hr />\r\n          {filterPast.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Patient : {app.Patient}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <div className=\"col text-right\">\r\n                  {!app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/CreateMP', \r\n                        state:{appointment: app}\r\n            }}><Button>Create Medical Document</Button></Link> : null}\r\n            {app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/ViewMP', \r\n                        state:{appointment: app}\r\n            }}><Button>View/Edit Medical Document</Button></Link> : null}\r\n                </div>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n      </Card>\r\n      </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ViewAllocatedPatientUI\r\n\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js",["860","861","862","863","864"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {Link, useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction TransferMedicalRecord() {\r\n    // react hooks\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [searchDoc, setSearchDoc] = useState(\"\");\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     // transfers records to selected doctor\r\n     async function transferRecords(email){\r\n        await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n           AssignedDoc : email\r\n        })\r\n        .then(() => {\r\n            alert(\"Transferred Successfully!\");\r\n            history.push(\"/MedDoc/PatientProfile\");\r\n         })\r\n     }\r\n\r\n     // filters data based on search field text\r\n     let filteredDoc = doctors.filter(doc =>{\r\n         return doc.Name.toLowerCase().includes(searchDoc);\r\n     })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as=\"h3\" className=\"text-center mt-3\"style={{fontWeight:\"bolder\",\r\n                    textDecoration: \"underline\"\r\n                }}>Transfer Medical Record</Card.Title>\r\n                    <Card.Text className=\"mt-4 ml-3\"style={{fontWeight:\"bolder\"}}>Patient Name : {md.Patient}</Card.Text>\r\n                    <Card.Text className=\"ml-3\" style={{fontWeight:\"bolder\"}}>Medical Record ID : {md.id}</Card.Text>\r\n                    <Card.Title as=\"h4\" className=\"text-center mt-3\">Doctor List</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"1%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setSearchDoc(e.target.value)} placeholder = \"Enter Doctor Name...\"/>\r\n                    </div>\r\n                    <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"80vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Doctor</th>\r\n                                <th scope=\"col\" className=\"text-center\">Transfer Medical Record</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredDoc.map(doc => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{doc.Name}</td>\r\n                                <td className=\"text-center\"> <Button onClick={(e)=>transferRecords(doc.Email)}>Transfer Record</Button></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                </Card>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js",["865","866"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport {useAuth} from \"../util/Auth\"\r\n\r\n// this route is for patient that has been already been authenticated\r\nfunction PatientRoute({ component: Component, role, ...rest }) {\r\n\r\n    return (\r\n        <div>\r\n        {role === \"Patient\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {role === \"System Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/sysadm\"/>)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js",["867","868"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {Link, useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction DocRescheduleUI() {\r\n    // react hooks\r\n    const {state} = useLocation()\r\n    const {appointment} = state\r\n    const history = useHistory();\r\n    const {currentUser} = useAuth();\r\n\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [doctor, setDoctor] = useState([]);\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n    // feteches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\",\"==\",String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     // alert box\r\n     const resAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     const doct = {...doctor[0]}\r\n\r\n     // handle submit function updates reschedule in firebase and\r\n     // sends email to user\r\n     const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n      setError(\"\");\r\n      if(date === \"\" || selectedSlot === \"\")\r\n      {\r\n          return setError(\"Date Or Timeslot Not Selected\");\r\n      }\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n            Date : date,\r\n            Timeslot: selectedSlot,\r\n        })\r\n        .then(() => {\r\n            resAppointmentAlert()\r\n        })\r\n\r\n        // Send email to user\r\n        let details = {\r\n            date: date,\r\n            doctor: appointment.Doctor,\r\n            timeslot: selectedSlot,\r\n            user: appointment.Patient,\r\n            email: appointment.PatientEmail,\r\n            department: doct.Department\r\n        };\r\n        let response = await fetch(URI+\"/docReschedule\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n        });\r\n        let result = await response.json();\r\n        console.log(result.status);\r\n\r\n        history.push(\"/MedDoc/Schedule\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n\r\n      setSelectedSlot(\"\");\r\n      setDate(\"\");\r\n     }\r\n\r\n     // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(currentUser.email === appointments[j].DocEmail)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n\r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/MedDoc/Schedule'}>\r\n                    <Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocRescheduleUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js",["869"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card,  Container } from \"react-bootstrap\";\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMyMPUI() {\r\n   //react hooks\r\n   const {currentUser} = useAuth();\r\n   const [medDocs, setMedDocs] = useState([]);\r\n\r\n   //fetches data on render\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Medical Documents\")\r\n         .where(\"PatientEmail\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n\r\n    return (\r\n       <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n         <Container>\r\n            <Card>\r\n               <Card.Title className=\"text-center\" style={{\r\n                  fontSize : \"2rem\",\r\n                  marginTop: \"2%\"\r\n               }}>View Your Medical Documents</Card.Title>\r\n               <Card.Title style={{\r\n                  marginTop: \"4%\",\r\n                  marginLeft: '2%',\r\n                  fontSize: '1.5rem',\r\n               }}>List of Documents</Card.Title>\r\n               <hr style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft: \"1.5%\",\r\n                }}/>\r\n                {medDocs.map(doc =>\r\n                <Card style={{\r\n                   maxWidth: \"40rem\",\r\n                   marginLeft: \"1.5%\",\r\n                   marginTop: \"1%\"\r\n                }}>\r\n                   <Card.Header as=\"h5\">Date of Visit : {doc.DateOfVisit}</Card.Header>\r\n                   <Card.Body>\r\n                     {doc.MedicalCertificate === \"\" ?\r\n                   <Card.Title>MC issued : No</Card.Title>: <Card.Title>MC issued : Yes</Card.Title>}\r\n                   <Link to={{\r\n                        pathname: '/Patient/ViewMedicalProfile', \r\n                        state:{document: doc}\r\n            }}><Button style={{\r\n                      marginTop: \"3%\",\r\n                   }}>View Medical Document</Button></Link>\r\n                   </Card.Body>\r\n                </Card>\r\n                )}\r\n            </Card>\r\n         </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ViewMyMPUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js",["870","871","872","873"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction CancelAppointmentUI() {\r\n   const {state} = useLocation();              // access appointment passed from link router\r\n   const {Appointment} = state;                // save appointment data from state\r\n   const [error, setError] = useState(\"\");     // store error message\r\n   const { currentUser } = useAuth();\r\n   const history = useHistory();\r\n   let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n   const cancelAppointmentAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your appointment has been cancelled successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\");\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(Appointment.id).delete()\r\n         .then(() => {\r\n            cancelAppointmentAlert()\r\n         })\r\n\r\n         // Send email to user\r\n         let details = {\r\n            date: Appointment.Date,\r\n            doctor: Appointment.Doctor,\r\n            timeslot: Appointment.Timeslot,\r\n            user: Appointment.Patient,\r\n            email: Appointment.PatientEmail\r\n         };\r\n         let response = await fetch(URI+\"/cancel\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n\r\n         history.push(\"/Patient/Appointment\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n }\r\n\r\n   return (\r\n      <div>\r\n         <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Cancel Appointment</Card.Title>\r\n                <label class=\"note\">The following appointment will be cancelled:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label className=\"my-2\">Appointment Date</Form.Label>\r\n                        <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Date}\r\n                        type=\"date\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"text\">\r\n                     <Form.Label>Appointment Time Slot</Form.Label>\r\n                     <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Timeslot}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Doctor Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Doctor}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Cancel Appointment</Button>\r\n                <Link to={'/Patient/Appointment'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CancelAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js",["874","875"],"import React,{useState} from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport './UserAppointmentUI.css';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction BookAppointmentUI() {\r\n\r\n   //usestates\r\n    const {state} = useLocation();\r\n    const {doctor} = state;\r\n    const {currentUser} = useAuth();\r\n    const [Users, setUsers] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    //fetch data upon rendering\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    return (\r\n        <div>\r\n           <IdleTimerContainer></IdleTimerContainer>\r\n              {Users.map(user => \r\n              <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n              <Card>\r\n               <Card.Body>\r\n                   <h2 className= \"text-center mb-4\">Book a new appointment</h2>\r\n                   <label class=\"note\">Note: You may choose a doctor of your choice or click next without selecting a doctor</label>\r\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                   <Form>\r\n                       <Form.Group id = \"FirstName\">\r\n                          <Form.Label>First Name</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.FirstName} \r\n                          disabled = {true} \r\n                          pattern = \"^[a-z A-Z]+$\"\r\n                          title = \"Please enter character in the range a-z OR A-Z\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"LastName\">\r\n                          <Form.Label>Last Name</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.LastName} \r\n                          disabled = {true} \r\n                          pattern = \"^[a-z A-Z]+$\"\r\n                          title = \"Please enter character in the range a-z OR A-Z\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"NRIC\">\r\n                          <Form.Label>NRIC</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.NRIC} \r\n                          disabled = {true} \r\n                          pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                          title = \"Please enter according to NRIC format\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Address\">\r\n                          <Form.Label>Address</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Address} \r\n                          disabled = {true} \r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"DOB\">\r\n                          <Form.Label>Date Of Birth</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.DOB} \r\n                          disabled = {true}\r\n                          max={moment().format(\"YYYY-MM-DD\")}\r\n                          type=\"date\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Email\">\r\n                          <Form.Label>Email Address</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Email} \r\n                          disabled = {true} \r\n                          type=\"email\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Telephone\">\r\n                          <Form.Label>Telephone</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Telephone} \r\n                          disabled = {true} \r\n                          pattern = \"[0-9]{8}\"\r\n                          title = \"Please enter 8 digits\"\r\n                          type=\"invalid\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Doctor\">\r\n                          <Form.Label><Link to= {\"/Patient/searchDoctor\"}>Select A Doctor Here</Link></Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {doctor.Name} \r\n                          disabled = {true} \r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Link to={{\r\n                        pathname: '/Patient/scheduleAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button className=\"w-100 my-2\" type=\"submit\">Next</Button></Link>\r\n                   </Form>\r\n               </Card.Body>\r\n              </Card>\r\n              </div>\r\n              </Container>\r\n              )}\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default BookAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js",["876","877","878","879","880","881","882","883"],"import React, { Component, useState } from 'react';\r\nimport {Container, Card, Button, Row} from \"react-bootstrap\";\r\nimport { useAuth } from '../util/Auth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { firestore } from '../firebase';\r\nimport './UserAppointmentUI.css';\r\nimport moment from 'moment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nconst convertTime12to24 = (time12h) => {\r\n  const [time, modifier] = time12h.split(' ');\r\n\r\n  let [hours, minutes] = time.split(':');\r\n\r\n  if (hours === '12') {\r\n    hours = '00';\r\n  }\r\n\r\n  if (modifier === 'PM') {\r\n    hours = parseInt(hours, 10) + 12;\r\n  }\r\n\r\n  return `${hours}:${minutes}:00`;\r\n}\r\n\r\nfunction UserAppointmentUI() {\r\n\r\n  const{currentUser} = useAuth();\r\n  const [Email, setEmail] = useState(\"\"); \r\n  const [Users, setUsers] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const doctor = { Name : \"\"};\r\n  const [toggleState, setToggleState] = useState(1);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const toggleTab = (index) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    const fetchData = async () =>{\r\n       firestore.collection(\"Users\").limit(1)\r\n       .where(\"Email\", \"==\", String(currentUser.email))\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n             setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n\r\n       firestore.collection(\"Appointment\")\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n          setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n\r\n       firestore.collection(\"Medical Doctors\")\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n          setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n    };\r\n    fetchData();\r\n }, [])\r\n\r\n const filteredAppointments = appointments.filter(app => app.PatientEmail === currentUser.email)\r\n                                          .sort((a,b) => Date.parse(a.Date) > Date.parse(b.Date) ? 1 : -1)\r\n\r\n //filter upcoming\r\n const filterUpcoming = filteredAppointments.filter(app =>{\r\n  return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) >= new Date();\r\n})\r\n\r\n //filter past\r\n const filterPast = filteredAppointments.filter(app =>{\r\n  return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) < new Date();\r\n})\r\n\r\n  return (\r\n    <div>\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n      <Container className= \"w-100\">\r\n        <Card>\r\n          <Card.Title className = \"my-3 px-5\">{Users.map(user => <h4>{user.FirstName } {user.LastName}</h4>)}\r\n          <div className = \"col text-right\">\r\n          <Link to={{\r\n                        pathname: 'bookAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button type=\"submit\">Book New Appointment</Button></Link>\r\n              </div>\r\n              </Card.Title>\r\n          </Card>\r\n        </Container>\r\n        <Container className = \"my-5 w-100\">\r\n        <Card>\r\n          <div className=\"bloc-tabs\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Upcoming\r\n        </button>\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Past\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div\r\n          className={toggleState === 1 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <h2>Your Upcoming Appointments</h2>\r\n          <hr />\r\n          {filterUpcoming.map(app => \r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Doctor : {app.Doctor}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <Link to={{\r\n                        pathname: 'Appointment/Reschedule', \r\n                        state:{Appointment: app}\r\n            }}><Button variant=\"primary\">Reschedule Appointment</Button></Link>\r\n                <Link to={{\r\n                        pathname: 'Appointment/Cancel', \r\n                        state:{Appointment: app}\r\n            }}><Button className = \"mx-4\" variant=\"primary\">Cancel Appointment</Button></Link>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <h2>Your Past Appointments</h2>\r\n          <hr />\r\n          {filterPast.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Doctor : {app.Doctor}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                {app.DocCreated ? (<Link to={{\r\n                        pathname: 'bookAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button variant=\"primary\">Book Follow-Up</Button></Link>):(<Link to={{\r\n              pathname: 'bookAppointment/', \r\n              state:{doctor: doctor}\r\n  }}><Button variant=\"primary\">Book Again</Button></Link>)}    \r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n      </Card>\r\n      </Container>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserAppointmentUI\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js",["884"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ResAppointmentUI() {\r\n    //react hooks\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {Appointment} = state;         // save appointment data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [doctor, setDoctor] = useState([]);               // store doctor data\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\", \"==\", String(Appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     //alert message\r\n     const confirmReScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      //handle submit function reschedule appointment in firebase and sends email \r\n      // notification to patient\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\");\r\n      if(date === \"\" || selectedSlot === \"\")\r\n      {\r\n          return setError(\"Date Or Timeslot Not Selected\");\r\n      }\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(Appointment.id).update({\r\n            Date : date,\r\n            Timeslot: selectedSlot,\r\n        })\r\n        .then(() => {\r\n            confirmReScheduleAlert()\r\n        })\r\n\r\n        // Send email to user\r\n        let details = {\r\n            date: date,\r\n            doctor: doct.Name,\r\n            timeslot: selectedSlot,\r\n            user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n            email: currentUser.email,\r\n            department: doct.Department\r\n        };\r\n        let response = await fetch(URI+\"/reschedule\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n        });\r\n        let result = await response.json();\r\n        console.log(result.status);\r\n\r\n        history.push(\"/Patient/Appointment\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n\r\n      setSelectedSlot(\"\");\r\n      setDate(\"\");\r\n }\r\n\r\n    // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n    // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n    const doct = {...doctor[0]};\r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(doct.Email === appointments[j].DocEmail)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n    \r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title>Reschedule Your Appointment</Card.Title>\r\n                    <Card.Title>Your Doctor</Card.Title>\r\n                    <Card.Img variant=\"top\" src={doct.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{doct.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {doct.Department}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/Patient/Appointment'}>\r\n                    <Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js",["885","886","887","888","889","890"],"import React,{useState} from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport { auth, firestore } from '../firebase';\r\nimport moment from 'moment';\r\n\r\nfunction ViewMedicalCertificate() {\r\n    // react hooks\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    const [medDocs, setMedDocs] = useState([]);\r\n    const [doc, setDoc] = useState([]);\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",appointment.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    \r\n    const document = {...medDocs[0]};\r\n    const doctor = {...doc[0]};\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            {document.MedicalCertificate === \"\" ? <h1>NO MEDICAL CERTIFICATE</h1> : \r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{document.Patient}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {document.MedicalCertificate} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {document.MCStartDate} and is valid till {document.MCEndDate}</Card.Text>\r\n            <Card.Img src={doctor.Signature}\r\n            style={{maxWidth:\"5%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"77%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '14%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMedicalCertificate\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js",["891"],"import React, { Component } from 'react'\r\nimport {withRouter, Link} from \"react-router-dom\";\r\nimport {Accordion, Card, Button} from \"react-bootstrap\"\r\nimport PatientComment from './PatientComment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nclass DoctorProfile extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            doctor: {},\r\n            isLoaded : false,\r\n            showComments: false,\r\n            comments: []\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    // fetches data on render equivalent to react useEffect\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('doctor')){\r\n                this.setState({\r\n                    doctor: this.props.location.state.doctor\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            return (      \r\n              <div>\r\n                  <IdleTimerContainer></IdleTimerContainer>\r\n                    <div className=\"card w-150\">\r\n                        <div className=\"row no-gutters\">\r\n                        <div className=\"col-auto\">\r\n                            <img src={this.state.doctor.Image} width={300} heigth={250} className=\"img-fluid\" alt=\"\"/>\r\n                        </div>\r\n            <div className=\"col text-center w-75 \">\r\n                <div className=\"card-block px-2\">\r\n                    <h1 className=\"card-title text-center text-muted\">{this.state.doctor.Name}</h1>\r\n                    <p className=\"card-title text-center text-muted\">{this.state.doctor.Specialist}</p>\r\n                    <p className=\"card-text text-center text-muted\">Department : {this.state.doctor.Department}</p>\r\n                    <Link to={{\r\n                   pathname: '/Patient/bookAppointment', \r\n                   state:{doctor: this.state.doctor}\r\n            }}><a href=\"\" className=\"btn btn-primary \">Book Appointment</a></Link>\r\n                    {/* <a href=\"/Patient/appointmentForm\" className=\"btn btn-primary \">Book Appointment</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{backgroundColor:\"#E5E5E5\"}} className=\"card-footer w-100 text-muted\">\r\n            Your Health is our priority\r\n        </div>\r\n  </div>\r\n                    <div>\r\n                        <hr style={{\r\n                                color: \"#eee\",\r\n                                height: \"1px\"\r\n                            }}/>\r\n                    </div>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                         <h4><b>BIOGRAPHY</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body style={{backgroundColor:\"#fff\"}}>{this.state.doctor.Information}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/2987/2987903.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        <h4><b>QUALIFICATION</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>{this.state.doctor.Education}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n            \r\n                    <PatientComment email={this.state.doctor.Email} id = {this.state.doctor.id} /> \r\n                           \r\n                                      \r\n          </div>                                      \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n  }                  \r\n\r\nexport default withRouter(DoctorProfile)\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js",["892","893","894"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ScheduleAppointmentUI() {\r\n\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {doctor} = state;         // save doctor data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [docGPs, setDocGPs] = useState([]);              // store general practitioners\r\n    const [docGP, setDocGP] = useState({...doctor});\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n    \r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Department\", \">=\", \"General Practitioner (Non-specialist)\")\r\n            .where(\"Department\", \"<=\", \"General Practitioner (Non-specialist)\\uF7FF\")\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDocGPs(data.docs.map(doc => ({ ...doc.data(), id: doc.id}))); \r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const confirmScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been booked successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     //handle submit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        if(date === \"\" || selectedSlot === \"\")\r\n        {\r\n            return setError(\"Date Or Timeslot Not Selected\");\r\n        }\r\n        if(docGP.Name === \"\")\r\n        {\r\n            return setError(\"No Doctor was selected!\");\r\n        }\r\n\r\n        try{\r\n            await firestore.collection(\"Appointment\").add({\r\n                Date : date,\r\n                Doctor : docGP.Name,\r\n                Timeslot : selectedSlot,\r\n                Patient : Users[0].FirstName + \" \" + Users[0].LastName,\r\n                PatientEmail : currentUser.email,\r\n                DocEmail : docGP.Email,\r\n                DocCreated : false\r\n            })\r\n            .then(() => {\r\n                confirmScheduleAlert()\r\n            })\r\n            \r\n            // Send email to user\r\n            let details = {\r\n                date: date,\r\n                doctor: docGP.Name,\r\n                timeslot: selectedSlot,\r\n                user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n                email: currentUser.email,\r\n                department: docGP.Department\r\n            };\r\n            let response = await fetch(URI+\"/book\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify(details)\r\n            });\r\n            let result = await response.json();\r\n            console.log(result.status);\r\n\r\n            history.push(\"/Patient/Appointment\");\r\n\r\n          } catch(error){\r\n             return setError(error.message);\r\n          }\r\n        setSelectedSlot(\"\");\r\n        setDate(\"\");\r\n   }\r\n\r\n   //select a random doctor on click\r\n   const selectDoc = (e) => {\r\n       if(doctor.Name === \"\")\r\n            setDocGP({...docGPs[Math.floor(Math.random()*docGPs.length)]});\r\n   }\r\n\r\n     // declare and initialize timeslot array for everyday\r\n      const times = [\"08:00 AM - 09:00 AM\",\r\n      \"09:00 AM - 10:00 AM\",\r\n      \"10:00 AM - 11:00 AM\",\r\n      \"11:00 AM - 12:00 PM\",\r\n      \"01:00 PM - 02:00 PM\",\r\n      \"02:00 PM - 03:00 PM\",\r\n      \"04:00 PM - 05:00 PM\",\r\n      \"05:00 PM - 06:00 PM\",\r\n      \"07:00 PM - 08:00 PM\"\r\n    ];\r\n\r\n    // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n    \r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(docGP.Name === appointments[j].Doctor)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n    \r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            {doctor.Name === \"\" ?(\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title>You did not select a doctor therefore a gerneral practitioner will be assigned to you. Click below to view your assigned doctor.</Card.Title>\r\n                        <Button onClick = {selectDoc} className=\"w-100 my-2\">View my doctor</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Container>\r\n                {docGP.Name !== \"\" ?(\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                    <Card.Img variant=\"top\" src={docGP.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{docGP.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {docGP.Department}\r\n                        </Card.Text>\r\n                        <Link to={{pathname: '/Patient/doctorProfile/'+docGP.id, state:{doctor: docGP}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Container>\r\n                ): \"\"}\r\n            </div>\r\n            ): (\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card >\r\n                    <Card.Title>Doctor Selected</Card.Title>\r\n                    <Card.Img variant=\"top\" src={docGP.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{docGP.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {docGP.Department}\r\n                        </Card.Text>\r\n                        <Link to={{pathname: '/Patient/doctorProfile/'+docGP.id, state:{doctor: docGP}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            )}\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Confirm</Button>\r\n                <Link to={{\r\n                        pathname: '/Patient/bookAppointment', \r\n                        state:{doctor: doctor}\r\n            }}><Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js",["895"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\n// this route is for medical admin that has already been authenticated\r\nfunction MedAdmRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to respctive homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/sysadm\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedAdmRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js",["896","897"],"import React,{useState} from 'react';\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { auth, firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\n\r\nfunction ViewMC() {\r\n    //react hooks\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n\r\n    //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n\r\n    const doctor = {...doc[0]};\r\n    return (\r\n        <div className=\"text-center\">\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            {document.MedicalCertificate === \"\" ? <h1>NO MEDICAL CERTIFICATE</h1> : \r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{document.Patient}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {document.MedicalCertificate} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {document.MCStartDate} and is valid till {document.MCEndDate}</Card.Text>\r\n            <Card.Img src={doctor.Signature}\r\n            style={{maxWidth:\"5%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"77%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '14%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMC\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js",["898","899","900","901","902","903"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\n\r\nfunction ViewIndividualMPUI() {\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n    \r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    const rec = {...doc[0]}\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Medical Document</h2>\r\n             <Card.Body>\r\n                <Form>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Doctor Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {rec.Name} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select \r\n                        value = {document.prescriptions}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.prescriptions.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select \r\n                        value = {document.LabTests}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.LabTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewMC', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewReceipt', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View Receipt</Button></Link>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewIndividualMPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js",["904","905"],"import React,{useState} from 'react'\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport {firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewReceipt() {\r\n    //react hooks\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n\r\n    //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n\r\n    const doctor = {...doc[0]};\r\n    // perform receipt calculation\r\n    const gst = (document.consultFee+document.prescriptionFee+document.testFee)*0.07\r\n    const grandTotal = (document.consultFee+document.prescriptionFee+document.testFee)+gst\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"my-5\" style={{maxWidth:\"800px\"}}>\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"text-right\" style ={{\r\n                        fontFamily : 'helvetica',\r\n                        color: \"violet\",\r\n                    }}>Receipt</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h4\" className=\"text-center\" style={{\r\n                            fontFamily:\"helvetica\",\r\n                            fontStyle: \"italic\",\r\n                        }}>MyAppointment System</Card.Title>\r\n                        <Card.Title as=\"h5\">Patient Name : {document.Patient}</Card.Title>\r\n                        <Card.Text>Date of Visit : {document.DateOfVisit}</Card.Text>\r\n                        <Card.Text>Appointment ID : {document.appointmentID}</Card.Text>\r\n                        <hr style={{\r\n                            color: 'black',\r\n                            backgroundColor: 'green',\r\n                            height: 1,\r\n                            align: \"right\",\r\n                        }}/>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"lime\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Description</th>\r\n                                <th scope=\"col\" className=\"text-center\">Amount ($ SGD)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {document.consultFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Consulation Fees</td>\r\n                                <td className=\"text-center\">{document.consultFee}</td>\r\n                                </tr>): null}\r\n                                {document.prescriptionFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Prescriptions Fees<br/><ul>{document.prescriptions.map(md=>\r\n                                    <li className=\"ml-4\">{md.label} - ${md.price}</li>)}</ul></td>\r\n                                <td className=\"text-center\">{document.prescriptionFee}</td>\r\n                                </tr>): null}\r\n                                {document.testFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Test Fees<br/><ul>{document.LabTests.map(md=>\r\n                                    <li className=\"ml-4\">{md.label} - ${md.price}</li>)}</ul></td>\r\n                                <td className=\"text-center\">{document.testFee}</td>\r\n                                </tr>): null}\r\n                                <tr>\r\n                                <td colSpan=\"3\"style={{fontWeight:\"bolder\"}}>GST 7 %</td>\r\n                                <td style={{fontWeight:\"bolder\"}}className=\"text-center\">{gst.toFixed(2)}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td colSpan=\"3\"style={{fontWeight:\"bolder\",\r\n                                fontSize: \"1.3rem\",\r\n                            }}>Grand Total</td>\r\n                                <td style={{fontWeight:\"bolder\",fontSize:\"1.3rem\"}}className=\"text-center\">{grandTotal.toFixed(2)}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                            <hr className=\"my-1\" style={{\r\n                            color: 'black',\r\n                            backgroundColor: 'green',\r\n                            height: 1,\r\n                            align: \"right\",\r\n                        }}/>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-right\" style={{\r\n                        color:\"violet\"\r\n                    }}>Auto Generated Receipt</Card.Footer>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewReceipt\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js",["906"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                            <button onClick = {this.deleteArticle.bind(this, this.state.article.id)}class = \"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (ViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js",["907"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass PatientViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/Patient/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                    <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (PatientViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js",["908"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/MedAdm/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                            <button onClick = {this.deleteArticle.bind(this, this.state.article.id)}class = \"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (ViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js",["909","910","911","912","913"],"import React,{useState} from 'react'\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction MDHomepageUI() {\r\n\r\n    // react hooks\r\n    const { currentUser } = useAuth();\r\n    const [Doctors, setDoctors] = useState([]); \r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Doctors.map(doc => <h1> Hello {doc.Name},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-7\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Patient Profile</h5>\r\n                                    <p className=\"card-text\">You can view the patient profile and their past medical records here</p>\r\n                                    <a onClick={() => {window.location.href=\"/MedDoc/PatientProfile\"}} className=\"btn btn-primary\">View Patient Profiles</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Schedule</h5>\r\n                                <p className=\"card-text\">You can view and edit the schedule here</p>\r\n                                <a onClick={() => {window.location.href=\"/MedDoc/Schedule\"}} className=\"btn btn-primary\">View / Edit Schedule</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-5 col-sm-7\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Educational</h5>\r\n                                    <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                    <br/>\r\n                                    <a onClick={() => {window.location.href=\"/MedDoc/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">My Profile</h5>\r\n                                <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                <br/>\r\n                                <a onClick={() => {window.location.href=\"/MedDoc/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MDHomepageUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js",["914","915","916"],"import React, {Component} from 'react';\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport classes from './NewArticle.module.css';\r\nimport Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer';\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\")\r\n                 .add(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>New Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme=\"snow\"\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js",["917"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {useLocation, useHistory} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMedicalRecord() {\r\n    // react hooks\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n\r\n    //useStates \r\n    const [allergies, setAllergies] = useState(\"\");\r\n    const [demographics, setDemographics] = useState(\"\");\r\n    const [diagnoses, setDiagnoses] = useState(\"\");\r\n    const [labResults, setLabResults] = useState(\"\");\r\n    const [medicalHistory, setMedicalHistory] = useState(\"\");\r\n    const [vitals, setVitals] = useState(\"\");\r\n    const [error, setError] = useState(\"\"); \r\n    const [medRec, setMedRec] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        //fetch this data on render\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Records\")\r\n            .where(\"PatientEmail\",\"==\",String(md.PatientEmail))\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedRec(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    \r\n    //alert message\r\n    const cancelAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Medical Record Successfully Created.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    const rec = {...medRec[0]};\r\n\r\n    //function creates and saves medical record data in firebase\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        try{\r\n            await firestore.collection(\"Medical Records\").add({\r\n                Allergies : allergies,\r\n                Demographics : demographics,\r\n                Diagnoses : diagnoses,\r\n                LabResults : labResults,\r\n                MedicalHistory : medicalHistory,\r\n                Vitals : vitals,\r\n                Patient : md.Patient,\r\n                PatientEmail : md.PatientEmail,\r\n                AssignedDoc : md.DocEmail\r\n            })\r\n            .then(() => {\r\n                cancelAppointmentAlert()\r\n                history.push(\"/MedDoc/PatientProfile\");\r\n            })\r\n        }\r\n        catch(error){\r\n            return setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            {!rec.PatientEmail ? (\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n                    <Card>\r\n                        <h2 className= \"text-center mb-4 mt-3\">Create Medical Record</h2>\r\n                        <Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id = \"Name\">\r\n                                <Form.Label>Patient Name</Form.Label>\r\n                                <Form.Control \r\n                                    defaultValue = {md.Patient} \r\n                                    disabled = {true} \r\n                                    type=\"text\" required/>\r\n                                </Form.Group>\r\n                                <Form.Group id = \"allergies\">\r\n                                <Form.Label>Allergies</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setAllergies(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"demographics\">\r\n                                <Form.Label>Demographics</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDemographics(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"diagnoses\">\r\n                                <Form.Label>Diagnoses</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDiagnoses(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"labResults\">\r\n                                <Form.Label>Lab Results</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setLabResults(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"medicalHistory\">\r\n                                <Form.Label>Medical History</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setMedicalHistory(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"vitals\">\r\n                                <Form.Label>Vitals</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setVitals(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" className=\"w-100 my-2\">Create Medical Record</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n            ):(<h1>Medical Record has already been created</h1>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js",["918","919","920","921","922","923","924","925","926"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMPUI() {\r\n    //react hooks\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    //usestates\r\n    const[doctor, setDoctor] = useState([]);\r\n    const[medDocs, setMedDocs] = useState([]);\r\n    const[Reason, setReason] = useState(\"\");\r\n    const[LabResult, setLabResult] = useState(\"\");\r\n    const[ConsultFee, setConsultFee] = useState(0);\r\n    const[PrescriptionFee, setPrescriptionFee] = useState(0);\r\n    const [error, setError] = useState(\"\");                \r\n    const [MCDisabled, setMCDisabled] = useState(true);\r\n    const [btnDisabled, setBtnDisabled] = useState(false);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTests, setMedTests] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        // fetch this data on render\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",String(appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n\r\n    const doc = {...doctor[0]};\r\n\r\n    //alert message\r\n    const MDAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Medical document has been created successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n\r\n      // on submit this function checks for conditions of receipt to automate\r\n      // the prices then saves those data to firebase\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        if(medDocs && medDocs.length)\r\n        {\r\n            return setError(\"This medical document has already been created\");\r\n        }\r\n\r\n        let cFee = 0;\r\n        if(doc.Department.includes(\"General Practitioner\"))\r\n            cFee = 50;\r\n        else\r\n            cFee = 100;\r\n\r\n        let pFees = 0, tFees = 0;\r\n        for(var i = 0; i < medicines.length; i++)\r\n        {\r\n            pFees += medicines[i].price;\r\n        }\r\n        for(var i = 0; i < medTests.length; i++)\r\n        {\r\n            tFees += medTests[i].price;\r\n        }\r\n        try{\r\n            await firestore.collection(\"Medical Documents\").add({\r\n                appointmentID: appointment.id,\r\n                Patient: appointment.Patient,\r\n                PatientEmail: appointment.PatientEmail,\r\n                DocEmail: appointment.DocEmail,\r\n                Reason: Reason,\r\n                DateOfVisit: appointment.Date,\r\n                LabResults: LabResult,\r\n                prescriptions: medicines,\r\n                LabTests : medTests,\r\n                consultFee: parseFloat(cFee),\r\n                prescriptionFee: parseFloat(pFees),\r\n                testFee: parseFloat(tFees),\r\n                MedicalCertificate: \"\"\r\n            })\r\n            await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n                DocCreated : true\r\n            })\r\n            .then(() => {\r\n                MDAlert()\r\n            })\r\n          } catch(error){\r\n             return setError(error.message);\r\n          }\r\n            setReason(\"\");\r\n            setLabResult(\"\");\r\n            setMedicines([]);\r\n            setMedTests([]);\r\n            setConsultFee(0);\r\n            setPrescriptionFee(0);\r\n            setMCDisabled(false);\r\n            setBtnDisabled(true);\r\n    }\r\n\r\n    const drugList = [\r\n        { label: 'Amoxicillin (Antibiotics)', value: 'Amoxicillin (Antibiotics)', price: 10 },\r\n        { label: 'Abaloparatide Injection (Tymlos)', value: 'Abaloparatide Injection (Tymlos)', price: 10 },\r\n        { label: 'Ablavar (Gadofosveset Trisodium Injection)', value: 'Ablavar (Gadofosveset Trisodium Injection)', price: 10 },\r\n        { label: 'Abemaciclib Tablets (Verzenio)', value: 'Abemaciclib Tablets (Verzenio)', price: 10 },\r\n        { label: 'Abstral (Fentanyl Sublingual Tablets)', value: 'Abstral (Fentanyl Sublingual Tablets)', price: 10 },\r\n        { label: 'Adapalene Cream (Differin Cream)', value: 'Adapalene Cream (Differin Cream)' , price: 10},\r\n        { label: 'Altace Capsules (Ramipril Capsules)', value: 'Altace Capsules (Ramipril Capsules)' , price: 10},\r\n        { label: 'Benzonatate (Cough Syrup)', value: 'Benzonatate (Cough Syrup)', price: 10 },\r\n        { label: 'Bempedoic acid and Ezetimibe Tablets (Nexlizet)', value: 'Bempedoic acid and Ezetimibe Tablets (Nexlizet)', price: 10 },\r\n        { label: 'Braftovi (Encorafenib Capsules)', value: 'Braftovi (Encorafenib Capsules)', price: 10 },\r\n        { label: 'Budeprion XL (Bupropion Hydrochloride Extended-Release Tablets)', value: 'Budeprion XL (Bupropion Hydrochloride Extended-Release Tablets)', price: 10 },\r\n        { label: 'Cabometyx (Cabozantinib Tablets', value: 'Cabometyx (Cabozantinib Tablets', price: 10 },\r\n        { label: 'Calcipotriene Cream (Dovonex Cream)', value: 'Calcipotriene Cream (Dovonex Cream)' , price: 10},\r\n        { label: 'CeeNU (Lomustine Capsules)', value: 'CeeNU (Lomustine Capsules)' , price: 10},\r\n        { label: 'Chlorzoxazone Tablets (Chlorzoxazone)', value: 'Chlorzoxazone Tablets (Chlorzoxazone)', price: 10 },\r\n        { label: 'Dalfampridine Extended-Release Tablets (Ampyra)', value: 'Dalfampridine Extended-Release Tablets (Ampyra)', price: 10 },\r\n        { label: 'Dapsone (Aczone Gel)', value: 'Dapsone (Aczone Gel)', price: 10 },\r\n        { label: 'Darolutamide Tablets (Nubeqa)', value: 'Darolutamide Tablets (Nubeqa)', price: 10 },\r\n        { label: 'Dojolvi (Triheptanoin Oral Liquid)', value: 'Dojolvi (Triheptanoin Oral Liquid)' , price: 10},\r\n        { label: 'Edurant (Rilpivirine Tablets)', value: 'Edurant (Rilpivirine Tablets)' , price: 10},\r\n        { label: 'Elestrin (Estradiol Gel)', value: 'Elestrin (Estradiol Gel)', price: 10 },\r\n      ];\r\n\r\n      const medicalTests = [\r\n        { label: 'Blood Test', value: 'Blood Test', price: 100 },\r\n        { label: 'X Ray Scan', value: 'X Ray Scan', price: 120 },\r\n        { label: 'MRI Scan', value: 'MRI Scan', price: 220 },\r\n        { label: 'Brain Scan', value: 'Brain Scan', price: 120 },\r\n        { label: 'CT Scan', value: 'CT Scan', price: 220 },\r\n        { label: 'Kidney Function Test', value: 'Kidney Function Test', price: 150 },\r\n        { label: 'Liver Function Test', value: 'Liver Function Test', price: 150 },\r\n        { label: 'Malabsorption Test', value: 'Malabsorption Test' , price: 80},\r\n        { label: 'Pregnancy Test', value: 'Pregnancy Test' , price: 50 },\r\n        { label: 'Syphillis Test', value: 'Syphillis Test', price: 75 },\r\n        { label: 'Toxicology Test', value: 'Toxicology Test', price: 100 },\r\n        { label: 'Urinanalysis', value: 'Urinanalysis', price: 10 },\r\n        { label: 'Mammograhy', value: 'Mammograhy', price: 250 },\r\n        { label: 'Ultrasound', value: 'Ultrasound' , price: 150},\r\n        { label: 'Endoscopy', value: 'Endoscopy' , price: 200},\r\n        { label: 'Skin Test', value: 'Skin Test', price: 200 },\r\n        { label: 'Semen Analysis', value: 'Semen Analysis', price: 100 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Create Medical Document</h2>\r\n             <Card.Body>\r\n             {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {appointment.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {appointment.Date} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        value = {Reason}\r\n                        rows = {3}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select options={drugList}\r\n                        isMulti\r\n                        onChange = {opt => setMedicines(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {medicines.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select options={medicalTests}\r\n                        isMulti\r\n                        onChange = {opt => setMedTests(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {medTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        value = {LabResult}\r\n                        rows = {3}\r\n                        onChange={(e) => setLabResult(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <hr/>\r\n                    <Button disabled = {medDocs.length > 0 || btnDisabled} className=\"w-100 my-2\" type=\"submit\">Create Medical Record</Button>\r\n                    <Link to={{\r\n                        pathname: '/MedDoc/CreateMC', \r\n                        state:{appointment: appointment}\r\n            }}><Button disabled = {!medDocs.length > 0 && MCDisabled} className=\"w-100 my-2\">Create Medical Certificate</Button></Link>\r\n                </Form>\r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js",["927"],"import React,{useState} from 'react'\r\nimport { Card, Container, Button } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction ViewPatientProfileUI() {\r\n    //react hooks\r\n    const { currentUser } = useAuth();\r\n    const [patients, setPatients] = useState([]); \r\n    const [PatientRecs, setPatientRecs] = useState([]);\r\n    const [createSearchVal, setCreateSearchVal] = useState(\"\");\r\n    const [viewSearchVal, setViewSearchVal] = useState(\"\");\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Documents\")\r\n           .where(\"DocEmail\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatients(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n            firestore.collection(\"Medical Records\")\r\n            .where(\"AssignedDoc\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatientRecs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const arr = []\r\n    const obj = {}\r\n\r\n    // get unique patients\r\n    for(const string of patients){\r\n        if(!obj[string.PatientEmail]){\r\n            arr.push(string)\r\n            obj[string.PatientEmail] = true\r\n        }\r\n    }\r\n\r\n    // filter patient based on serch field text\r\n    let filteredArr = arr.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(createSearchVal)\r\n    })\r\n\r\n    // filter patient rec based on search field text\r\n    let filteredRec = PatientRecs.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(viewSearchVal)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">Create Medical Records For Patient Seen</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setCreateSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">Create Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredArr.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/CreateMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>Create Record</Button></Link></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            <Container className=\"mt-5\">\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">View Created Medical Records For Patients</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setViewSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">View/Edit/Transfer Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredRec.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/EditMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>View/Edit Record</Button></Link>\r\n                            <Link to={{\r\n                        pathname: '/MedDoc/TransferMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button className = \"mt-2\">Transfer</Button></Link>\r\n                            </td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPatientProfileUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js",["928","929","930"],"import React, {Component} from 'react'\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap'\r\nimport classes from './EditArticle.module.css'\r\nimport Compressor from 'compressorjs'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass EditArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: ''})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\").doc(this.state.article.id)\r\n                 .set(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>Edit Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme='snow'\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js",["931","932","933"],"import React, {Component} from 'react';\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport classes from './NewArticle.module.css';\r\nimport Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer';\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\")\r\n                 .add(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedAdm/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>New Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme=\"snow\"\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js",["934","935","936","937","938","939","940","941"],"import React,{useState, useRef} from 'react'\r\nimport Popup from \"reactjs-popup\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport \"./CreateMC.css\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\";\r\nimport { auth, firestore, storageRef } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMC() {\r\n    // react hooks\r\n    const{state} = useLocation();\r\n    const{appointment} = state;\r\n    const[noOfDays, setNoOfDays] = useState(1);\r\n    const[doc, setDoc] = useState([]);\r\n    const[document,setDocument] = useState([]);\r\n    const[imageURL, setImageURL] = useState(null);\r\n    const history = useHistory();\r\n    const sigCanvas = useRef({});\r\n    \r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        //data is fetched here on render\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",appointment.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDocument(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData()\r\n    },[])\r\n\r\n    const doctor = {...doc[0]};\r\n    const clear = () => sigCanvas.current.clear();  // clear signature on canvas\r\n    let img = doctor.Signature                      // store current signature if it exists\r\n\r\n    const save = () => {\r\n        // saves signature signed on canvas\r\n        setImageURL(sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n        img = imageURL\r\n    }\r\n    \r\n    // setup mc data\r\n    const startDate = new Date();\r\n    const endDate = new Date(startDate);\r\n    endDate.setDate(endDate.getDate() + (noOfDays-1));\r\n\r\n    const saveToDataBase = async () => {\r\n        //updates signature in the database\r\n        await firestore.collection(\"Medical Doctors\").doc(doctor.id).update({\r\n            Signature: imageURL\r\n        })\r\n        .then(() =>{\r\n            alert('Signature has been updated successfully')\r\n        })\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    const saveMC = async () => {\r\n        // saves MC data in the database \r\n        await firestore.collection(\"Medical Documents\").doc(document[0].id).update({\r\n            MedicalCertificate : noOfDays,\r\n            MCStartDate : moment(startDate).format(\"DD/MM/YYYY\"),\r\n            MCEndDate : moment(endDate).format(\"DD/MM/YYYY\")\r\n        })\r\n        .then(() =>{\r\n            alert(\"Medical Certificate Created Successfully\");\r\n        })\r\n        history.push({\r\n            pathname: \"/MedDoc/Schedule\",\r\n            state: {doctor: doctor}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center mb-4\">Generate MC</Card.Title>\r\n                        <Form>\r\n                            <Form.Group id = \"days\">\r\n                            <Form.Label>Enter Number of Days</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue = \"1\"\r\n                                type=\"number\"\r\n                                min='1'\r\n                                onChange={(e) => setNoOfDays(e.target.value)}\r\n                                required\r\n                            />\r\n                            </Form.Group>\r\n                            <Popup modal\r\n                                trigger={<Button className=\"mt-3 mb-3\">Click To Update Your Digital Signature</Button>}\r\n                                closeOnDocumentClick={false}>\r\n                                    {close => (\r\n                                        <>\r\n                                        <SignaturePad\r\n                                            ref={sigCanvas}\r\n                                            canvasProps={{\r\n                                            className: \"signatureCanvas\"\r\n                                            }}\r\n                                        />\r\n                                    {/* Button to trigger save canvas image */}\r\n                                        <Button onClick={save}>Save</Button>\r\n                                        <Button onClick={clear}>Clear</Button>\r\n                                        <Button onClick={close}>Close</Button>\r\n                                        </>\r\n                                 )}\r\n                                </Popup>\r\n                                <Form.Group>\r\n                                <Card.Img src={imageURL} height=\"200px\"></Card.Img>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Button onClick={(e)=> {saveToDataBase()}}>Save Your Signature</Button>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Button onClick={(e)=> {saveMC()}} className=\"mt-3\">Generate MC</Button>\r\n                                </Form.Group>\r\n                        </Form>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n             </div>\r\n             <MC imageURL={doctor.Signature} name={appointment.Patient} days={noOfDays}\r\n                startDate={startDate} endDate={endDate} doctor={doctor}\r\n                 />\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMC\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js",["942","943","944","945","946","947","948","949","950","951","952"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport {useRouteMatch} from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMPUI() {\r\n    //react hooks\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    //usestates\r\n    const[medDocs, setMedDocs] = useState([]);\r\n    const[Reason, setReason] = useState(\"\");\r\n    const[LabResult, setLabResult] = useState(\"\");\r\n    const[ConsultFee, setConsultFee] = useState(0);\r\n    const[PrescriptionFee, setPrescriptionFee] = useState(0);\r\n    const [error, setError] = useState(\"\");  \r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n    const[fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTests, setMedTests] = useState([]);\r\n\r\n    const {path} = useRouteMatch();\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData()\r\n    },[])\r\n\r\n    const document = {...medDocs[0]};\r\n    const assignedMed = [];\r\n    const assignedMedTests = []\r\n\r\n    // loops through array of prescriptions and medical test set by doctor\r\n    // and store it in array declared above\r\n    for(var i = 0; i < medDocs.length; i++)\r\n    {\r\n        for(var j = 0; j < medDocs[i].prescriptions.length; j++)\r\n        {\r\n            assignedMed.push({...medDocs[i].prescriptions[j]});\r\n        }\r\n        for(var j = 0; j < medDocs[i].LabTests.length; j++)\r\n        {\r\n            assignedMedTests.push({...medDocs[i].LabTests[j]});\r\n        }\r\n    }\r\n  \r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setReason(document.Reason);\r\n        setLabResult(document.LabResults);\r\n        setConsultFee(document.consultFee);\r\n        setPrescriptionFee(document.prescriptionFee);\r\n        setMedicines(document.prescriptions.map(md => ({...md})));\r\n        setMedTests(document.LabTests.map(md => ({...md})));\r\n    }\r\n\r\n    // handle submit function has patient document to firebase\r\n    // also calculates receipt data on before submitting data\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let pFees = 0, tFees = 0;\r\n        for(var i = 0; i < medicines.length; i++)\r\n        {\r\n            pFees += medicines[i].price;\r\n        }\r\n        for(var i = 0; i < medTests.length; i++)\r\n        {\r\n            tFees += medTests[i].price;\r\n        }\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            //update data in firestore collection\r\n         firestore.collection(\"Medical Documents\").doc(document.id)\r\n         .update({\r\n            appointmentID: appointment.id,\r\n            Patient: appointment.Patient,\r\n            PatientEmail: appointment.PatientEmail,\r\n            DocEmail: appointment.DocEmail,\r\n            Reason: Reason,\r\n            DateOfVisit: appointment.Date,\r\n            LabResults: LabResult,\r\n            prescriptions: medicines,\r\n            LabTests : medTests,\r\n            prescriptionFee: parseFloat(pFees),\r\n            testFee: parseFloat(tFees),\r\n         })\r\n         .then(() => {\r\n            alert(\"Congratulations! Medical profile has been updated successfully.\")\r\n            window.location.reload();\r\n         })\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n        setFieldsDisabled(true);\r\n        setEditDisabled(false);\r\n    }\r\n\r\n    const drugList = [\r\n        { label: 'Amoxicillin (Antibiotics)', value: 'Amoxicillin (Antibiotics)', price: 10 },\r\n        { label: 'Abaloparatide Injection (Tymlos)', value: 'Abaloparatide Injection (Tymlos)', price: 10 },\r\n        { label: 'Ablavar (Gadofosveset Trisodium Injection)', value: 'Ablavar (Gadofosveset Trisodium Injection)', price: 10 },\r\n        { label: 'Abemaciclib Tablets (Verzenio)', value: 'Abemaciclib Tablets (Verzenio)', price: 10 },\r\n        { label: 'Abstral (Fentanyl Sublingual Tablets)', value: 'Abstral (Fentanyl Sublingual Tablets)', price: 10 },\r\n        { label: 'Adapalene Cream (Differin Cream)', value: 'Adapalene Cream (Differin Cream)' , price: 10},\r\n        { label: 'Altace Capsules (Ramipril Capsules)', value: 'Altace Capsules (Ramipril Capsules)' , price: 10},\r\n        { label: 'Benzonatate (Cough Syrup)', value: 'Benzonatate (Cough Syrup)', price: 10 },\r\n        { label: 'Bempedoic acid and Ezetimibe Tablets (Nexlizet)', value: 'Bempedoic acid and Ezetimibe Tablets (Nexlizet)', price: 10 },\r\n        { label: 'Braftovi (Encorafenib Capsules)', value: 'Braftovi (Encorafenib Capsules)', price: 10 },\r\n        { label: 'Budeprion XL (Bupropion Hydrochloride Extended-Release Tablets)', value: 'Budeprion XL (Bupropion Hydrochloride Extended-Release Tablets)', price: 10 },\r\n        { label: 'Cabometyx (Cabozantinib Tablets', value: 'Cabometyx (Cabozantinib Tablets', price: 10 },\r\n        { label: 'Calcipotriene Cream (Dovonex Cream)', value: 'Calcipotriene Cream (Dovonex Cream)' , price: 10},\r\n        { label: 'CeeNU (Lomustine Capsules)', value: 'CeeNU (Lomustine Capsules)' , price: 10},\r\n        { label: 'Chlorzoxazone Tablets (Chlorzoxazone)', value: 'Chlorzoxazone Tablets (Chlorzoxazone)', price: 10 },\r\n        { label: 'Dalfampridine Extended-Release Tablets (Ampyra)', value: 'Dalfampridine Extended-Release Tablets (Ampyra)', price: 10 },\r\n        { label: 'Dapsone (Aczone Gel)', value: 'Dapsone (Aczone Gel)', price: 10 },\r\n        { label: 'Darolutamide Tablets (Nubeqa)', value: 'Darolutamide Tablets (Nubeqa)', price: 10 },\r\n        { label: 'Dojolvi (Triheptanoin Oral Liquid)', value: 'Dojolvi (Triheptanoin Oral Liquid)' , price: 10},\r\n        { label: 'Edurant (Rilpivirine Tablets)', value: 'Edurant (Rilpivirine Tablets)' , price: 10},\r\n        { label: 'Elestrin (Estradiol Gel)', value: 'Elestrin (Estradiol Gel)', price: 10 },\r\n      ];\r\n\r\n      const medicalTests = [\r\n        { label: 'Blood Test', value: 'Blood Test', price: 100 },\r\n        { label: 'X Ray Scan', value: 'X Ray Scan', price: 120 },\r\n        { label: 'MRI Scan', value: 'MRI Scan', price: 220 },\r\n        { label: 'Brain Scan', value: 'Brain Scan', price: 120 },\r\n        { label: 'CT Scan', value: 'CT Scan', price: 220 },\r\n        { label: 'Kidney Function Test', value: 'Kidney Function Test', price: 150 },\r\n        { label: 'Liver Function Test', value: 'Liver Function Test', price: 150 },\r\n        { label: 'Malabsorption Test', value: 'Malabsorption Test' , price: 80},\r\n        { label: 'Pregnancy Test', value: 'Pregnancy Test' , price: 50 },\r\n        { label: 'Syphillis Test', value: 'Syphillis Test', price: 75 },\r\n        { label: 'Toxicology Test', value: 'Toxicology Test', price: 100 },\r\n        { label: 'Urinanalysis', value: 'Urinanalysis', price: 10 },\r\n        { label: 'Mammograhy', value: 'Mammograhy', price: 250 },\r\n        { label: 'Ultrasound', value: 'Ultrasound' , price: 150},\r\n        { label: 'Endoscopy', value: 'Endoscopy' , price: 200},\r\n        { label: 'Skin Test', value: 'Skin Test', price: 200 },\r\n        { label: 'Semen Analysis', value: 'Semen Analysis', price: 100 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">View/Edit Medical Profile</h2>\r\n             <Card.Body>\r\n             {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select options={drugList}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medicines : assignedMed}\r\n                        onChange = {opt => setMedicines(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medicines.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMed.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select options={medicalTests}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medTests : assignedMedTests}\r\n                        onChange = {opt => setMedTests(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMedTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setLabResult(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <hr/>\r\n                    <Link to={{\r\n                        pathname: '/MedDoc/ViewMC', \r\n                        state:{appointment: appointment}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                    <Button type=\"submit\"className=\"w-100 my-2\" disabled={fieldsDisabled}>Update</Button>\r\n                    <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js",["953","954","955","956","957","958"],"import React,{useState} from 'react'\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction PHomepageUI() {\r\n    //react hooks\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n    return (\r\n        <div>\r\n            <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Users.map(user => <h1> Hello {user.FirstName } {user.LastName},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Medical Profile</h5>\r\n                                    <p className=\"card-text\">View your past medical visits, medical reports, bill receipts, medical prescriptions, Medical certificates and more!</p>\r\n                                    <br/>\r\n                                    <a onClick={() => {window.location.href=\"/Patient/MedicalProfile\"}} className=\"btn btn-primary\">View Medical Profiles</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Appointment</h5>\r\n                                <p className=\"card-text\">View all our appointment records here! You can Book a new appointment, Reschedule or Cancel any existing appointments here.</p>\r\n                                <a onClick={() => {window.location.href=\"/Patient/Appointment\"}} className=\"btn btn-primary\">View / Amend Appointments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1520223297779-95bbd1ea79b7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MzN8fHByb2ZpbGV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">My Profile</h5>\r\n                                <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                <br/>\r\n                                <a onClick={() => {window.location.href=\"/Patient/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-5 col-sm-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Educational</h5>\r\n                                    <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                    <br/>\r\n                                    <a onClick={() => {window.location.href=\"/Patient/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Doctor Profile</h5>\r\n                                <p className=\"card-text\">Search from a list of our healthcare doctors to learn more about them to help plan for your next appointments!</p>\r\n                                <a onClick={() => {window.location.href=\"/Patient/searchDoctor\"}} className=\"btn btn-primary\">Search Doctors</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PHomepageUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js",["959"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { firestore } from '../firebase';\r\nimport \"../Patient/ScheduleAppointment.css\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ResAppointmentUI() {\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {appointment} = state;         // save appointment data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [doctor, setDoctor] = useState([]);               // store doctor data\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n    React.useEffect(()=>{\r\n        //data is fetched on render\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\", \"==\", String(appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n      //handle submit function updates reschedule appointment data to firebase \r\n      // and sends email to patient\r\n   const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if(date === \"\" || selectedSlot === \"\")\r\n    {\r\n        return setError(\"Date Or Timeslot Not Selected\");\r\n    }\r\n\r\n    try{\r\n       await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n          Date : date,\r\n          Timeslot: selectedSlot,\r\n      })\r\n      .then(() => {\r\n          confirmReScheduleAlert()\r\n      })\r\n\r\n      // Send email to user\r\n      let details = {\r\n          date: date,\r\n          doctor: doct.Name,\r\n          timeslot: selectedSlot,\r\n          user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n          email: currentUser.email,\r\n          department: doct.Department\r\n      };\r\n      let response = await fetch(URI+\"/docReschedule\", {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json;charset=utf-8\"\r\n          },\r\n          body: JSON.stringify(details)\r\n      });\r\n      let result = await response.json();\r\n      console.log(result.status);\r\n\r\n      history.push(\"/MedAdm/Schedule\");\r\n    }\r\n    catch(error){\r\n       return setError(error.message);\r\n    }\r\n\r\n    setSelectedSlot(\"\");\r\n    setDate(\"\");\r\n}\r\n\r\n     // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n  // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n  const doct = {...doctor[0]};\r\n  const bookedTimeslots = [];\r\n  \r\n  for(var j = 0; j < appointments.length; j++)\r\n  {\r\n      //get booked timeslots for the doctor on that day\r\n      if(date === appointments[j].Date)\r\n      {\r\n          if(doct.Email === appointments[j].DocEmail)\r\n          {\r\n              bookedTimeslots.push(appointments[j].Timeslot);\r\n          }\r\n      } \r\n  }\r\n\r\n  //remove booked timeslots from times array\r\n  const filteredTimes = times.filter(function(x) { \r\n    return bookedTimeslots.indexOf(x) < 0;\r\n  });\r\n\r\n\r\n     const confirmReScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'The appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title>Reschedule Appointment</Card.Title>\r\n                    <Card.Title>Doctor</Card.Title>\r\n                    <Card.Img variant=\"top\" src={doct.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{doct.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {doct.Department}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100 mt-3\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/MedAdm/Schedule'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js",["960","961","962","963","964","965"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"../Patient/ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction CancelAppointmentUI() {\r\n   //react hooks\r\n    const {state} = useLocation();              // access appointment passed from link router\r\n    const {appointment} = state;                // save appointment data from state\r\n    const [error, setError] = useState(\"\");     // store error message\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    const [patient, setPatient] = useState([]);\r\n\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n    // alert message\r\n    const cancelAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been cancelled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      //handle submit\r\n   const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try{\r\n       //delete document from firebase\r\n       await firestore.collection(\"Appointment\").doc(appointment.id).delete()\r\n       .then(() => {\r\n          cancelAppointmentAlert()\r\n       })\r\n\r\n       // Send email to user\r\n       let details = {\r\n          date: appointment.Date,\r\n          doctor: appointment.Doctor,\r\n          timeslot: appointment.Timeslot,\r\n          user: appointment.Patient,\r\n          email: appointment.PatientEmail\r\n       };\r\n       let response = await fetch(URI+\"/cancel\", {\r\n          method: \"POST\",\r\n          headers: {\r\n             \"Content-Type\": \"application/json;charset=utf-8\"\r\n          },\r\n          body: JSON.stringify(details)\r\n       });\r\n       let result = await response.json();\r\n       console.log(result.status);\r\n\r\n       history.push(\"/MedAdm/Schedule\");\r\n    }\r\n    catch(error){\r\n       return setError(error.message);\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n         <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Cancel Appointment</Card.Title>\r\n                <label class=\"note\">The following appointment will be cancelled:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label className=\"my-2\">Appointment Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={appointment.Date}\r\n                        type=\"date\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"text\">\r\n                     <Form.Label>Appointment Time Slot</Form.Label>\r\n                     <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={appointment.Timeslot}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Doctor Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={appointment.Doctor}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Patient Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={appointment.Patient}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Cancel Appointment</Button>\r\n                <Link to={'/MedAdm/Schedule'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CancelAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js",["966","967","968","969"],"import React, {useState}  from 'react';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction MAHomepageUI() {\r\n\r\n    // react hooks\r\n    const { currentUser } = useAuth();\r\n    const [medAdmin, setMedAdmin] = useState([]); \r\n\r\n    //upon logging in user data is fecthed in React.useEffect and displayed in return \r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Administrator\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setMedAdmin(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])    \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {medAdmin.map(doc => <h1> Hello {doc.Name},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">My Profile</h5>\r\n                                        <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Schedule</h5>\r\n                                        <p className=\"card-text\">You can view and edit the schedule here</p>\r\n                                        <br/>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/Schedule\"}} className=\"btn btn-primary\">View / Edit Schedule</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Educational</h5>\r\n                                        <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MAHomepageUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js",["970"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { firestore } from '../firebase';\r\nimport \"../Patient/ScheduleAppointment.css\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction CreateFollowUPUI() {\r\n    //react hooks\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {appointment} = state;         // save appointment data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [doctor, setDoctor] = useState([]);               // store doctor data\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n    // fetches data on render\r\n    React.useEffect(()=>{\r\n        //fetch all data from firebase\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(appointment.PatientEmail)).limit(1)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\", \"==\", String(appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n      //handle submit function add booked appointment data to firebase\r\n   const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if(date === \"\" || selectedSlot === \"\")\r\n    {\r\n        return setError(\"Date Or Timeslot Not Selected\");\r\n    }\r\n\r\n    try{\r\n        await firestore.collection(\"Appointment\").add({\r\n          Date : date,\r\n          Timeslot: selectedSlot,\r\n          Doctor: doct.Name,\r\n          Patient: Users[0].FirstName + \" \" + Users[0].LastName,\r\n          PatientEmail: patient.Email,\r\n          DocEmail: doct.Email,\r\n          DocCreated: true\r\n      })\r\n      .then(() => {\r\n          confirmReScheduleAlert()\r\n      })\r\n\r\n      // Send email to user\r\n      let details = {\r\n          date: date,\r\n          doctor: doct.Name,\r\n          timeslot: selectedSlot,\r\n          user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n          email: currentUser.email,\r\n          department: doct.Department\r\n      };\r\n      let response = await fetch(URI+\"/book\", {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json;charset=utf-8\"\r\n          },\r\n          body: JSON.stringify(details)\r\n      });\r\n      let result = await response.json();\r\n      console.log(result.status);\r\n\r\n      history.push(\"/MedAdm/Schedule\");\r\n    }\r\n    catch(error){\r\n       return setError(error.message);\r\n    }\r\n\r\n    setSelectedSlot(\"\");\r\n    setDate(\"\");\r\n}\r\n\r\n     // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n  // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n  const doct = {...doctor[0]};\r\n  const bookedTimeslots = [];\r\n  const patient = {...Users[0]};\r\n  \r\n  for(var j = 0; j < appointments.length; j++)\r\n  {\r\n      //get booked timeslots for the doctor on that day\r\n      if(date === appointments[j].Date)\r\n      {\r\n          if(doct.Email === appointments[j].DocEmail)\r\n          {\r\n              bookedTimeslots.push(appointments[j].Timeslot);\r\n          }\r\n      } \r\n  }\r\n\r\n  //remove booked timeslots from times array\r\n  const filteredTimes = times.filter(function(x) { \r\n    return bookedTimeslots.indexOf(x) < 0;\r\n  });\r\n\r\n\r\n     const confirmReScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'The appointment has been scheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <div className=\"text-center\">\r\n                <h2>Create Follow Up Appointment</h2>\r\n                <br/>\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title><br/>Doctor</Card.Title>\r\n                    <Card.Img variant=\"top\" src={doct.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{doct.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {doct.Department}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title><br/>Patient</Card.Title>\r\n                    <Card.Body>\r\n                        <Card.Title>{patient.FirstName + \" \" + patient.LastName}</Card.Title>\r\n                        <Card.Text>\r\n                            <b>Email: </b>\r\n                            {patient.Email}\r\n                            <br/>\r\n                            <b>Date of Birth: </b>\r\n                            {patient.DOB}\r\n                            <br/>\r\n                            <b>Telephone: </b>\r\n                            {patient.Telephone}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100 mt-3\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/MedAdm/Schedule'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFollowUPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js",["971","972","973","974","975","976"],"import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as s from './ViewDoctorSchedule.styles';\r\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ViewDoctorScheduleUI()\r\n{\r\n   {/* department dropdown list */}\r\n   const options = [\r\n      {\"id\": 1,\r\n      \"value\": \"Anesthesiology\",\r\n      \"label\": \"Anesthesiology\"\r\n      },\r\n\r\n      {\"id\": 2,\r\n      \"value\": \"Cardiology\", \r\n      \"label\": \"Cardiology\"\r\n      },\r\n\r\n      {\"id\": 3,\r\n      \"value\": \"Dermatology\", \r\n      \"label\": \"Dermatology\"\r\n      },\r\n\r\n      {\"id\": 4,\r\n      \"value\": \"Endocrinology\", \r\n      \"label\": \"Endocrinology\"\r\n      },\r\n\r\n      {\"id\": 5,\r\n      \"value\": \"Gastroenterology\", \r\n      \"label\": \"Gastroenterology\"\r\n      },\r\n\r\n      {\"id\": 6,\r\n      \"value\": \"General Practitioner (Non-specialist)\", \r\n      \"label\": \"General Practitioner (Non-specialist)\"\r\n      },\r\n\r\n      {\"id\": 7,\r\n      \"value\": \"Haematology\", \r\n      \"label\": \"Haematology\"\r\n      },\r\n\r\n      {\"id\": 8,\r\n      \"value\": \"Immunology\", \r\n      \"label\": \"Immunology\"\r\n      },\r\n\r\n      {\"id\": 9,\r\n      \"value\": \"Infectious Diseases\", \r\n      \"label\": \"Infectious Diseases\"\r\n      },\r\n\r\n      {\"id\": 10,\r\n      \"value\": \"Neurology\", \r\n      \"label\": \"Neurology\"\r\n      },\r\n\r\n      {\"id\": 11,\r\n      \"value\": \"Oncology\", \r\n      \"label\": \"Oncology\"\r\n      },\r\n\r\n      {\"id\": 12,\r\n      \"value\": \"Orthopaedic\", \r\n      \"label\": \"Orthopaedic\"\r\n      },\r\n\r\n      {\"id\": 13,\r\n      \"value\": \"Psychiatry\", \r\n      \"label\": \"Psychiatry\"\r\n      },\r\n\r\n      {\"id\": 14,\r\n      \"value\": \"Rheumatology\", \r\n      \"label\": \"Rheumatology\"\r\n      },\r\n\r\n      {\"id\": 15,\r\n      \"value\": \"Urology\", \r\n      \"label\": \"Urology\"\r\n      }\r\n   ];\r\n\r\n   const currentDate = new Date();\r\n\r\n   // State ------------------------------------------\r\n   const [selectedOptions, setSelectedOptions] = useState([]);\r\n   const [startDate, setStartDate] = useState(new Date());\r\n   const [appointments, setAppointments] = useState([]);\r\n   const [doctor, setDoctor] = useState([]);\r\n   let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n\r\n   // Effect ---------------------------------------\r\n   useEffect(() => {\r\n      setSelectedOptions([{label: \"All\", value: \"*\"}, ...options]);\r\n   }, []);\r\n\r\n   // convert 12hr clock to 24hour clock\r\n   const convertTime12to24 = time12h => {\r\n      const [time, modifier] = time12h.split(\" \");\r\n     \r\n      let [hours, minutes] = time.split(\":\");\r\n     \r\n      if (hours === \"12\") {\r\n        hours = \"00\";\r\n      }\r\n     \r\n      if (modifier === \"PM\") {\r\n        hours = parseInt(hours, 10) + 12;\r\n      }\r\n     \r\n      return `${hours}:${minutes}`;\r\n   };\r\n\r\n   // Retrieve Data from Firebase\r\n   useEffect(() => {\r\n      //data is fetched on render\r\n      const fetchData = async () => {\r\n         firestore.collection(\"Appointment\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n         firestore.collection(\"Medical Doctors\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         })\r\n      };\r\n      fetchData();\r\n   }, []);\r\n\r\n   const handleDeptChange = (value) => {\r\n      this.props.onSelectDepartment(value);\r\n   }\r\n\r\n   function onChange (value, event) {\r\n      if (event.action === \"select-option\" && event.option.value === \"*\") {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\r\n          this.setState([]);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\") {\r\n          this.setState(value.filter((o) => o.value !== \"*\"));\r\n      }\r\n\r\n      else if (value.length === this.options.length - 1) {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else {\r\n          this.setState(value);\r\n      } \r\n\r\n   }\r\n\r\n   // filter and sort array\r\n   const filterList = [...selectedOptions]\r\n                     .sort((a, b) => a.value > b.value ? 1 : -1)\r\n                     .map((item) => item.value )\r\n                     .filter((item) => item !== \"*\");\r\n\r\n   var appList = [];\r\n\r\n   // Get Appointment\r\n   for (var i = 0; i < filterList.length; i++)\r\n   {\r\n      if (i === 0)\r\n      {\r\n         appList = [];\r\n      }\r\n\r\n      appList.push(<s.departmentHeader> {filterList[i]} </s.departmentHeader>);\r\n\r\n      for (var a = 0; a < doctor.length; a++)\r\n      {\r\n         var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n         if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n         {\r\n            appList.push(<h4> {doctor[a].Name} </h4>)\r\n            var tempAppointment = [...appointments]\r\n                              .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                              .filter((item) => item.DocEmail === doctor[a].Email)\r\n                              .sort((a, b) => convertTime12to24(a.Timeslot.substring(0, 8)) > convertTime12to24(b.Timeslot.substring(0, 8)) ? 1 : -1)\r\n            \r\n            for (var b = 0; b < tempAppointment.length; b++)\r\n            {\r\n               if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n               {\r\n                  appList.push(<s.appCard>\r\n                                 <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                                 <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                                 <Link to = {{pathname: '/MedAdm/Reschedule/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Reschedule </s.resButton></Link>\r\n                                 &nbsp; &nbsp; &nbsp; \r\n                                 <Link to = {{pathname: '/MedAdm/Cancel/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Cancel </s.resButton></Link>\r\n                              </s.appCard>\r\n                              )\r\n               }\r\n\r\n               else if (Date.parse(startDate) == Date.parse(currentDate))\r\n               {\r\n                  appList.push(<s.appCard>\r\n                     <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                     <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                     <Link to = {{pathname: '/MedAdm/Reschedule/', state:{appointment: tempAppointment[b]}}}>\r\n                     <s.resButton> Reschedule </s.resButton></Link>\r\n                     &nbsp; &nbsp; &nbsp; \r\n\r\n                     <Link to = {{pathname: '/MedAdm/Cancel/', state:{appointment: tempAppointment[b]}}}>\r\n                     <s.resButton> Cancel </s.resButton></Link>\r\n                     &nbsp; &nbsp; &nbsp; \r\n                     \r\n                     <Link to = {{pathname: '/MedAdm/Create/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Create Follow Up Appointment </s.resButton></Link>\r\n                  </s.appCard>\r\n                  )\r\n               }\r\n\r\n               else \r\n               {\r\n                  appList.push(<s.appCard>\r\n                     <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                     <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                     <Link to = {{pathname: '/MedAdm/Create/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Create Follow Up Appointment </s.resButton></Link>\r\n                  </s.appCard>\r\n                  )\r\n               }\r\n            }\r\n            \r\n            appList.push(<br />)\r\n         }\r\n      }\r\n\r\n      appList.push(<hr/>)\r\n   }\r\n\r\n   const submitReminderAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Reminder has been sent successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n\r\n   const sendReminder = async (e) =>\r\n   {\r\n      if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n      {\r\n         for (var i = 0; i < filterList.length; i++)\r\n         {\r\n            if (i === 0)\r\n            {\r\n               appList = [];\r\n            }\r\n\r\n            for (var a = 0; a < doctor.length; a++)\r\n            {\r\n               var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n               if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n               {\r\n                  var tempAppointment = [...appointments]\r\n                                    .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                                    .filter((item) => item.DocEmail === doctor[a].Email);\r\n                  \r\n                  for (var b = 0; b < tempAppointment.length; b++)\r\n                  {\r\n                     // Send email to user\r\n                     let details = {\r\n                        date: tempAppointment[b].Date,\r\n                        doctor: tempAppointment[b].Doctor,\r\n                        timeslot: tempAppointment[b].Timeslot,\r\n                        user: tempAppointment[b].Patient,\r\n                        email: tempAppointment[b].PatientEmail,\r\n                        department: doctor[a].Department\r\n                     };\r\n                     let response = await fetch(URI+\"/sendReminder\", {\r\n                           method: \"POST\",\r\n                           headers: {\r\n                              \"Content-Type\": \"application/json;charset=utf-8\"\r\n                           },\r\n                           body: JSON.stringify(details)\r\n                     });\r\n                     let result = await response.json();\r\n                     console.log(result.status);\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         submitReminderAlert()\r\n      }\r\n\r\n      else\r\n      {\r\n         alert(\"Unable to Send Reminder to Past Appointment\");\r\n      }\r\n\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n         {/* department selection*/}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Department:</s.headerLabel>\r\n            <ReactMultiSelectCheckboxes \r\n            options={[{label: \"All\", value: \"*\"}, ...options]}\r\n            value={selectedOptions}\r\n            onChange={onChange}\r\n            setState={setSelectedOptions}/>\r\n         </div>\r\n         <br />\r\n\r\n         {/* date selection */}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Date:</s.headerLabel>\r\n            <DatePicker \r\n            todayButton=\"Navigate to Today\"\r\n            selected={startDate} \r\n            onChange={date => setStartDate(date)}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            cursor= \"pointer\"\r\n            />\r\n         </div>\r\n         <br/>\r\n\r\n         {/* Send Reminder Button */}\r\n         <s.newButton onClick={sendReminder}> Send Reminder </s.newButton>\r\n         &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n         <br/> <br/>\r\n         <s.docSchedule>\r\n            <h3> Date: {startDate.toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'}).replace(/ /g, '-')} </h3>\r\n            <br/>\r\n            {/*display doctor schedule*/}\r\n            <div style={{backgroundColor:\"#488AC7\"}}>\r\n               {appList.map(item => (\r\n                  <s.appDetails>\r\n                  {item}\r\n                  </s.appDetails>\r\n               ))}\r\n            </div>\r\n         </s.docSchedule>\r\n      </div>\r\n   );\r\n}\r\n \r\n\r\nexport default ViewDoctorScheduleUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js",["977","978","979","980","981","982","983","984","985","986"],"import React, {useState} from 'react';\r\nimport NavBar from '../components/navbarUI';\r\nimport { Link } from \"react-router-dom\"\r\nimport {useAuth} from '../util/Auth';\r\nimport { firestore, auth } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\nfunction SAHomePageUI() {\r\n    //react hooks\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    //fecthes data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Users.map(user => <h1> Hello {user.Name},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Manage Account</h5>\r\n                                        <p className=\"card-text\">You can view, delete, disable, enable, and edit account details</p>\r\n                                        <a onClick={() => {window.location.href=\"/SysAdm/viewAllAccount\"}} className=\"btn btn-primary\">Manage Account</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1520223297779-95bbd1ea79b7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MzN8fHByb2ZpbGV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">My Profile</h5>\r\n                                        <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                        <a onClick={() => {window.location.href=\"/SysAdm/myProfile\"}} className=\"btn btn-primary\">View / Edit Profile</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                        className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Educational</h5>\r\n                                            <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                            <a onClick={() => {window.location.href=\"/SysAdm/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SAHomePageUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js",["987","988","989","990","991","992"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom';\r\nimport { auth, firestore, storageRef } from '../firebase';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport Select from 'react-select';\r\n\r\nfunction CreateAccountUI() {\r\n\r\n   //useStates\r\n   const [fileUrl, setFileUrl] = React.useState(null);\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Role, setRole] = useState(\"\");\r\n   const [specialist, setSpecialist] = useState(\"\"); \r\n   const [information, setInformation] = useState(\"\"); \r\n   const [education, setEducation] = useState(\"\"); \r\n   const [department, setDepartment] = useState(\"\");\r\n   const [disabled, setDisabled] = useState(true) \r\n\r\n\r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const EmailRef = useRef();\r\n\r\n   let URI = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_URI : process.env.REACT_APP_PROD_URI;\r\n   \r\n   const onFileChange = async (e) => {\r\n      const file = e.target.files[0];\r\n      const sRef = storageRef\r\n      const fileRef = sRef.child(\"MedicalStaff/\" + file.name);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    \r\n   const submitCreateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Account has been created successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (Role === \"\" || Role === \"Select A Role\") {\r\n         return setError(\"Not A Valid Role\")\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         \r\n         await firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email: Email.toLowerCase(),\r\n            Role: Role\r\n         })\r\n\r\n         await firestore.collection('Medical Staff').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email: Email.toLowerCase(),\r\n            Role: Role\r\n         })\r\n\r\n         if (Role === \"Medical Doctor\"){\r\n            await firestore.collection('Medical Doctors').add({\r\n               Image: fileUrl,\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role,\r\n               Specialist: specialist,\r\n               Education: education,\r\n               Information: information,\r\n               Department: department\r\n            })\r\n            .then(() => {\r\n               submitCreateAlert()\r\n            })\r\n         }\r\n\r\n         if (Role === \"Medical Admin\"){\r\n            await firestore.collection('Medical Administrator').add({\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role\r\n            })\r\n            .then(() => {\r\n               submitCreateAlert()\r\n            })\r\n         }\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(URI+\"/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n      }\r\n      setLoading(false);\r\n      setDisabled(false);\r\n      };\r\n\r\n      const departmentList = [\r\n         { label: 'General Practitioner (Non-specialist) Level 1 Unit 01-1', value: 'General Practitioner (Non-specialist) Level 1 01-1'},\r\n         { label: 'Anesthesiology Level 2 Unit 02-1', value: 'Anesthesiology Level 1 Unit 02-1'},\r\n         { label: 'Cardiology Level 3 Unit 03-1', value: 'Cardiology Level 3 Unit 03-1' },\r\n         { label: 'Dermatology Level 4 Unit 04-1', value: 'Dermatology Level 4 Unit 04-1'},\r\n         { label: 'Endocrinology Level 5 Unit 05-1', value: 'Endocrinology Level 5 Unit 05-1'},\r\n         { label: 'Gastroenterology Level 6 Unit 06-1', value: 'Gastroenterology Level 6 Unit 06-1'},\r\n         { label: 'Haematology Level 7 Unit 07-1', value: 'Haematology Level 7 Unit 07-1' },\r\n         { label: 'Immunology Level 8 Unit 08-1', value: 'Immunology Level 8 Unit 08-1'},\r\n         { label: 'Infectious Diseases Level 9 Unit 09-1', value: 'Infectious Diseases Level 9 Unit 09-1'},\r\n         { label: 'Neurology Level 10 Unit 10-1', value: 'Neurology Level 10 Unit 10-1'},\r\n         { label: 'Oncology Level 11 Unit 11-1', value: 'Oncology Level 11 Unit 11-1'},\r\n         { label: 'Orthopaedic Level 12 Unit 12-1', value: 'Orthopaedic Level 12 Unit 12-1'},\r\n         { label: 'Psychiatry Level 13 Unit 13-1', value: 'Psychiatry Level 13 Unit 13-1'},\r\n         { label: 'Rheumatology Level 14 Unit 14-1', value: 'Rheumatology Level 14 Unit 14-1'},\r\n         { label: 'Urology Level 15 Unit 15-1', value: 'Urology Level 15 Unit 15-1'},\r\n       ];\r\n\r\n   return (\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n          <IdleTimerContainer></IdleTimerContainer>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create Medical Staff Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                 {Role===\"Medical Doctor\"?(\r\n                 <Form.Group id = \"Avatar\">\r\n                  <Form.Label>Upload Image</Form.Label>\r\n                        <Form.Control \r\n                       onChange = {onFileChange}        \r\n                     type=\"file\"/>\r\n                     </Form.Group>\r\n                 ):null}\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z .]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n               \r\n\r\n                     <Form.Group className = \"mb-0\" id = \"AccountType\" style = {{\r\n                           marginTop: \"1%\",\r\n                     }}>\r\n                        <Form.Label>Role</Form.Label>\r\n                     </Form.Group>\r\n\r\n                     <select className = \"my-3\" placeholder = \"Select A Role\" onChange = {(e)=> setRole(e.target.value)}>\r\n                        <option disabled = \"disabled\" selected = \"selected\">Select A Role</option>\r\n                        <option>Medical Doctor</option>\r\n                        <option>Medical Admin</option>\r\n                     </select>\r\n                     {Role===\"Medical Doctor\"?(\r\n                        <div>\r\n                     <Form.Group id = \"Specialist\">\r\n                     <Form.Label>Specialist</Form.Label>\r\n                     <Form.Control \r\n                     onChange={(e) => setSpecialist(e.target.value)}\r\n                     type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Education\">\r\n                     <Form.Label>Education</Form.Label>\r\n                     <Form.Control \r\n                     as = \"textarea\"\r\n                     rows = {3}\r\n                     onChange={(e) => setEducation(e.target.value)}\r\n                     type=\"text\" required/>\r\n\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Information\">\r\n                        <Form.Label>Information</Form.Label>\r\n                        <Form.Control \r\n                        as = \"textarea\"\r\n                        rows = {3}\r\n                        onChange={(e) => setInformation(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Select options={departmentList}\r\n                     onChange = {(e)=> setDepartment(e.value)}\r\n                        />\r\n                     </div> \r\n                                                              \r\n                     ):null}\r\n                    \r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Button className=\"w-100\" type=\"submit\">Create Account</Button>\r\n                     <Button disabled = {disabled} className=\"w-100 my-2\" type=\"submit\" target=\"_blank\" href=\"https://console.firebase.google.com/u/0/project/myappointment-bb30e/authentication/users\">Set Up Authentication</Button>\r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n   )\r\n}\r\n\r\nexport default CreateAccountUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js",["993","994","995","996","997","998","999","1000"],"import React, { useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport {useRouteMatch, useLocation} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Select from 'react-select';\r\n\r\n\r\nfunction ViewIndividualAccountUI() {\r\n\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [doctor, setDoctor] = useState([]);\r\n   const [medicalAdmin, setMedicalAdmin] = useState([]);\r\n   const [medicalStaff, setMedicalStaff] = useState([]);\r\n   const [loading, setLoading] = useState(false)\r\n\r\n   const [enableFields, setEnableFields] = useState(true);\r\n   const [editEnabled, setEditEnabled] = useState(false);\r\n   const[updateEnabled, setUpdateEnabled] = useState(true);\r\n   const { currentUser } = useAuth();\r\n   const { updateEmail } = useAuth();\r\n   const [Users, setUsers] = useState([]);\r\n   const [specialist, setSpecialist] = useState(\"\"); \r\n   const [information, setInformation] = useState(\"\"); \r\n   const [education, setEducation] = useState(\"\"); \r\n   const [department, setDepartment] = useState({label : \"\", value: \"\"});\r\n\r\n   const {path} = useRouteMatch();\r\n\r\n   const {state} = useLocation();\r\n   const {user} = state;  \r\n   let history = useHistory();\r\n   \r\n\r\n\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Medical Doctors\").limit(1)\r\n         .where(\"Email\", \"==\", String(user.Email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n\r\n         firestore.collection(\"Medical Admin\").limit(1)\r\n         .where(\"Email\", \"==\", String(user.Email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setMedicalAdmin(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n\r\n\r\n         firestore.collection(\"Medical Staff\").limit(1)\r\n         .where(\"Email\", \"==\", String(user.Email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setMedicalStaff(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n   const doc = {...doctor[0]}\r\n   const ma = {...medicalAdmin[0]}\r\n   const ms = {...medicalStaff[0]}\r\n\r\n\r\n   function onEdit(){\r\n      setEditEnabled(true);\r\n      setUpdateEnabled(false);\r\n      setEnableFields(false);\r\n      setFirstName(user.FirstName);\r\n      setLastName(user.LastName);\r\n      setNRIC(user.NRIC);\r\n      setDOB(user.DOB);\r\n      setAddress(user.Address);\r\n      setEmail(user.Email);\r\n      setTelephone(user.Telephone);\r\n      setInformation(doc.Information);\r\n      setSpecialist(doc.Specialist);\r\n      setEducation(doc.Education);\r\n      setDepartment({label: doc.Department, value: doc.Department});\r\n   }\r\n\r\n   const submitUpdateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: user.Role + ' account has been updated successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n\r\n         if (user.Role === \"Medical Doctor\"){\r\n            await firestore.collection('Medical Doctors').doc(doc.id).update({\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Specialist: specialist,\r\n               Education: education,\r\n               Information: information,\r\n               Department: department.value\r\n            })\r\n            await firestore.collection('Medical Staff').doc(ms.id).update({\r\n               FirstName: FirstName,\r\n               LastName: LastName,\r\n               Email: Email.toLowerCase(),\r\n            })\r\n            .then(() => {\r\n               submitUpdateAlert()\r\n            })\r\n         }\r\n         if (user.Role === \"Patient\"){\r\n            firestore.collection(\"Users\").doc(user.id)\r\n            .update({\r\n               FirstName: FirstName,\r\n               LastName: LastName,\r\n               NRIC: NRIC,\r\n               Address: Address,\r\n               DOB: DOB,\r\n               Telephone: Telephone\r\n            })\r\n            .then(() => {\r\n               submitUpdateAlert()\r\n            })\r\n         }\r\n      } catch(error){\r\n         return setError(error.message); \r\n      }\r\n      setEnableFields(true);\r\n      setUpdateEnabled(true);\r\n      setEditEnabled(false);\r\n   }\r\n   \r\n\r\n   const departmentList = [\r\n      { label: 'General Practitioner (Non-specialist) Level 1 Unit 01-1', value: 'General Practitioner (Non-specialist) Level 1 01-1'},\r\n      { label: 'Anesthesiology Level 2 Unit 02-1', value: 'Anesthesiology Level 1 Unit 02-1'},\r\n      { label: 'Cardiology Level 3 Unit 03-1', value: 'Cardiology Level 3 Unit 03-1' },\r\n      { label: 'Dermatology Level 4 Unit 04-1', value: 'Dermatology Level 4 Unit 04-1'},\r\n      { label: 'Endocrinology Level 5 Unit 05-1', value: 'Endocrinology Level 5 Unit 05-1'},\r\n      { label: 'Gastroenterology Level 6 Unit 06-1', value: 'Gastroenterology Level 6 Unit 06-1'},\r\n      { label: 'Haematology Level 7 Unit 07-1', value: 'Haematology Level 7 Unit 07-1' },\r\n      { label: 'Immunology Level 8 Unit 08-1', value: 'Immunology Level 8 Unit 08-1'},\r\n      { label: 'Infectious Diseases Level 9 Unit 09-1', value: 'Infectious Diseases Level 9 Unit 09-1'},\r\n      { label: 'Neurology Level 10 Unit 10-1', value: 'Neurology Level 10 Unit 10-1'},\r\n      { label: 'Oncology Level 11 Unit 11-1', value: 'Oncology Level 11 Unit 11-1'},\r\n      { label: 'Orthopaedic Level 12 Unit 12-1', value: 'Orthopaedic Level 12 Unit 12-1'},\r\n      { label: 'Psychiatry Level 13 Unit 13-1', value: 'Psychiatry Level 13 Unit 13-1'},\r\n      { label: 'Rheumatology Level 14 Unit 14-1', value: 'Rheumatology Level 14 Unit 14-1'},\r\n      { label: 'Urology Level 15 Unit 15-1', value: 'Urology Level 15 Unit 15-1'},\r\n    ];\r\n\r\n   return (\r\n      <>\r\n      <div>\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">{user.Role} Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.FirstName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.LastName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     {user.Role === \"Patient\"?\r\n                     <div>\r\n                        <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.NRIC} \r\n                        disabled = {true} \r\n                        onChange={(e) => setNRIC(e.target.value)}\r\n                        pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Address} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.DOB} \r\n                        disabled = {true}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Telephone} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     </div>\r\n                     :null}\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Email} \r\n                        disabled = {true} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     \r\n                     {user.Role === \"Medical Doctor\"?\r\n                     (\r\n                     <div>\r\n                     <Form.Group id = \"Specialist\">\r\n                     <Form.Label>Specialist</Form.Label>\r\n                     <Form.Control \r\n                     defaultValue = {doc.Specialist}\r\n                     onChange={(e) => setSpecialist(e.target.value)}\r\n                     disabled = {enableFields}\r\n                     type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Education\">\r\n                     <Form.Label>Education</Form.Label>\r\n                     <Form.Control \r\n                     as = \"textarea\"\r\n                     rows = {3}\r\n                     defaultValue = {doc.Education}\r\n                     onChange={(e) => setEducation(e.target.value)}\r\n                     disabled = {enableFields}\r\n                     type=\"text\" required/>\r\n\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Information\">\r\n                        <Form.Label>Information</Form.Label>\r\n                        <Form.Control \r\n                        as = \"textarea\"\r\n                        rows = {3}\r\n                        defaultValue = {doc.Information}\r\n                        onChange={(e) => setInformation(e.target.value)}\r\n                        disabled = {enableFields}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Select options={departmentList}\r\n                     isDisabled = {enableFields}\r\n                     value = {enableFields ? {label: doc.Department, value: doc.Department}:department}\r\n                     onChange = {(e)=> setDepartment({...e})}\r\n                     />\r\n                     </div>\r\n\r\n\r\n                     ):null}\r\n                     \r\n                     <Button onClick={onEdit} disabled = {editEnabled} className=\"w-100 my-2\">Edit</Button>\r\n            \r\n                     <Button disabled = {updateEnabled} className=\"w-100 my-2\" type=\"submit\">Update</Button>\r\n                  \r\n                     <Button href = {`${path}`} disabled = {updateEnabled} className=\"w-100 my-2\">Cancel</Button>   \r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n            \r\n      </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ViewIndividualAccountUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\confirmDelete.js",["1001","1002","1003","1004"],"import React,{useState} from 'react'\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction ConfirmDelete() {\r\n    //react hooks\r\n    const [error, setError] = useState(\"\");     // store error message\r\n    const {state} = useLocation();              // access appointment passed from link router\r\n    const {user} = state;                // save appointment data from state\r\n    const history = useHistory();\r\n    const [doctor, setDoctor] = useState([])\r\n    const [medStaff, setMedStaff] = useState([])\r\n    const [medAdm, setMedAdm] = useState([]);\r\n\r\n    //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Medical Staff\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setMedStaff(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Medical Administrator\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setMedAdm(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     //alert message\r\n     const deleteAccountAlert = () => {\r\n        confirmAlert({\r\n          title: 'Deleted!',\r\n          message: 'Account was Deleted successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     const doc = {...doctor[0]}\r\n     const ms = {...medStaff[0]}\r\n     const ma = {...medAdm[0]}\r\n\r\n    //handle submit function deletes user account from firestore collection\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n\r\n        try{\r\n            if(user.Role === \"Medical Doctor\")\r\n            {\r\n                await firestore.collection(\"Medical Doctors\").doc(doc.id).delete()\r\n                await firestore.collection(\"Medical Staff\").doc(ms.id).delete()\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n            if(user.Role === \"Medical Admin\")\r\n            {\r\n                await firestore.collection(\"Medical Administrator\").doc(ma.id).delete()\r\n                await firestore.collection(\"Medical Staff\").doc(ms.id).delete()\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n            if(user.Role === \"Patient\" || user.Role === \"System Admin\")\r\n            {\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n        }\r\n        catch(error)\r\n        {\r\n            return setError(error.message);\r\n        }\r\n   }\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Confirm Delete</Card.Title>\r\n                <label class=\"note\">The following account will be deleted from Database:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"email\">\r\n                        <Form.Label className=\"my-2\">Email</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue ={user.Email}\r\n                        disabled = {true}\r\n                        type=\"text\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"role\">\r\n                        <Form.Label className=\"my-2\">Role</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue ={user.Role}\r\n                        disabled = {true}\r\n                        type=\"text\" required/>\r\n                  </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Delete</Button>\r\n                <Button className=\"w-100 my-2\" type=\"submit\" target=\"_blank\" href=\"https://console.firebase.google.com/u/0/project/myappointment-bb30e/authentication/users\">Delete Authentication</Button>\r\n                <Link to={'/SysAdm/viewAllAccount'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDelete\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js",["1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {StaffInput} from './StaffInput'\r\nimport SearchBar from './searchBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllStaffAccount() \r\n{\r\n   //react hooks\r\n   const [users, setUsers] = useState([])\r\n   const [medicalDocUsers, setMedicalDocUsers] = useState([])\r\n   const [medicalStaff, setMedicalStaff] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [filteredUsers, setFilteredUsers] = useState([]);\r\n   let history = useHistory();\r\n   \r\n   // fetches data on render\r\n   React.useEffect(() => {\r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('Medical Staff').get()\r\n         setMedicalStaff(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n\r\n         const dataa = await firestore.collection('Users').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   const filteredArray =   medicalStaff.filter((user) =>\r\n   user.Email.toLowerCase().includes(search.toLowerCase())\r\n )\r\n\r\n   return(\r\n      <>\r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">Staff Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Search for a user by Email...\"/>\r\n         </div>\r\n                                                                                                                                   \r\n      <div\r\n         style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginBottom: \"20px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n      >\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllStaffAccount\"}}/>Staff\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllAccount\"}}/>All Users\r\n      </div>       \r\n       \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>                                                 \r\n                     <th>Email Address</th>  \r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredArray.map(medicalStaff => (\r\n                        <tr>\r\n                           <td>{medicalStaff.FirstName} {medicalStaff.LastName}</td>                                                                                                 \r\n                           <td>{medicalStaff.Email}</td>\r\n                           <td>{medicalStaff.Role}</td>\r\n                        <StaffInput medicalStaff = {medicalStaff} />\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllStaffAccount","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js",["1019"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\n// this route is for system admin that has already been authenticated\r\nfunction SystemAdminRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SystemAdminRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["1020","1021","1022","1023","1024","1025"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport {UserInput} from './UserInput'\r\nimport {StaffInput} from './StaffInput'\r\nimport SearchBar from './searchBar';\r\nimport DropDown from './dropDownBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllAccountUI() \r\n{\r\n   //react hooks\r\n   const [users, setUsers] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [DropDownn, setDropDownn] = useState(\"All\");\r\n   const [radio, setRadio] = useState(\"All\");\r\n   let history = useHistory();\r\n\r\n   //fetches data on render\r\n   React.useEffect(() => {\r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('Users').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   //filter function filters search data based on text in search field \r\n   //and based on dropdown value selected\r\n   let filteredUser = users.filter(user => {\r\n      if (DropDownn === \"All\" && DropDownn === \"Select A User by...\")\r\n         return user\r\n      else if (DropDownn === \"Patient\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"Medical Doctor\")\r\n       return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"Medical Admin\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"System Admin\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      return user.Email.toLowerCase().includes(search.toLowerCase())\r\n  })\r\n  \r\n\r\n   return(\r\n      <>\r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Enter a user by Email...\"/>\r\n         </div>\r\n\r\n         {/* drop down */}\r\n         <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                }}>\r\n                <DropDown handleChange={(e) => setDropDownn(e.target.value)} placeholder=\"Select an option\" /> \r\n         </div>       \r\n         <div\r\n        style={{\r\n               display: \"flex\",\r\n               justifyContent: \"center\",\r\n               alignItems: \"center\",\r\n               marginBottom: \"20px\",\r\n               fontWeight: \"bold\"\r\n           }}\r\n     >\r\n     </div>       \r\n      \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n\r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>NRIC</th>\r\n                     <th>Address</th>\r\n                     <th>Date Of Birth</th>\r\n                     <th>Email Address</th>\r\n                     <th>Telephone</th>\r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredUser.map(users => (\r\n                        <tr>\r\n                           {users.Name ? (<td>{users.Name}</td>):(<td>{users.FirstName} {users.LastName}</td>)} \r\n                            \r\n                           {users.NRIC ? (<td>{users.NRIC}</td>):(<td>-</td>)}\r\n                           {users.Address ? (<td>{users.Address}</td>):(<td>-</td>)}\r\n                           {users.DOB ? (<td>{users.DOB}</td>):(<td>-</td>)}\r\n                           <td>{users.Email}</td>\r\n                           {users.Telephone ? (<td>{users.Telephone}</td>):(<td>-</td>)}\r\n                           <td>{users.Role}</td>\r\n                        <StaffInput medicalStaff = {users}/>\r\n\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         \r\n      </div>\r\n     \r\n\r\n\r\n\r\n      \r\n      {/* <ul> */}\r\n         {/* {users.map(users => ( */}\r\n            {/* // <li key = {users.FirstName}> */}\r\n               {/* <UserInput users = {users}/> */}\r\n            {/* </li> */}\r\n         {/* // ))} */}\r\n      {/* </ul> */}\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllAccountUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js",["1026","1027","1028","1029","1030","1031"],"import React from 'react'\r\nimport {Form, Button, Card, Container, Alert, Row, Col} from 'react-bootstrap'\r\nimport {Link,} from \"react-router-dom\";\r\nimport TextTruncate from 'react-text-truncate';\r\n\r\n// individual doctor cards to be called in search doctor page\r\nconst DoctorCard = (props) => {\r\n    return(\r\n            <Card className=\"\" style={{ width: '18rem' }}>\r\n               <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Img variant=\"top\" src={props.data.Image} height=\"220px\" />\r\n               </Link>\r\n         <Card.Body>\r\n         <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Title>{props.data.Name}</Card.Title>\r\n            </Link>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Department: {props.data.Department}</Card.Subtitle>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Specialty: {props.data.Specialist}</Card.Subtitle>\r\n            {/* <TextTruncate \r\n               line={3}\r\n               element=\"span\"\r\n               truncateText=\"…\"\r\n               text={props.data.Information}\r\n            /> */}\r\n               <Link to={{pathname: 'doctorProfile/'+props.data.id, state:{doctor: props.data}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n         </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default DoctorCard","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js",["1032","1033","1034","1035","1036"],"import React, {useState} from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport './comment.css'\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore} from '../firebase';\r\nimport StarRatings from 'react-star-ratings';\r\nimport moment from 'moment';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction PatientComment(props) {\r\n    const [comments, setComments] = useState([])\r\n    const [currentComments, setCurrentComments] = useState(\"\")\r\n    const {currentUser} = useAuth()\r\n    const [users, setUsers] = useState([])\r\n    const [rating, setRating] = useState(1)\r\n\r\n    const submitCommentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your comment has been posted successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n           await firestore.collection(\"comments\")\r\n           .where(\"Email\", \"==\", String(props.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setComments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n     const user = {...users[0]}\r\n     let array = []\r\n           \r\n     // function adds user's comments to the database\r\n    async function submitComment (e) {\r\n        e.preventDefault()\r\n        const obj = {\r\n            email: props.email,\r\n            patient: user.FirstName + \" \" + user.LastName,\r\n            patientEmail: currentUser.email,\r\n            comment: currentComments,\r\n            rating: rating, \r\n            date: moment(new Date()).format('MMMM Do YYYY')\r\n        }\r\n        \r\n        array.push(obj)\r\n\r\n        \r\n        await firestore.collection(\"comments\").add(\r\n            {\r\n                Email: props.email,\r\n                patient: user.FirstName + \" \" + user.LastName,\r\n                patientEmail: currentUser.email,\r\n                comment: currentComments,\r\n                rating: rating,\r\n                date: moment(new Date()).format('MMMM Do YYYY')\r\n            }\r\n        ).then(() => {\r\n            submitCommentAlert()\r\n        })\r\n        await firestore.collection(\"comments\")\r\n        .where(\"Email\", \"==\", String(props.email))\r\n        .get()\r\n        .then(function(data){\r\n           console.log(data)\r\n              setComments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n        }); \r\n    }\r\n\r\n    // function deletes user comments from database\r\n    async function DeleteComment (comment) {\r\n        array = array.filter(i => i.id !== comment.id);\r\n       await firestore.collection(\"comments\").doc(comment.id).delete().then(()=>{\r\n            alert(\"Comment has been deleted successfully!\")\r\n            window.location.reload();\r\n\r\n        }).catch(err => alert(err))\r\n    }\r\n  \r\n\r\n  let Total = 0\r\n\r\n  for (var i = 0; i < comments.length; i++) {\r\n      Total += parseFloat(comments[i].rating)\r\n  }\r\n\r\n  const avg = Total / comments.length\r\n\r\n   \r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center\">\r\n            {users.map(user => \r\n            <div className = \"comment-box\">\r\n                \r\n                <h5>REVIEWS</h5>\r\n                \r\n                <h1 className = \"font\" style = {{\r\n                    fontSize: \"70px\"\r\n                }}>{avg?avg.toFixed(1):0}</h1>\r\n\r\n            <div className = \"star\" style = {{\r\n                marginTop: \"-1%\"\r\n            }}> \r\n                <StarRatings\r\n                rating= {avg?avg:0}\r\n                starDimension=\"25px\"\r\n                starSpacing=\"2px\"\r\n                starRatedColor=\"orange\"         \r\n            />\r\n            </div>\r\n            \r\n            <div className = \"row\">\r\n            <img src = \"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/user-512.png\" style = {{\r\n                width: \"40px\",\r\n                colorAdjust: \"#0069d9\",\r\n                marginLeft: \"1%\"\r\n                \r\n            }}/>\r\n            <h5 className = \"mt-2 ml-1\">{comments.length} total</h5>\r\n            </div>\r\n            \r\n                <Form className = \"comment-form\" onSubmit = {submitComment}>\r\n                    <div className = \"comment-form-fields\">\r\n                    \r\n                    <Form.Group id = \"Name\">\r\n                        <Form.Control \r\n                        defaultValue = {user.FirstName + \" \" + user.LastName} \r\n                        disabled = {true} \r\n                        required/>\r\n                     </Form.Group>\r\n                    \r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Control \r\n                        defaultValue = {currentUser.email} \r\n                        disabled = {true} \r\n                        required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Write a review here\">\r\n                        <Form.Control \r\n                        as = \"textarea\"\r\n                        placeholder = \"Write a review here\"\r\n                        rows = {3}\r\n                        onChange={(e) => setCurrentComments(e.target.value)}\r\n                        disabled = {false} \r\n                        required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Leave a rating here\">\r\n                        <Form.Control \r\n                        placeholder = \"Leave a rating here\"\r\n                        type = \"number\"\r\n                        min = \"1\" \r\n                        max = \"5\"\r\n                        pattern = \"[1-5]\"\r\n                        onChange={(e) => setRating(e.target.value)}\r\n                        disabled = {false} \r\n                        required/>\r\n                     </Form.Group>\r\n                     \r\n                     <Button className=\"w-100\" type=\"submit\">Post Review</Button>\r\n                     </div>\r\n                </Form>\r\n\r\n                <h3>Reviews</h3>\r\n                    {comments.length === 0 && (<h4 className = \"comment-count\"> No reviews yet </h4>)}\r\n                    {comments.length !== 0 && (<h4 className = \"comment-count\"> {comments.length} reviews </h4> \r\n                    )}\r\n            \r\n                      {comments.map(comment => \r\n                      \r\n                    \r\n                    <div className = \"comment\">\r\n                        <p className = \"mt-1\">{comment.patient} </p>\r\n                        \r\n                        <div className = \"row\" style = {{\r\n                            marginLeft: \"-0.05%\",\r\n                            marginTop: \"-0.5%\"\r\n                        }}> \r\n                        <StarRatings \r\n                         \r\n                         \r\n                         \r\n                        \r\n                        rating= {parseFloat(comment.rating)}\r\n                        starDimension=\"20px\"\r\n                        starSpacing=\"2px\"\r\n                        starRatedColor=\"orange\"  \r\n                        />\r\n                        <p className = \"ml-3 mt-1\">{comment.date}</p>\r\n                        </div>\r\n\r\n                                                   \r\n                        <p className = \"comment-body mt-4\">{comment.comment}</p>\r\n\r\n\r\n                        <div className = \"comment-footer ml-1\" >\r\n                            <button className = \"btn btn-danger mt-4\" onClick = {(e)=>{DeleteComment(comment)}} disabled = {currentUser.email !== comment.patientEmail}>Delete</button>\r\n                        </div>\r\n                    </div>)}                            \r\n            </div> \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientComment\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js",["1037","1038","1039"],"import React from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\n// displays real time MC by receiving props \r\nfunction MC(props) {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{props.name}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {props.days} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {moment(props.startDate).format(\"DD/MM/YYYY\")} and is valid till {moment(props.endDate).format(\"DD/MM/YYYY\")}</Card.Text>\r\n            <Card.Img src={props.imageURL}\r\n            style={{maxWidth:\"10%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"75%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '11%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{props.doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MC\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\StaffInput.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048"],"import React, {useState} from 'react'\r\nimport {firestore} from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {Link, BrowserRouter} from 'react-router-dom';\r\nimport * as admin from \"firebase-admin\";\r\n\r\nexport const StaffInput = (props) => {\r\n\r\n    //react hooks\r\n    const [doctor, setDoctor] = useState([])\r\n    const [user, setUser] = useState([])\r\n\r\n    //fetches data on render\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\", \"==\", String(props.medicalStaff.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(props.medicalStaff.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUser(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const doc = {...doctor[0]}\r\n     const u = {...user[0]}\r\n\r\n    return (<>\r\n        <div>\r\n        <Link to = {{\r\n            pathname: '/SysAdm/viewIndvAcc',\r\n            state: {user: props.medicalStaff}\r\n        }}>\r\n        <Button className = \"btn btn-success\">Edit</Button></Link>\r\n        <Link to = {{\r\n            pathname: '/SysAdm/confirmDel',\r\n            state: {user: props.medicalStaff}\r\n        }}><button class = \"btn btn-danger\">Delete</button></Link>\r\n        </div>\r\n    </>\r\n    )\r\n}","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js",["1049","1050","1051","1052","1053","1054","1055"],"import React, {useState} from 'react'\r\nimport {firestore} from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {Link, BrowserRouter} from 'react-router-dom';\r\nimport * as admin from \"firebase-admin\";\r\n\r\nexport const UserInput = (props) => {\r\n    \r\n    const [doctor, setDoctor] = useState([])\r\n    const [user, setUser] = useState([])\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\", \"==\", String(props.users.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\").limit(1)\r\n           .where(\"Email\", \"==\", String(props.users.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUser(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const doc = {...doctor[0]}\r\n     const u = {...user[0]}\r\n\r\n     const onDelete = async (id1, id2) => {\r\n        await firestore.collection(\"Medical Staff\").doc(props.users.id).delete()\r\n        await firestore.collection(\"Medical Doctors\").doc(id1).delete()\r\n        await firestore.collection(\"Users\").doc(id2).delete()\r\n         .then(() => {\r\n            alert(\"User has been deleted Successfully!\");\r\n            window.location.reload();\r\n         })\r\n    }\r\n\r\n\r\n    return (<>\r\n        {/* {<button onClick={onUpdateFirstName}>Update</button>} */}\r\n        <div>\r\n        <Link to = {{\r\n            pathname: '/SysAdm/viewIndvAcc',\r\n            state: {user: props.users}\r\n        }}>\r\n        \r\n        \r\n\r\n        <Button className = \"btn btn-success\">Edit</Button></Link>\r\n        <button onClick={(e) => onDelete(doc.id, u.id)} class = \"btn btn-danger\">Delete</button>\r\n        </div>\r\n    </>\r\n    )\r\n}",["1056","1057"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\index.js",[],["1058","1059"],"C:\\Users\\malla\\Desktop\\project\\src\\App.js",["1060","1061","1062","1063","1064","1065","1066","1067"],"C:\\Users\\malla\\Desktop\\project\\src\\reportWebVitals.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\noMatch.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\Patient.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SysAdm.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MedDoc.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MedAdm.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\User\\LoginUI.js",["1068","1069","1070","1071","1072","1073"],"C:\\Users\\malla\\Desktop\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\Auth.js",["1074"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\RegisterUI.js",["1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085"],"C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MARoute.js",["1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096"],"C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MDRoute.js",["1097"],"C:\\Users\\malla\\Desktop\\project\\src\\Routes\\PRoute.js",["1098","1099","1100"],"C:\\Users\\malla\\Desktop\\project\\src\\App.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Routes\\SARoute.js",["1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\SASideBarData.js",["1113"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MDSideBarData.js",["1114"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\PSideBarData.js",["1115"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MASideBarData.js",["1116"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Navbar\\NavigationbarSA.js",["1117","1118","1119"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\PasswordStrengthIndicator.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\firebase.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\IdleTimerContainer.js",["1120"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js",["1121"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticle.js",["1122"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticle.js",["1123","1124","1125"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js",["1126","1127","1128"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\EditArticle\\EditArticle.js",["1129","1130","1131"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MAHomepageUI.js",["1132","1133","1134","1135"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ResAppointmentUI.js",["1136"],"C:\\Users\\malla\\Desktop\\project\\src\\util\\MedAdmRoute.js",["1137"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js",["1138","1139","1140","1141","1142","1143"],"C:\\Users\\malla\\Desktop\\project\\src\\User\\myProfilePageUI.js",["1144","1145"],"C:\\Users\\malla\\Desktop\\project\\src\\User\\ViewHealthArticleUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\DoctorRoute.js",["1146"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js",["1147","1148","1149","1150","1151","1152"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MDHomepageUI.js",["1153","1154","1155","1156","1157"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js",["1158"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMPUI.js",["1159","1160","1161","1162","1163","1164","1165","1166","1167"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js",["1168","1169","1170","1171","1172","1173"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMC.js",["1174","1175","1176","1177","1178","1179","1180","1181"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMC.js",["1182","1183"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewReceipt.js",["1184","1185"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewIndividualMPUI.js",["1186","1187","1188","1189","1190","1191"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ScheduleAppointmentUI.js",["1192","1193","1194"],"C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\PatientViewArticle.js",["1195"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchDoctor.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorProfile.js",["1196"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\CancelAppointmentUI.js",["1197","1198","1199","1200"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ResAppointmentUI.js",["1201"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\BookAppointmentUI.js",["1202","1203"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\userAppointmentUI.js",["1204","1205","1206","1207","1208","1209","1210","1211"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMyMPUI.js",["1212"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PHomepageUI.js",["1213","1214","1215","1216","1217","1218"],"C:\\Users\\malla\\Desktop\\project\\src\\util\\PatientRoute.js",["1219","1220"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\DocRescheduleUI.js",["1221","1222"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js",["1223","1224","1225"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMPUI.js",["1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js",["1237","1238","1239","1240","1241"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\EditMedicalRecord.js",["1242","1243"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js",["1244"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js",["1245"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SAHomepageUI.js",["1246","1247","1248","1249","1250","1251","1252","1253","1254","1255"],"C:\\Users\\malla\\Desktop\\project\\src\\util\\SystemAdminRoute.js",["1256"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\confirmDelete.js",["1257","1258","1259","1260"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js",["1261","1262","1263","1264","1265","1266","1267","1268"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\CreateAccountUI.js",["1269","1270","1271","1272","1273","1274"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js",["1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["1289","1290","1291","1292","1293","1294"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\ArticleCard\\ArticleCard.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MC.js",["1295","1296","1297"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorCard.js",["1298","1299","1300","1301","1302","1303"],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PatientComment.js",["1304","1305","1306","1307","1308"],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\UserInput.js",["1309","1310","1311","1312","1313","1314","1315"],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\StaffInput.js",["1316","1317","1318","1319","1320","1321","1322","1323","1324"],{"ruleId":"1325","replacedBy":"1326"},{"ruleId":"1327","replacedBy":"1328"},{"ruleId":"1329","severity":1,"message":"1330","line":30,"column":17,"nodeType":"1331","endLine":32,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":32,"column":54,"nodeType":"1331","endLine":35,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":35,"column":59,"nodeType":"1331","endLine":38,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":38,"column":69,"nodeType":"1331","endLine":41,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":41,"column":61,"nodeType":"1331","endLine":44,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":44,"column":62,"nodeType":"1331","endLine":47,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":47,"column":60,"nodeType":"1331","endLine":50,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":50,"column":60,"nodeType":"1331","endLine":53,"endColumn":11},{"ruleId":"1332","severity":1,"message":"1333","line":43,"column":12,"nodeType":"1334","messageId":"1335","endLine":43,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1337","line":3,"column":16,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1338","line":11,"column":12,"nodeType":"1334","messageId":"1335","endLine":11,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1339","line":14,"column":12,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1340","line":14,"column":19,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":27},{"ruleId":"1332","severity":1,"message":"1341","line":15,"column":12,"nodeType":"1334","messageId":"1335","endLine":15,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1338","line":25,"column":11,"nodeType":"1334","messageId":"1335","endLine":25,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1342","line":26,"column":10,"nodeType":"1334","messageId":"1335","endLine":26,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1341","line":40,"column":11,"nodeType":"1334","messageId":"1335","endLine":40,"endColumn":22},{"ruleId":"1343","severity":1,"message":"1344","line":44,"column":41,"nodeType":"1331","messageId":"1345","endLine":44,"endColumn":42,"suggestions":"1346"},{"ruleId":"1343","severity":1,"message":"1347","line":44,"column":58,"nodeType":"1331","messageId":"1345","endLine":44,"endColumn":59,"suggestions":"1348"},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":36,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":38},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":71,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":73},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":106,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":108},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":142,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":144},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":183,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":185},{"ruleId":"1353","severity":1,"message":"1354","line":44,"column":9,"nodeType":"1355","endLine":44,"endColumn":11,"suggestions":"1356"},{"ruleId":"1332","severity":1,"message":"1357","line":3,"column":8,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1358","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":22},{"ruleId":"1353","severity":1,"message":"1354","line":45,"column":9,"nodeType":"1355","endLine":45,"endColumn":11,"suggestions":"1359"},{"ruleId":"1353","severity":1,"message":"1354","line":39,"column":9,"nodeType":"1355","endLine":39,"endColumn":11,"suggestions":"1360"},{"ruleId":"1329","severity":1,"message":"1330","line":44,"column":17,"nodeType":"1331","endLine":46,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":46,"column":93,"nodeType":"1331","endLine":49,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":49,"column":105,"nodeType":"1331","endLine":52,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":58,"column":106,"nodeType":"1331","endLine":61,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":61,"column":109,"nodeType":"1331","endLine":64,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":64,"column":103,"nodeType":"1331","endLine":67,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":67,"column":94,"nodeType":"1331","endLine":70,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":70,"column":75,"nodeType":"1331","endLine":73,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":73,"column":114,"nodeType":"1331","endLine":76,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":76,"column":98,"nodeType":"1331","endLine":79,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1361","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1354","line":40,"column":9,"nodeType":"1355","endLine":40,"endColumn":11,"suggestions":"1362"},{"ruleId":"1329","severity":1,"message":"1330","line":45,"column":17,"nodeType":"1331","endLine":47,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":47,"column":98,"nodeType":"1331","endLine":50,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":50,"column":110,"nodeType":"1331","endLine":53,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":53,"column":120,"nodeType":"1331","endLine":56,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":56,"column":118,"nodeType":"1331","endLine":59,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":59,"column":129,"nodeType":"1331","endLine":62,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":62,"column":120,"nodeType":"1331","endLine":65,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":65,"column":109,"nodeType":"1331","endLine":68,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":68,"column":94,"nodeType":"1331","endLine":71,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":71,"column":74,"nodeType":"1331","endLine":74,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":74,"column":118,"nodeType":"1331","endLine":78,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1353","severity":1,"message":"1354","line":42,"column":7,"nodeType":"1355","endLine":42,"endColumn":9,"suggestions":"1364"},{"ruleId":"1332","severity":1,"message":"1365","line":43,"column":10,"nodeType":"1334","messageId":"1335","endLine":43,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1366","line":45,"column":13,"nodeType":"1334","messageId":"1335","endLine":45,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1367","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":15},{"ruleId":"1353","severity":1,"message":"1354","line":45,"column":7,"nodeType":"1355","endLine":45,"endColumn":9,"suggestions":"1368"},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1370","line":24,"column":12,"nodeType":"1334","messageId":"1335","endLine":24,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1371","line":24,"column":20,"nodeType":"1334","messageId":"1335","endLine":24,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1372","line":13,"column":7,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":13},{"ruleId":"1353","severity":1,"message":"1354","line":62,"column":7,"nodeType":"1355","endLine":62,"endColumn":9,"suggestions":"1373"},{"ruleId":"1332","severity":1,"message":"1374","line":75,"column":9,"nodeType":"1334","messageId":"1335","endLine":75,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":35,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":39},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":41,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1377","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1378","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":53},{"ruleId":"1332","severity":1,"message":"1379","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1379","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1378","line":4,"column":40,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":53},{"ruleId":"1353","severity":1,"message":"1354","line":43,"column":9,"nodeType":"1355","endLine":43,"endColumn":11,"suggestions":"1380"},{"ruleId":"1353","severity":1,"message":"1354","line":25,"column":7,"nodeType":"1355","endLine":25,"endColumn":9,"suggestions":"1381"},{"ruleId":"1332","severity":1,"message":"1382","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1341","line":15,"column":12,"nodeType":"1334","messageId":"1335","endLine":15,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1384","line":17,"column":19,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":27},{"ruleId":"1353","severity":1,"message":"1354","line":31,"column":9,"nodeType":"1355","endLine":31,"endColumn":11,"suggestions":"1385"},{"ruleId":"1332","severity":1,"message":"1386","line":1,"column":17,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1387","line":2,"column":34,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1388","line":29,"column":10,"nodeType":"1334","messageId":"1335","endLine":29,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1389","line":29,"column":17,"nodeType":"1334","messageId":"1335","endLine":29,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1390","line":32,"column":10,"nodeType":"1334","messageId":"1335","endLine":32,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1391","line":35,"column":10,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1392","line":35,"column":16,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":23},{"ruleId":"1353","severity":1,"message":"1354","line":66,"column":5,"nodeType":"1355","endLine":66,"endColumn":7,"suggestions":"1393"},{"ruleId":"1353","severity":1,"message":"1394","line":53,"column":9,"nodeType":"1355","endLine":53,"endColumn":11,"suggestions":"1395"},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":10,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":2,"column":16,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1382","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1397","line":33,"column":7,"nodeType":"1355","endLine":33,"endColumn":9,"suggestions":"1398"},{"ruleId":"1399","severity":1,"message":"1400","line":53,"column":16,"nodeType":"1401","endLine":53,"endColumn":56},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1354","line":53,"column":9,"nodeType":"1355","endLine":53,"endColumn":11,"suggestions":"1402"},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1403","line":26,"column":7,"nodeType":"1355","endLine":26,"endColumn":9,"suggestions":"1404"},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1376","line":5,"column":30,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1403","line":24,"column":7,"nodeType":"1355","endLine":24,"endColumn":9,"suggestions":"1406"},{"ruleId":"1353","severity":1,"message":"1403","line":25,"column":7,"nodeType":"1355","endLine":25,"endColumn":9,"suggestions":"1407"},{"ruleId":"1332","severity":1,"message":"1408","line":27,"column":11,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1409","line":10,"column":5,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1409","line":9,"column":5,"nodeType":"1334","messageId":"1335","endLine":9,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1409","line":10,"column":5,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":10},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1410"},{"ruleId":"1399","severity":1,"message":"1411","line":44,"column":37,"nodeType":"1401","endLine":44,"endColumn":132},{"ruleId":"1399","severity":1,"message":"1411","line":55,"column":33,"nodeType":"1401","endLine":55,"endColumn":122},{"ruleId":"1399","severity":1,"message":"1411","line":72,"column":37,"nodeType":"1401","endLine":72,"endColumn":135},{"ruleId":"1399","severity":1,"message":"1411","line":84,"column":33,"nodeType":"1401","endLine":84,"endColumn":123},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":146,"column":41,"nodeType":"1415","endLine":146,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":185,"column":45,"nodeType":"1401","endLine":185,"endColumn":122},{"ruleId":"1353","severity":1,"message":"1418","line":37,"column":7,"nodeType":"1355","endLine":37,"endColumn":9,"suggestions":"1419"},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1420","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1336","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1421","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1422","line":22,"column":11,"nodeType":"1334","messageId":"1335","endLine":22,"endColumn":26},{"ruleId":"1353","severity":1,"message":"1397","line":48,"column":7,"nodeType":"1355","endLine":48,"endColumn":9,"suggestions":"1423"},{"ruleId":"1424","severity":1,"message":"1425","line":87,"column":17,"nodeType":"1334","messageId":"1426","endLine":87,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1354","line":35,"column":9,"nodeType":"1355","endLine":35,"endColumn":11,"suggestions":"1427"},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":181,"column":41,"nodeType":"1415","endLine":181,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":220,"column":45,"nodeType":"1401","endLine":220,"endColumn":122},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":146,"column":41,"nodeType":"1415","endLine":146,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":185,"column":45,"nodeType":"1401","endLine":185,"endColumn":122},{"ruleId":"1332","severity":1,"message":"1376","line":4,"column":30,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1377","line":7,"column":9,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1383","line":7,"column":15,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1379","line":8,"column":10,"nodeType":"1334","messageId":"1335","endLine":8,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1336","line":10,"column":10,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1428","line":10,"column":27,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":37},{"ruleId":"1353","severity":1,"message":"1397","line":44,"column":7,"nodeType":"1355","endLine":44,"endColumn":9,"suggestions":"1429"},{"ruleId":"1332","severity":1,"message":"1430","line":53,"column":9,"nodeType":"1334","messageId":"1335","endLine":53,"endColumn":12},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1420","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1336","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1431","line":9,"column":10,"nodeType":"1334","messageId":"1335","endLine":9,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1421","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1422","line":22,"column":11,"nodeType":"1334","messageId":"1335","endLine":22,"endColumn":26},{"ruleId":"1353","severity":1,"message":"1432","line":43,"column":7,"nodeType":"1355","endLine":43,"endColumn":9,"suggestions":"1433"},{"ruleId":"1424","severity":1,"message":"1434","line":57,"column":17,"nodeType":"1334","messageId":"1426","endLine":57,"endColumn":18},{"ruleId":"1424","severity":1,"message":"1425","line":83,"column":17,"nodeType":"1334","messageId":"1426","endLine":83,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1435"},{"ruleId":"1399","severity":1,"message":"1411","line":44,"column":37,"nodeType":"1401","endLine":44,"endColumn":133},{"ruleId":"1399","severity":1,"message":"1411","line":55,"column":33,"nodeType":"1401","endLine":55,"endColumn":126},{"ruleId":"1399","severity":1,"message":"1411","line":67,"column":33,"nodeType":"1401","endLine":67,"endColumn":124},{"ruleId":"1399","severity":1,"message":"1411","line":83,"column":37,"nodeType":"1401","endLine":83,"endColumn":136},{"ruleId":"1399","severity":1,"message":"1411","line":94,"column":33,"nodeType":"1401","endLine":94,"endColumn":127},{"ruleId":"1353","severity":1,"message":"1436","line":52,"column":9,"nodeType":"1355","endLine":52,"endColumn":11,"suggestions":"1437"},{"ruleId":"1332","severity":1,"message":"1382","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1341","line":16,"column":13,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1438","line":18,"column":12,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1439","line":18,"column":21,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":31},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1440"},{"ruleId":"1399","severity":1,"message":"1411","line":45,"column":41,"nodeType":"1401","endLine":45,"endColumn":131},{"ruleId":"1399","severity":1,"message":"1411","line":57,"column":41,"nodeType":"1401","endLine":57,"endColumn":130},{"ruleId":"1399","severity":1,"message":"1411","line":69,"column":41,"nodeType":"1401","endLine":69,"endColumn":139},{"ruleId":"1353","severity":1,"message":"1441","line":54,"column":9,"nodeType":"1355","endLine":54,"endColumn":11,"suggestions":"1442"},{"ruleId":"1443","severity":1,"message":"1444","line":15,"column":4,"nodeType":"1445","messageId":"1446","endLine":15,"endColumn":36},{"ruleId":"1353","severity":1,"message":"1447","line":105,"column":7,"nodeType":"1355","endLine":105,"endColumn":9,"suggestions":"1448"},{"ruleId":"1332","severity":1,"message":"1449","line":144,"column":10,"nodeType":"1334","messageId":"1335","endLine":144,"endColumn":26},{"ruleId":"1450","severity":1,"message":"1451","line":197,"column":39,"nodeType":"1452","messageId":"1453","endLine":197,"endColumn":82},{"ruleId":"1349","severity":1,"message":"1350","line":216,"column":47,"nodeType":"1351","messageId":"1352","endLine":216,"endColumn":49},{"ruleId":"1450","severity":1,"message":"1451","line":285,"column":45,"nodeType":"1452","messageId":"1453","endLine":285,"endColumn":88},{"ruleId":"1332","severity":1,"message":"1454","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1377","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1336","line":5,"column":21,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":25},{"ruleId":"1353","severity":1,"message":"1354","line":25,"column":9,"nodeType":"1355","endLine":25,"endColumn":11,"suggestions":"1455"},{"ruleId":"1413","severity":1,"message":"1414","line":42,"column":37,"nodeType":"1415","endLine":42,"endColumn":61},{"ruleId":"1399","severity":1,"message":"1411","line":46,"column":41,"nodeType":"1401","endLine":46,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":37,"nodeType":"1415","endLine":53,"endColumn":61},{"ruleId":"1399","severity":1,"message":"1411","line":57,"column":41,"nodeType":"1401","endLine":57,"endColumn":131},{"ruleId":"1413","severity":1,"message":"1414","line":64,"column":41,"nodeType":"1415","endLine":64,"endColumn":65},{"ruleId":"1399","severity":1,"message":"1411","line":68,"column":45,"nodeType":"1401","endLine":68,"endColumn":143},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1456","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1457","line":17,"column":11,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1458","line":17,"column":17,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1338","line":28,"column":11,"nodeType":"1334","messageId":"1335","endLine":28,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1338","line":27,"column":11,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1341","line":32,"column":12,"nodeType":"1334","messageId":"1335","endLine":32,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1459","line":33,"column":12,"nodeType":"1334","messageId":"1335","endLine":33,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1460","line":34,"column":11,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1340","line":34,"column":18,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1342","line":44,"column":8,"nodeType":"1334","messageId":"1335","endLine":44,"endColumn":15},{"ruleId":"1353","severity":1,"message":"1461","line":77,"column":7,"nodeType":"1355","endLine":77,"endColumn":9,"suggestions":"1462"},{"ruleId":"1332","severity":1,"message":"1463","line":80,"column":10,"nodeType":"1334","messageId":"1335","endLine":80,"endColumn":12},{"ruleId":"1332","severity":1,"message":"1383","line":2,"column":15,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1342","line":13,"column":11,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1461","line":46,"column":9,"nodeType":"1355","endLine":46,"endColumn":11,"suggestions":"1464"},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":3,"column":16,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1339","line":13,"column":11,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1467","line":14,"column":11,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1468","line":14,"column":28,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1338","line":17,"column":11,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1469","line":17,"column":20,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1470","line":18,"column":11,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1471","line":18,"column":26,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":42},{"ruleId":"1332","severity":1,"message":"1342","line":19,"column":8,"nodeType":"1334","messageId":"1335","endLine":19,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1472","line":28,"column":16,"nodeType":"1334","messageId":"1335","endLine":28,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1473","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1338","line":16,"column":11,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1469","line":16,"column":20,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1474","line":18,"column":11,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1475","line":18,"column":18,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1342","line":19,"column":8,"nodeType":"1334","messageId":"1335","endLine":19,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":9,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1466","line":2,"column":29,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":38},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":40,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":45},{"ruleId":"1332","severity":1,"message":"1387","line":2,"column":47,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1476","line":2,"column":52,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":55},{"ruleId":"1332","severity":1,"message":"1477","line":4,"column":8,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1465","line":2,"column":24,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":2,"column":37,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":46},{"ruleId":"1353","severity":1,"message":"1478","line":49,"column":9,"nodeType":"1355","endLine":49,"endColumn":11,"suggestions":"1479"},{"ruleId":"1416","severity":1,"message":"1417","line":132,"column":13,"nodeType":"1401","endLine":137,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":10,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":2,"column":16,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1480","line":4,"column":15,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1481","line":5,"column":13,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1482","line":33,"column":9,"nodeType":"1355","endLine":33,"endColumn":11,"suggestions":"1483"},{"ruleId":"1332","severity":1,"message":"1484","line":35,"column":12,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1485","line":36,"column":12,"nodeType":"1334","messageId":"1335","endLine":36,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1480","line":4,"column":15,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1481","line":5,"column":13,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1486","line":31,"column":9,"nodeType":"1355","endLine":31,"endColumn":11,"suggestions":"1487"},{"ruleId":"1325","replacedBy":"1488"},{"ruleId":"1327","replacedBy":"1489"},{"ruleId":"1325","replacedBy":"1490"},{"ruleId":"1327","replacedBy":"1491"},{"ruleId":"1329","severity":1,"message":"1330","line":30,"column":17,"nodeType":"1331","endLine":32,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":32,"column":54,"nodeType":"1331","endLine":35,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":35,"column":59,"nodeType":"1331","endLine":38,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":38,"column":69,"nodeType":"1331","endLine":41,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":41,"column":61,"nodeType":"1331","endLine":44,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":44,"column":62,"nodeType":"1331","endLine":47,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":47,"column":60,"nodeType":"1331","endLine":50,"endColumn":11},{"ruleId":"1329","severity":1,"message":"1330","line":50,"column":60,"nodeType":"1331","endLine":53,"endColumn":11},{"ruleId":"1332","severity":1,"message":"1336","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1337","line":3,"column":16,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1338","line":11,"column":12,"nodeType":"1334","messageId":"1335","endLine":11,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1339","line":14,"column":12,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1340","line":14,"column":19,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":27},{"ruleId":"1332","severity":1,"message":"1341","line":15,"column":12,"nodeType":"1334","messageId":"1335","endLine":15,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1333","line":43,"column":12,"nodeType":"1334","messageId":"1335","endLine":43,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1338","line":25,"column":11,"nodeType":"1334","messageId":"1335","endLine":25,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1342","line":26,"column":10,"nodeType":"1334","messageId":"1335","endLine":26,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1341","line":40,"column":11,"nodeType":"1334","messageId":"1335","endLine":40,"endColumn":22},{"ruleId":"1343","severity":1,"message":"1344","line":44,"column":41,"nodeType":"1331","messageId":"1345","endLine":44,"endColumn":42,"suggestions":"1492"},{"ruleId":"1343","severity":1,"message":"1347","line":44,"column":58,"nodeType":"1331","messageId":"1345","endLine":44,"endColumn":59,"suggestions":"1493"},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":36,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":38},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":71,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":73},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":106,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":108},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":142,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":144},{"ruleId":"1349","severity":1,"message":"1350","line":90,"column":183,"nodeType":"1351","messageId":"1352","endLine":90,"endColumn":185},{"ruleId":"1353","severity":1,"message":"1354","line":39,"column":9,"nodeType":"1355","endLine":39,"endColumn":11,"suggestions":"1494"},{"ruleId":"1329","severity":1,"message":"1330","line":44,"column":17,"nodeType":"1331","endLine":46,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":46,"column":93,"nodeType":"1331","endLine":49,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":49,"column":105,"nodeType":"1331","endLine":52,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":58,"column":106,"nodeType":"1331","endLine":61,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":61,"column":109,"nodeType":"1331","endLine":64,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":64,"column":103,"nodeType":"1331","endLine":67,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":67,"column":94,"nodeType":"1331","endLine":70,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":70,"column":75,"nodeType":"1331","endLine":73,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":73,"column":114,"nodeType":"1331","endLine":76,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":76,"column":98,"nodeType":"1331","endLine":79,"endColumn":13},{"ruleId":"1353","severity":1,"message":"1354","line":44,"column":9,"nodeType":"1355","endLine":44,"endColumn":11,"suggestions":"1495"},{"ruleId":"1332","severity":1,"message":"1357","line":3,"column":8,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1358","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":22},{"ruleId":"1353","severity":1,"message":"1354","line":45,"column":9,"nodeType":"1355","endLine":45,"endColumn":11,"suggestions":"1496"},{"ruleId":"1353","severity":1,"message":"1354","line":40,"column":9,"nodeType":"1355","endLine":40,"endColumn":11,"suggestions":"1497"},{"ruleId":"1329","severity":1,"message":"1330","line":45,"column":17,"nodeType":"1331","endLine":47,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":47,"column":98,"nodeType":"1331","endLine":50,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":50,"column":110,"nodeType":"1331","endLine":53,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":53,"column":120,"nodeType":"1331","endLine":56,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":56,"column":118,"nodeType":"1331","endLine":59,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":59,"column":129,"nodeType":"1331","endLine":62,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":62,"column":120,"nodeType":"1331","endLine":65,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":65,"column":109,"nodeType":"1331","endLine":68,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":68,"column":94,"nodeType":"1331","endLine":71,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":71,"column":74,"nodeType":"1331","endLine":74,"endColumn":13},{"ruleId":"1329","severity":1,"message":"1330","line":74,"column":118,"nodeType":"1331","endLine":78,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1363","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":13},{"ruleId":"1353","severity":1,"message":"1354","line":42,"column":7,"nodeType":"1355","endLine":42,"endColumn":9,"suggestions":"1498"},{"ruleId":"1332","severity":1,"message":"1365","line":43,"column":10,"nodeType":"1334","messageId":"1335","endLine":43,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1366","line":45,"column":13,"nodeType":"1334","messageId":"1335","endLine":45,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1361","line":1,"column":8,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1409","line":10,"column":5,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1409","line":10,"column":5,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":146,"column":41,"nodeType":"1415","endLine":146,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":185,"column":45,"nodeType":"1401","endLine":185,"endColumn":122},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":146,"column":41,"nodeType":"1415","endLine":146,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":185,"column":45,"nodeType":"1401","endLine":185,"endColumn":122},{"ruleId":"1332","severity":1,"message":"1412","line":12,"column":7,"nodeType":"1334","messageId":"1335","endLine":12,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1414","line":181,"column":41,"nodeType":"1415","endLine":181,"endColumn":49},{"ruleId":"1416","severity":1,"message":"1417","line":220,"column":45,"nodeType":"1401","endLine":220,"endColumn":122},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1499"},{"ruleId":"1399","severity":1,"message":"1411","line":45,"column":41,"nodeType":"1401","endLine":45,"endColumn":131},{"ruleId":"1399","severity":1,"message":"1411","line":57,"column":41,"nodeType":"1401","endLine":57,"endColumn":130},{"ruleId":"1399","severity":1,"message":"1411","line":69,"column":41,"nodeType":"1401","endLine":69,"endColumn":139},{"ruleId":"1353","severity":1,"message":"1436","line":52,"column":9,"nodeType":"1355","endLine":52,"endColumn":11,"suggestions":"1500"},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1382","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1341","line":16,"column":13,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1438","line":18,"column":12,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1439","line":18,"column":21,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":31},{"ruleId":"1332","severity":1,"message":"1367","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":15},{"ruleId":"1353","severity":1,"message":"1354","line":45,"column":7,"nodeType":"1355","endLine":45,"endColumn":9,"suggestions":"1501"},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1443","severity":1,"message":"1444","line":15,"column":4,"nodeType":"1445","messageId":"1446","endLine":15,"endColumn":36},{"ruleId":"1353","severity":1,"message":"1447","line":105,"column":7,"nodeType":"1355","endLine":105,"endColumn":9,"suggestions":"1502"},{"ruleId":"1332","severity":1,"message":"1449","line":144,"column":10,"nodeType":"1334","messageId":"1335","endLine":144,"endColumn":26},{"ruleId":"1450","severity":1,"message":"1451","line":197,"column":39,"nodeType":"1452","messageId":"1453","endLine":197,"endColumn":82},{"ruleId":"1349","severity":1,"message":"1350","line":216,"column":47,"nodeType":"1351","messageId":"1352","endLine":216,"endColumn":49},{"ruleId":"1450","severity":1,"message":"1451","line":285,"column":45,"nodeType":"1452","messageId":"1453","endLine":285,"endColumn":88},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1503"},{"ruleId":"1399","severity":1,"message":"1411","line":44,"column":37,"nodeType":"1401","endLine":44,"endColumn":132},{"ruleId":"1399","severity":1,"message":"1411","line":55,"column":33,"nodeType":"1401","endLine":55,"endColumn":122},{"ruleId":"1399","severity":1,"message":"1411","line":72,"column":37,"nodeType":"1401","endLine":72,"endColumn":135},{"ruleId":"1399","severity":1,"message":"1411","line":84,"column":33,"nodeType":"1401","endLine":84,"endColumn":123},{"ruleId":"1353","severity":1,"message":"1441","line":54,"column":9,"nodeType":"1355","endLine":54,"endColumn":11,"suggestions":"1504"},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1420","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1336","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1421","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1422","line":22,"column":11,"nodeType":"1334","messageId":"1335","endLine":22,"endColumn":26},{"ruleId":"1353","severity":1,"message":"1397","line":48,"column":7,"nodeType":"1355","endLine":48,"endColumn":9,"suggestions":"1505"},{"ruleId":"1424","severity":1,"message":"1425","line":87,"column":17,"nodeType":"1334","messageId":"1426","endLine":87,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":10,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":2,"column":16,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1382","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1397","line":33,"column":7,"nodeType":"1355","endLine":33,"endColumn":9,"suggestions":"1506"},{"ruleId":"1332","severity":1,"message":"1376","line":4,"column":30,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1377","line":7,"column":9,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1383","line":7,"column":15,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1379","line":8,"column":10,"nodeType":"1334","messageId":"1335","endLine":8,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1336","line":10,"column":10,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1428","line":10,"column":27,"nodeType":"1334","messageId":"1335","endLine":10,"endColumn":37},{"ruleId":"1353","severity":1,"message":"1397","line":44,"column":7,"nodeType":"1355","endLine":44,"endColumn":9,"suggestions":"1507"},{"ruleId":"1332","severity":1,"message":"1430","line":53,"column":9,"nodeType":"1334","messageId":"1335","endLine":53,"endColumn":12},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1403","line":26,"column":7,"nodeType":"1355","endLine":26,"endColumn":9,"suggestions":"1508"},{"ruleId":"1353","severity":1,"message":"1403","line":25,"column":7,"nodeType":"1355","endLine":25,"endColumn":9,"suggestions":"1509"},{"ruleId":"1332","severity":1,"message":"1408","line":27,"column":11,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1376","line":5,"column":30,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1403","line":24,"column":7,"nodeType":"1355","endLine":24,"endColumn":9,"suggestions":"1510"},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1353","severity":1,"message":"1354","line":53,"column":9,"nodeType":"1355","endLine":53,"endColumn":11,"suggestions":"1511"},{"ruleId":"1332","severity":1,"message":"1409","line":9,"column":5,"nodeType":"1334","messageId":"1335","endLine":9,"endColumn":10},{"ruleId":"1399","severity":1,"message":"1400","line":53,"column":16,"nodeType":"1401","endLine":53,"endColumn":56},{"ruleId":"1332","severity":1,"message":"1382","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1341","line":15,"column":12,"nodeType":"1334","messageId":"1335","endLine":15,"endColumn":23},{"ruleId":"1353","severity":1,"message":"1394","line":53,"column":9,"nodeType":"1355","endLine":53,"endColumn":11,"suggestions":"1512"},{"ruleId":"1332","severity":1,"message":"1384","line":17,"column":19,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":27},{"ruleId":"1353","severity":1,"message":"1354","line":31,"column":9,"nodeType":"1355","endLine":31,"endColumn":11,"suggestions":"1513"},{"ruleId":"1332","severity":1,"message":"1386","line":1,"column":17,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1387","line":2,"column":34,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1388","line":29,"column":10,"nodeType":"1334","messageId":"1335","endLine":29,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1389","line":29,"column":17,"nodeType":"1334","messageId":"1335","endLine":29,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1390","line":32,"column":10,"nodeType":"1334","messageId":"1335","endLine":32,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1391","line":35,"column":10,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1392","line":35,"column":16,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":23},{"ruleId":"1353","severity":1,"message":"1354","line":66,"column":5,"nodeType":"1355","endLine":66,"endColumn":7,"suggestions":"1514"},{"ruleId":"1353","severity":1,"message":"1354","line":25,"column":7,"nodeType":"1355","endLine":25,"endColumn":9,"suggestions":"1515"},{"ruleId":"1353","severity":1,"message":"1354","line":24,"column":9,"nodeType":"1355","endLine":24,"endColumn":11,"suggestions":"1516"},{"ruleId":"1399","severity":1,"message":"1411","line":44,"column":37,"nodeType":"1401","endLine":44,"endColumn":133},{"ruleId":"1399","severity":1,"message":"1411","line":55,"column":33,"nodeType":"1401","endLine":55,"endColumn":126},{"ruleId":"1399","severity":1,"message":"1411","line":67,"column":33,"nodeType":"1401","endLine":67,"endColumn":124},{"ruleId":"1399","severity":1,"message":"1411","line":83,"column":37,"nodeType":"1401","endLine":83,"endColumn":136},{"ruleId":"1399","severity":1,"message":"1411","line":94,"column":33,"nodeType":"1401","endLine":94,"endColumn":127},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1379","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1378","line":4,"column":40,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":53},{"ruleId":"1353","severity":1,"message":"1354","line":43,"column":9,"nodeType":"1355","endLine":43,"endColumn":11,"suggestions":"1517"},{"ruleId":"1332","severity":1,"message":"1372","line":13,"column":7,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":13},{"ruleId":"1353","severity":1,"message":"1354","line":62,"column":7,"nodeType":"1355","endLine":62,"endColumn":9,"suggestions":"1518"},{"ruleId":"1332","severity":1,"message":"1374","line":75,"column":9,"nodeType":"1334","messageId":"1335","endLine":75,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1383","line":3,"column":15,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1379","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1420","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1336","line":7,"column":10,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1431","line":9,"column":10,"nodeType":"1334","messageId":"1335","endLine":9,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1421","line":21,"column":11,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1422","line":22,"column":11,"nodeType":"1334","messageId":"1335","endLine":22,"endColumn":26},{"ruleId":"1353","severity":1,"message":"1432","line":43,"column":7,"nodeType":"1355","endLine":43,"endColumn":9,"suggestions":"1519"},{"ruleId":"1424","severity":1,"message":"1434","line":57,"column":17,"nodeType":"1334","messageId":"1426","endLine":57,"endColumn":18},{"ruleId":"1424","severity":1,"message":"1425","line":83,"column":17,"nodeType":"1334","messageId":"1426","endLine":83,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":35,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":39},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":41,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1377","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1378","line":3,"column":40,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":53},{"ruleId":"1332","severity":1,"message":"1379","line":6,"column":10,"nodeType":"1334","messageId":"1335","endLine":6,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1370","line":24,"column":12,"nodeType":"1334","messageId":"1335","endLine":24,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1371","line":24,"column":20,"nodeType":"1334","messageId":"1335","endLine":24,"endColumn":29},{"ruleId":"1353","severity":1,"message":"1418","line":37,"column":7,"nodeType":"1355","endLine":37,"endColumn":9,"suggestions":"1520"},{"ruleId":"1353","severity":1,"message":"1354","line":35,"column":9,"nodeType":"1355","endLine":35,"endColumn":11,"suggestions":"1521"},{"ruleId":"1332","severity":1,"message":"1454","line":2,"column":8,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1377","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1336","line":5,"column":21,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":25},{"ruleId":"1353","severity":1,"message":"1354","line":25,"column":9,"nodeType":"1355","endLine":25,"endColumn":11,"suggestions":"1522"},{"ruleId":"1413","severity":1,"message":"1414","line":42,"column":37,"nodeType":"1415","endLine":42,"endColumn":61},{"ruleId":"1399","severity":1,"message":"1411","line":46,"column":41,"nodeType":"1401","endLine":46,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":37,"nodeType":"1415","endLine":53,"endColumn":61},{"ruleId":"1399","severity":1,"message":"1411","line":57,"column":41,"nodeType":"1401","endLine":57,"endColumn":131},{"ruleId":"1413","severity":1,"message":"1414","line":64,"column":41,"nodeType":"1415","endLine":64,"endColumn":65},{"ruleId":"1399","severity":1,"message":"1411","line":68,"column":45,"nodeType":"1401","endLine":68,"endColumn":143},{"ruleId":"1332","severity":1,"message":"1369","line":1,"column":15,"nodeType":"1334","messageId":"1335","endLine":1,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1383","line":2,"column":15,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":25},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1342","line":13,"column":11,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1461","line":46,"column":9,"nodeType":"1355","endLine":46,"endColumn":11,"suggestions":"1523"},{"ruleId":"1332","severity":1,"message":"1338","line":27,"column":11,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1341","line":32,"column":12,"nodeType":"1334","messageId":"1335","endLine":32,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1459","line":33,"column":12,"nodeType":"1334","messageId":"1335","endLine":33,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1460","line":34,"column":11,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1340","line":34,"column":18,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1342","line":44,"column":8,"nodeType":"1334","messageId":"1335","endLine":44,"endColumn":15},{"ruleId":"1353","severity":1,"message":"1461","line":77,"column":7,"nodeType":"1355","endLine":77,"endColumn":9,"suggestions":"1524"},{"ruleId":"1332","severity":1,"message":"1463","line":80,"column":10,"nodeType":"1334","messageId":"1335","endLine":80,"endColumn":12},{"ruleId":"1332","severity":1,"message":"1405","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1456","line":5,"column":8,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1457","line":17,"column":11,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1458","line":17,"column":17,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1338","line":28,"column":11,"nodeType":"1334","messageId":"1335","endLine":28,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":3,"column":16,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1339","line":13,"column":11,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1467","line":14,"column":11,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1468","line":14,"column":28,"nodeType":"1334","messageId":"1335","endLine":14,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1338","line":17,"column":11,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1469","line":17,"column":20,"nodeType":"1334","messageId":"1335","endLine":17,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1470","line":18,"column":11,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1471","line":18,"column":26,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":42},{"ruleId":"1332","severity":1,"message":"1342","line":19,"column":8,"nodeType":"1334","messageId":"1335","endLine":19,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1472","line":28,"column":16,"nodeType":"1334","messageId":"1335","endLine":28,"endColumn":21},{"ruleId":"1332","severity":1,"message":"1473","line":3,"column":9,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1338","line":16,"column":11,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1469","line":16,"column":20,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1474","line":18,"column":11,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":16},{"ruleId":"1332","severity":1,"message":"1475","line":18,"column":18,"nodeType":"1334","messageId":"1335","endLine":18,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1342","line":19,"column":8,"nodeType":"1334","messageId":"1335","endLine":19,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":10,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1396","line":2,"column":16,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1375","line":2,"column":9,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":13},{"ruleId":"1332","severity":1,"message":"1466","line":2,"column":29,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":38},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":40,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":45},{"ruleId":"1332","severity":1,"message":"1387","line":2,"column":47,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":50},{"ruleId":"1332","severity":1,"message":"1476","line":2,"column":52,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":55},{"ruleId":"1332","severity":1,"message":"1477","line":4,"column":8,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1465","line":2,"column":24,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":2,"column":30,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":2,"column":37,"nodeType":"1334","messageId":"1335","endLine":2,"endColumn":46},{"ruleId":"1353","severity":1,"message":"1478","line":49,"column":9,"nodeType":"1355","endLine":49,"endColumn":11,"suggestions":"1525"},{"ruleId":"1416","severity":1,"message":"1417","line":132,"column":13,"nodeType":"1401","endLine":137,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1480","line":4,"column":15,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1481","line":5,"column":13,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1486","line":31,"column":9,"nodeType":"1355","endLine":31,"endColumn":11,"suggestions":"1526"},{"ruleId":"1332","severity":1,"message":"1375","line":3,"column":10,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":14},{"ruleId":"1332","severity":1,"message":"1465","line":3,"column":24,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1376","line":3,"column":30,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1466","line":3,"column":37,"nodeType":"1334","messageId":"1335","endLine":3,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1480","line":4,"column":15,"nodeType":"1334","messageId":"1335","endLine":4,"endColumn":28},{"ruleId":"1332","severity":1,"message":"1481","line":5,"column":13,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1482","line":33,"column":9,"nodeType":"1355","endLine":33,"endColumn":11,"suggestions":"1527"},{"ruleId":"1332","severity":1,"message":"1484","line":35,"column":12,"nodeType":"1334","messageId":"1335","endLine":35,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1485","line":36,"column":12,"nodeType":"1334","messageId":"1335","endLine":36,"endColumn":13},"no-native-reassign",["1528"],"no-negated-in-lhs",["1529"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'deleteAccount' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'firestore' is defined but never used.","'loading' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'history' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["1530","1531"],"Unnecessary escape character: \\/.",["1532","1533"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["1534"],"'PrivateRoute' is defined but never used.","'AuthProvider' is defined but never used.",["1535"],["1536"],"'Reeact' is defined but never used.",["1537"],"'React' is defined but never used.",["1538"],"'user' is assigned a value but never used.","'deleteUser' is defined but never used.","'Role' is assigned a value but never used.",["1539"],"'useState' is defined but never used.","'medRec' is assigned a value but never used.","'setMedRec' is assigned a value but never used.","'Moment' is assigned a value but never used.",["1540"],"'sortedPast' is assigned a value but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useAuth' is defined but never used.",["1541"],["1542"],"'moment' is defined but never used.","'withRouter' is defined but never used.","'setError' is assigned a value but never used.",["1543"],"'Component' is defined but never used.","'Row' is defined but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'doctors' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["1544"],"React Hook React.useEffect has missing dependencies: 'Appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["1545"],"'Button' is defined but never used.","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'appointment.id'. Either include them or remove the dependency array.",["1546"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["1547"],"React Hook React.useEffect has a missing dependency: 'document.DocEmail'. Either include it or remove the dependency array.",["1548"],"'useHistory' is defined but never used.",["1549"],["1550"],"'doctor' is assigned a value but never used.","'cross' is assigned a value but never used.",["1551"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BlockEmbed' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook React.useEffect has a missing dependency: 'md.PatientEmail'. Either include it or remove the dependency array.",["1552"],"'MC' is defined but never used.","'ConsultFee' is assigned a value but never used.","'PrescriptionFee' is assigned a value but never used.",["1553"],"no-redeclare","'i' is already defined.","redeclared",["1554"],"'storageRef' is defined but never used.",["1555"],"'img' is assigned a value but never used.","'confirmAlert' is defined but never used.","React Hook React.useEffect has a missing dependency: 'appointment.id'. Either include it or remove the dependency array.",["1556"],"'j' is already defined.",["1557"],"React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["1558"],"'patient' is assigned a value but never used.","'setPatient' is assigned a value but never used.",["1559"],"React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'appointment.PatientEmail'. Either include them or remove the dependency array.",["1560"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["1561"],"'handleDeptChange' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a'.","ArrowFunctionExpression","unsafeRefs","'NavBar' is defined but never used.",["1562"],"'PasswordStrengthIndicator' is defined but never used.","'NRIC' is assigned a value but never used.","'setNRIC' is assigned a value but never used.","'updateEmail' is assigned a value but never used.","'Users' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user.Email'. Either include it or remove the dependency array.",["1563"],"'ma' is assigned a value but never used.",["1564"],"'Card' is defined but never used.","'Container' is defined but never used.","'medicalDocUsers' is assigned a value but never used.","'setMedicalDocUsers' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'setFilteredUsers' is assigned a value but never used.","'dataa' is assigned a value but never used.","'UserInput' is defined but never used.","'radio' is assigned a value but never used.","'setRadio' is assigned a value but never used.","'Col' is defined but never used.","'TextTruncate' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.email' and 'props.email'. Either include them or remove the dependency array.",["1565"],"'BrowserRouter' is defined but never used.","'admin' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.medicalStaff.Email'. Either include it or remove the dependency array.",["1566"],"'doc' is assigned a value but never used.","'u' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.users.Email'. Either include it or remove the dependency array.",["1567"],["1528"],["1529"],["1528"],["1529"],["1568","1569"],["1570","1571"],["1572"],["1573"],["1574"],["1575"],["1576"],["1577"],["1578"],["1579"],["1580"],["1581"],["1582"],["1583"],["1584"],["1585"],["1586"],["1587"],["1588"],["1589"],["1590"],["1591"],["1592"],["1593"],["1594"],["1595"],["1596"],["1597"],["1598"],["1599"],["1600"],["1601"],["1602"],["1603"],["1604"],["1605"],"no-global-assign","no-unsafe-negation",{"messageId":"1606","fix":"1607","desc":"1608"},{"messageId":"1609","fix":"1610","desc":"1611"},{"messageId":"1606","fix":"1612","desc":"1608"},{"messageId":"1609","fix":"1613","desc":"1611"},{"desc":"1614","fix":"1615"},{"desc":"1614","fix":"1616"},{"desc":"1614","fix":"1617"},{"desc":"1614","fix":"1618"},{"desc":"1614","fix":"1619"},{"desc":"1614","fix":"1620"},{"desc":"1614","fix":"1621"},{"desc":"1614","fix":"1622"},{"desc":"1614","fix":"1623"},{"desc":"1614","fix":"1624"},{"desc":"1614","fix":"1625"},{"desc":"1626","fix":"1627"},{"desc":"1628","fix":"1629"},{"desc":"1614","fix":"1630"},{"desc":"1631","fix":"1632"},{"desc":"1631","fix":"1633"},{"desc":"1631","fix":"1634"},{"desc":"1614","fix":"1635"},{"desc":"1636","fix":"1637"},{"desc":"1628","fix":"1638"},{"desc":"1614","fix":"1639"},{"desc":"1628","fix":"1640"},{"desc":"1641","fix":"1642"},{"desc":"1614","fix":"1643"},{"desc":"1644","fix":"1645"},{"desc":"1614","fix":"1646"},{"desc":"1647","fix":"1648"},{"desc":"1649","fix":"1650"},{"desc":"1614","fix":"1651"},{"desc":"1652","fix":"1653"},{"desc":"1652","fix":"1654"},{"desc":"1655","fix":"1656"},{"desc":"1657","fix":"1658"},{"desc":"1659","fix":"1660"},{"messageId":"1606","fix":"1661","desc":"1608"},{"messageId":"1609","fix":"1662","desc":"1611"},{"messageId":"1606","fix":"1663","desc":"1608"},{"messageId":"1609","fix":"1664","desc":"1611"},{"desc":"1614","fix":"1665"},{"desc":"1614","fix":"1666"},{"desc":"1614","fix":"1667"},{"desc":"1614","fix":"1668"},{"desc":"1614","fix":"1669"},{"desc":"1614","fix":"1670"},{"desc":"1644","fix":"1671"},{"desc":"1614","fix":"1672"},{"desc":"1649","fix":"1673"},{"desc":"1614","fix":"1674"},{"desc":"1647","fix":"1675"},{"desc":"1628","fix":"1676"},{"desc":"1628","fix":"1677"},{"desc":"1628","fix":"1678"},{"desc":"1631","fix":"1679"},{"desc":"1631","fix":"1680"},{"desc":"1631","fix":"1681"},{"desc":"1614","fix":"1682"},{"desc":"1626","fix":"1683"},{"desc":"1614","fix":"1684"},{"desc":"1614","fix":"1685"},{"desc":"1614","fix":"1686"},{"desc":"1614","fix":"1687"},{"desc":"1614","fix":"1688"},{"desc":"1614","fix":"1689"},{"desc":"1641","fix":"1690"},{"desc":"1636","fix":"1691"},{"desc":"1614","fix":"1692"},{"desc":"1614","fix":"1693"},{"desc":"1652","fix":"1694"},{"desc":"1652","fix":"1695"},{"desc":"1655","fix":"1696"},{"desc":"1659","fix":"1697"},{"desc":"1657","fix":"1698"},"removeEscape",{"range":"1699","text":"1700"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1701","text":"1702"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1703","text":"1700"},{"range":"1704","text":"1702"},"Update the dependencies array to be: [currentUser.email]",{"range":"1705","text":"1706"},{"range":"1707","text":"1706"},{"range":"1708","text":"1706"},{"range":"1709","text":"1706"},{"range":"1710","text":"1706"},{"range":"1711","text":"1706"},{"range":"1712","text":"1706"},{"range":"1713","text":"1706"},{"range":"1714","text":"1706"},{"range":"1715","text":"1706"},{"range":"1716","text":"1706"},"Update the dependencies array to be: [Appointment.DocEmail, currentUser.email]",{"range":"1717","text":"1718"},"Update the dependencies array to be: [appointment.DocEmail, appointment.id]",{"range":"1719","text":"1720"},{"range":"1721","text":"1706"},"Update the dependencies array to be: [document.DocEmail]",{"range":"1722","text":"1723"},{"range":"1724","text":"1723"},{"range":"1725","text":"1723"},{"range":"1726","text":"1706"},"Update the dependencies array to be: [md.PatientEmail]",{"range":"1727","text":"1728"},{"range":"1729","text":"1720"},{"range":"1730","text":"1706"},{"range":"1731","text":"1720"},"Update the dependencies array to be: [appointment.id]",{"range":"1732","text":"1733"},{"range":"1734","text":"1706"},"Update the dependencies array to be: [appointment.DocEmail, currentUser.email]",{"range":"1735","text":"1736"},{"range":"1737","text":"1706"},"Update the dependencies array to be: [appointment.DocEmail, appointment.PatientEmail]",{"range":"1738","text":"1739"},"Update the dependencies array to be: [options]",{"range":"1740","text":"1741"},{"range":"1742","text":"1706"},"Update the dependencies array to be: [user.Email]",{"range":"1743","text":"1744"},{"range":"1745","text":"1744"},"Update the dependencies array to be: [currentUser.email, props.email]",{"range":"1746","text":"1747"},"Update the dependencies array to be: [props.medicalStaff.Email]",{"range":"1748","text":"1749"},"Update the dependencies array to be: [props.users.Email]",{"range":"1750","text":"1751"},{"range":"1752","text":"1700"},{"range":"1753","text":"1702"},{"range":"1754","text":"1700"},{"range":"1755","text":"1702"},{"range":"1756","text":"1706"},{"range":"1757","text":"1706"},{"range":"1758","text":"1706"},{"range":"1759","text":"1706"},{"range":"1760","text":"1706"},{"range":"1761","text":"1706"},{"range":"1762","text":"1736"},{"range":"1763","text":"1706"},{"range":"1764","text":"1741"},{"range":"1765","text":"1706"},{"range":"1766","text":"1739"},{"range":"1767","text":"1720"},{"range":"1768","text":"1720"},{"range":"1769","text":"1720"},{"range":"1770","text":"1723"},{"range":"1771","text":"1723"},{"range":"1772","text":"1723"},{"range":"1773","text":"1706"},{"range":"1774","text":"1718"},{"range":"1775","text":"1706"},{"range":"1776","text":"1706"},{"range":"1777","text":"1706"},{"range":"1778","text":"1706"},{"range":"1779","text":"1706"},{"range":"1780","text":"1706"},{"range":"1781","text":"1733"},{"range":"1782","text":"1728"},{"range":"1783","text":"1706"},{"range":"1784","text":"1706"},{"range":"1785","text":"1744"},{"range":"1786","text":"1744"},{"range":"1787","text":"1747"},{"range":"1788","text":"1751"},{"range":"1789","text":"1749"},[1767,1768],"",[1767,1767],"\\",[1784,1785],[1784,1784],[1918,1920],"[currentUser.email]",[1857,1859],[1535,1537],[1483,1485],[1103,1105],[1693,1695],[1811,1813],[1935,1937],[841,843],[1059,1061],[1927,1929],[2476,2478],"[Appointment.DocEmail, currentUser.email]",[1197,1199],"[appointment.DocEmail, appointment.id]",[2540,2542],[836,838],"[document.DocEmail]",[869,871],[830,832],[773,775],[1455,1457],"[md.PatientEmail]",[2019,2021],[1359,1361],[1685,1687],[1731,1733],"[appointment.id]",[753,755],[2472,2474],"[appointment.DocEmail, currentUser.email]",[841,843],[2532,2534],"[appointment.DocEmail, appointment.PatientEmail]",[2713,2715],"[options]",[847,849],[2861,2863],"[user.Email]",[1892,1894],[1726,1728],"[currentUser.email, props.email]",[1160,1162],"[props.medicalStaff.Email]",[1100,1102],"[props.users.Email]",[1767,1768],[1767,1767],[1784,1785],[1784,1784],[1535,1537],[1918,1920],[1857,1859],[1483,1485],[1103,1105],[841,843],[2472,2474],[1693,1695],[2713,2715],[773,775],[2532,2534],[2019,2021],[1197,1199],[1685,1687],[836,838],[830,832],[869,871],[2540,2542],[2476,2478],[1059,1061],[1927,1929],[841,843],[753,755],[1935,1937],[1811,1813],[1731,1733],[1455,1457],[1359,1361],[847,849],[1892,1894],[2861,2863],[1726,1728],[1100,1102],[1160,1162]]