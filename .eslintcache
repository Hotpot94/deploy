[{"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js":"1","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js":"2","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js":"3","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js":"4","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js":"5","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js":"6","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js":"7","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js":"8","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js":"9","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js":"10","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js":"11","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js":"12","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js":"13","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js":"14","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js":"15","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js":"16","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js":"17","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js":"18","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js":"19","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js":"20","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js":"21","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js":"22","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js":"23","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js":"24","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js":"25","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js":"26","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js":"27","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js":"28","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js":"29","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js":"30","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js":"31","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js":"32","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js":"33","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js":"34","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js":"35","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js":"36","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js":"37","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js":"38","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js":"39","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js":"40","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js":"41","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js":"42","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js":"43","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js":"44","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js":"45","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js":"46","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js":"47","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js":"48","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js":"49","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js":"50","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js":"51","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js":"52","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js":"53","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"54","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js":"55","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js":"56","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js":"57","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js":"58","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js":"59","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js":"60","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js":"61","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js":"62","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js":"63","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js":"64","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js":"65","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js":"66","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js":"67","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js":"68","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js":"69","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js":"70","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js":"71","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"72","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js":"73","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js":"74","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js":"75","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js":"76","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js":"77","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js":"78","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js":"79","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js":"80","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js":"81","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js":"82","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js":"83","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js":"84","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js":"85","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\createAppointmentUI.js":"86","C:\\Users\\malla\\Desktop\\project\\src\\index.js":"87","C:\\Users\\malla\\Desktop\\project\\src\\App.js":"88","C:\\Users\\malla\\Desktop\\project\\src\\reportWebVitals.js":"89","C:\\Users\\malla\\Desktop\\project\\src\\noMatch.js":"90","C:\\Users\\malla\\Desktop\\project\\src\\util\\AuthRoute.js":"91","C:\\Users\\malla\\Desktop\\project\\src\\util\\Auth.js":"92","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SysAdm.js":"93","C:\\Users\\malla\\Desktop\\project\\src\\User\\LoginUI.js":"94","C:\\Users\\malla\\Desktop\\project\\src\\User\\ResetPasswordUI.js":"95","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\Patient.js":"96","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MedAdm.js":"97","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MedDoc.js":"98","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\RegisterUI.js":"99","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\PRoute.js":"100","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MARoute.js":"101","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MDRoute.js":"102","C:\\Users\\malla\\Desktop\\project\\src\\firebase.js":"103","C:\\Users\\malla\\Desktop\\project\\src\\App.styles.js":"104","C:\\Users\\malla\\Desktop\\project\\src\\util\\IdleTimerContainer.js":"105","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\SARoute.js":"106","C:\\Users\\malla\\Desktop\\project\\src\\components\\Navbar\\NavigationbarSA.js":"107","C:\\Users\\malla\\Desktop\\project\\src\\components\\PasswordStrengthIndicator.js":"108","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\SASideBarData.js":"109","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.js":"110","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MASideBarData.js":"111","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\PSideBarData.js":"112","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MDSideBarData.js":"113","C:\\Users\\malla\\Desktop\\project\\src\\util\\PatientRoute.js":"114","C:\\Users\\malla\\Desktop\\project\\src\\User\\myProfilePageUI.js":"115","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PHomepageUI.js":"116","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\changePwUI.js":"117","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ResAppointmentUI.js":"118","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMyMPUI.js":"119","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\userAppointmentUI.js":"120","C:\\Users\\malla\\Desktop\\project\\src\\User\\ViewHealthArticleUI.js":"121","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\CancelAppointmentUI.js":"122","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\BookAppointmentUI.js":"123","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewIndividualMPUI.js":"124","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorProfile.js":"125","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchDoctor.js":"126","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMC.js":"127","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ScheduleAppointmentUI.js":"128","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ResAppointmentUI.js":"129","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewReceipt.js":"130","C:\\Users\\malla\\Desktop\\project\\src\\util\\MedAdmRoute.js":"131","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\changePwUI.js":"132","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MAHomepageUI.js":"133","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js":"134","C:\\Users\\malla\\Desktop\\project\\src\\util\\DoctorRoute.js":"135","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\createAppointmentUI.js":"136","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js":"137","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MDHomepageUI.js":"138","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMPUI.js":"139","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\changePwUI.js":"140","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js":"141","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js":"142","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js":"143","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\EditMedicalRecord.js":"144","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js":"145","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js":"146","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMC.js":"147","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMPUI.js":"148","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\DocRescheduleUI.js":"149","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\PatientViewArticle.js":"150","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticle.js":"151","C:\\Users\\malla\\Desktop\\project\\src\\components\\EditArticle\\EditArticle.js":"152","C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticle.js":"153","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SAHomepageUI.js":"154","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\changePwUI.js":"155","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"156","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js":"157","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js":"158","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\CreateAccountUI.js":"159","C:\\Users\\malla\\Desktop\\project\\src\\util\\SystemAdminRoute.js":"160","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"161","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchBar.js":"162","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PatientComment.js":"163","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\dropDownBar.js":"164","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorCard.js":"165","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js":"166","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MC.js":"167","C:\\Users\\malla\\Desktop\\project\\src\\components\\ArticleCard\\ArticleCard.js":"168","C:\\Users\\malla\\Desktop\\project\\src\\components\\navbarUI.js":"169","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\searchBar.js":"170","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\UserInput.js":"171","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\dropDownBar.js":"172"},{"size":583,"mtime":1609073849358,"results":"173","hashOfConfig":"174"},{"size":375,"mtime":1609073849361,"results":"175","hashOfConfig":"174"},{"size":2096,"mtime":1611327975795,"results":"176","hashOfConfig":"174"},{"size":339,"mtime":1611154119483,"results":"177","hashOfConfig":"174"},{"size":408,"mtime":1610293277748,"results":"178","hashOfConfig":"174"},{"size":1426,"mtime":1611995977581,"results":"179","hashOfConfig":"174"},{"size":3063,"mtime":1612261299054,"results":"180","hashOfConfig":"174"},{"size":855,"mtime":1610210889735,"results":"181","hashOfConfig":"174"},{"size":2569,"mtime":1612534671813,"results":"182","hashOfConfig":"174"},{"size":854,"mtime":1609504207739,"results":"183","hashOfConfig":"174"},{"size":855,"mtime":1610210889738,"results":"184","hashOfConfig":"174"},{"size":852,"mtime":1609468629584,"results":"185","hashOfConfig":"174"},{"size":9640,"mtime":1612261299015,"results":"186","hashOfConfig":"174"},{"size":4480,"mtime":1611994942859,"results":"187","hashOfConfig":"174"},{"size":3374,"mtime":1613279283176,"results":"188","hashOfConfig":"174"},{"size":4797,"mtime":1613279283178,"results":"189","hashOfConfig":"174"},{"size":1683,"mtime":1612534671836,"results":"190","hashOfConfig":"174"},{"size":433,"mtime":1609547222515,"results":"191","hashOfConfig":"174"},{"size":3005,"mtime":1613279283179,"results":"192","hashOfConfig":"174"},{"size":784,"mtime":1612938154837,"results":"193","hashOfConfig":"174"},{"size":1197,"mtime":1610436627100,"results":"194","hashOfConfig":"174"},{"size":773,"mtime":1610729184252,"results":"195","hashOfConfig":"174"},{"size":1870,"mtime":1612534671818,"results":"196","hashOfConfig":"174"},{"size":615,"mtime":1613279283183,"results":"197","hashOfConfig":"174"},{"size":5650,"mtime":1609504207720,"results":"198","hashOfConfig":"174"},{"size":720,"mtime":1612938154835,"results":"199","hashOfConfig":"174"},{"size":681,"mtime":1612942693270,"results":"200","hashOfConfig":"174"},{"size":6265,"mtime":1612534671782,"results":"201","hashOfConfig":"174"},{"size":1109,"mtime":1612534671838,"results":"202","hashOfConfig":"174"},{"size":5180,"mtime":1612534671799,"results":"203","hashOfConfig":"174"},{"size":5553,"mtime":1612534671779,"results":"204","hashOfConfig":"174"},{"size":2466,"mtime":1612534671792,"results":"205","hashOfConfig":"174"},{"size":2783,"mtime":1612534671814,"results":"206","hashOfConfig":"174"},{"size":2538,"mtime":1612534671788,"results":"207","hashOfConfig":"174"},{"size":4895,"mtime":1612534671795,"results":"208","hashOfConfig":"174"},{"size":5502,"mtime":1612534671797,"results":"209","hashOfConfig":"174"},{"size":6142,"mtime":1613278363911,"results":"210","hashOfConfig":"174"},{"size":3465,"mtime":1612534671786,"results":"211","hashOfConfig":"174"},{"size":5292,"mtime":1613276532255,"results":"212","hashOfConfig":"174"},{"size":7698,"mtime":1612938154831,"results":"213","hashOfConfig":"174"},{"size":7573,"mtime":1612941071979,"results":"214","hashOfConfig":"174"},{"size":4227,"mtime":1612942214897,"results":"215","hashOfConfig":"174"},{"size":9803,"mtime":1612938154822,"results":"216","hashOfConfig":"174"},{"size":4338,"mtime":1612534671829,"results":"217","hashOfConfig":"174"},{"size":1064,"mtime":1612534671837,"results":"218","hashOfConfig":"174"},{"size":2352,"mtime":1610266066773,"results":"219","hashOfConfig":"174"},{"size":4594,"mtime":1613279283184,"results":"220","hashOfConfig":"174"},{"size":1051,"mtime":1612534671835,"results":"221","hashOfConfig":"174"},{"size":2354,"mtime":1610266066783,"results":"222","hashOfConfig":"174"},{"size":3663,"mtime":1612518196129,"results":"223","hashOfConfig":"174"},{"size":5996,"mtime":1612518367350,"results":"224","hashOfConfig":"174"},{"size":7039,"mtime":1612534671874,"results":"225","hashOfConfig":"174"},{"size":3826,"mtime":1611822952611,"results":"226","hashOfConfig":"174"},{"size":5093,"mtime":1612534671806,"results":"227","hashOfConfig":"174"},{"size":9843,"mtime":1612534671803,"results":"228","hashOfConfig":"174"},{"size":1065,"mtime":1612534671840,"results":"229","hashOfConfig":"174"},{"size":2352,"mtime":1610266066795,"results":"230","hashOfConfig":"174"},{"size":4349,"mtime":1612534671807,"results":"231","hashOfConfig":"174"},{"size":3622,"mtime":1612938154804,"results":"232","hashOfConfig":"174"},{"size":9300,"mtime":1613279283180,"results":"233","hashOfConfig":"174"},{"size":8181,"mtime":1613279283181,"results":"234","hashOfConfig":"174"},{"size":12929,"mtime":1613147907409,"results":"235","hashOfConfig":"174"},{"size":6875,"mtime":1613279317550,"results":"236","hashOfConfig":"174"},{"size":5219,"mtime":1612938154816,"results":"237","hashOfConfig":"174"},{"size":7826,"mtime":1612938154815,"results":"238","hashOfConfig":"174"},{"size":10331,"mtime":1613279283175,"results":"239","hashOfConfig":"174"},{"size":13960,"mtime":1613147799638,"results":"240","hashOfConfig":"174"},{"size":6157,"mtime":1612938154814,"results":"241","hashOfConfig":"174"},{"size":5822,"mtime":1612938154807,"results":"242","hashOfConfig":"174"},{"size":4589,"mtime":1612938154828,"results":"243","hashOfConfig":"174"},{"size":7285,"mtime":1612938154829,"results":"244","hashOfConfig":"174"},{"size":3473,"mtime":1609504207721,"results":"245","hashOfConfig":"174"},{"size":682,"mtime":1612505280494,"results":"246","hashOfConfig":"174"},{"size":6892,"mtime":1612261299011,"results":"247","hashOfConfig":"174"},{"size":1452,"mtime":1610543910991,"results":"248","hashOfConfig":"174"},{"size":1399,"mtime":1610543862366,"results":"249","hashOfConfig":"174"},{"size":1600,"mtime":1610266066804,"results":"250","hashOfConfig":"174"},{"size":1398,"mtime":1612534671811,"results":"251","hashOfConfig":"174"},{"size":1088,"mtime":1612261299046,"results":"252","hashOfConfig":"174"},{"size":682,"mtime":1611154119482,"results":"253","hashOfConfig":"174"},{"size":2677,"mtime":1611761389248,"results":"254","hashOfConfig":"174"},{"size":828,"mtime":1609511739548,"results":"255","hashOfConfig":"174"},{"size":832,"mtime":1612938154805,"results":"256","hashOfConfig":"174"},{"size":7444,"mtime":1612942292667,"results":"257","hashOfConfig":"174"},{"size":4202,"mtime":1612942249245,"results":"258","hashOfConfig":"174"},{"size":359,"mtime":1612942693317,"results":"259","hashOfConfig":"174"},{"size":583,"mtime":1609073849358,"results":"260","hashOfConfig":"261"},{"size":2096,"mtime":1611327975795,"results":"262","hashOfConfig":"261"},{"size":375,"mtime":1609073849361,"results":"263","hashOfConfig":"261"},{"size":339,"mtime":1611154119483,"results":"264","hashOfConfig":"261"},{"size":408,"mtime":1610293277748,"results":"265","hashOfConfig":"261"},{"size":1426,"mtime":1611995977581,"results":"266","hashOfConfig":"261"},{"size":852,"mtime":1609468629584,"results":"267","hashOfConfig":"261"},{"size":3063,"mtime":1612261299054,"results":"268","hashOfConfig":"261"},{"size":2569,"mtime":1612534671813,"results":"269","hashOfConfig":"261"},{"size":854,"mtime":1609504207739,"results":"270","hashOfConfig":"261"},{"size":855,"mtime":1610210889738,"results":"271","hashOfConfig":"261"},{"size":855,"mtime":1610210889735,"results":"272","hashOfConfig":"261"},{"size":9640,"mtime":1612261299015,"results":"273","hashOfConfig":"261"},{"size":4480,"mtime":1611994942859,"results":"274","hashOfConfig":"261"},{"size":3374,"mtime":1613279283176,"results":"275","hashOfConfig":"261"},{"size":4797,"mtime":1613279283178,"results":"276","hashOfConfig":"261"},{"size":784,"mtime":1612938154837,"results":"277","hashOfConfig":"261"},{"size":433,"mtime":1609547222515,"results":"278","hashOfConfig":"261"},{"size":1682,"mtime":1613379797248,"results":"279","hashOfConfig":"261"},{"size":3005,"mtime":1613279283179,"results":"280","hashOfConfig":"261"},{"size":1870,"mtime":1612534671818,"results":"281","hashOfConfig":"261"},{"size":1197,"mtime":1610436627100,"results":"282","hashOfConfig":"261"},{"size":615,"mtime":1613279283183,"results":"283","hashOfConfig":"261"},{"size":5650,"mtime":1609504207720,"results":"284","hashOfConfig":"261"},{"size":681,"mtime":1612942693270,"results":"285","hashOfConfig":"261"},{"size":773,"mtime":1610729184252,"results":"286","hashOfConfig":"261"},{"size":720,"mtime":1612938154835,"results":"287","hashOfConfig":"261"},{"size":1109,"mtime":1612534671838,"results":"288","hashOfConfig":"261"},{"size":7698,"mtime":1612938154831,"results":"289","hashOfConfig":"261"},{"size":6265,"mtime":1612534671782,"results":"290","hashOfConfig":"261"},{"size":2466,"mtime":1612534671792,"results":"291","hashOfConfig":"261"},{"size":7573,"mtime":1612941071979,"results":"292","hashOfConfig":"261"},{"size":2538,"mtime":1612534671788,"results":"293","hashOfConfig":"261"},{"size":5180,"mtime":1612534671799,"results":"294","hashOfConfig":"261"},{"size":2783,"mtime":1612534671814,"results":"295","hashOfConfig":"261"},{"size":4227,"mtime":1612942214897,"results":"296","hashOfConfig":"261"},{"size":5553,"mtime":1612534671779,"results":"297","hashOfConfig":"261"},{"size":6142,"mtime":1613278363911,"results":"298","hashOfConfig":"261"},{"size":4895,"mtime":1612534671795,"results":"299","hashOfConfig":"261"},{"size":5502,"mtime":1612534671797,"results":"300","hashOfConfig":"261"},{"size":3465,"mtime":1612534671786,"results":"301","hashOfConfig":"261"},{"size":9803,"mtime":1612938154822,"results":"302","hashOfConfig":"261"},{"size":7444,"mtime":1612942292667,"results":"303","hashOfConfig":"261"},{"size":5292,"mtime":1613276532255,"results":"304","hashOfConfig":"261"},{"size":1064,"mtime":1612534671837,"results":"305","hashOfConfig":"261"},{"size":2352,"mtime":1610266066773,"results":"306","hashOfConfig":"261"},{"size":3622,"mtime":1612938154804,"results":"307","hashOfConfig":"261"},{"size":4202,"mtime":1612942249245,"results":"308","hashOfConfig":"261"},{"size":1051,"mtime":1612534671835,"results":"309","hashOfConfig":"261"},{"size":359,"mtime":1612942693317,"results":"310","hashOfConfig":"261"},{"size":10331,"mtime":1613279283175,"results":"311","hashOfConfig":"261"},{"size":5219,"mtime":1612938154816,"results":"312","hashOfConfig":"261"},{"size":12929,"mtime":1613147907409,"results":"313","hashOfConfig":"261"},{"size":2354,"mtime":1610266066783,"results":"314","hashOfConfig":"261"},{"size":6875,"mtime":1613279317550,"results":"315","hashOfConfig":"261"},{"size":5996,"mtime":1612518367350,"results":"316","hashOfConfig":"261"},{"size":7039,"mtime":1612534671874,"results":"317","hashOfConfig":"261"},{"size":7826,"mtime":1612938154815,"results":"318","hashOfConfig":"261"},{"size":3663,"mtime":1612518196129,"results":"319","hashOfConfig":"261"},{"size":3826,"mtime":1611822952611,"results":"320","hashOfConfig":"261"},{"size":5822,"mtime":1612938154807,"results":"321","hashOfConfig":"261"},{"size":13960,"mtime":1613147799638,"results":"322","hashOfConfig":"261"},{"size":6157,"mtime":1612938154814,"results":"323","hashOfConfig":"261"},{"size":4338,"mtime":1612534671829,"results":"324","hashOfConfig":"261"},{"size":4594,"mtime":1613279283184,"results":"325","hashOfConfig":"261"},{"size":9300,"mtime":1613279283180,"results":"326","hashOfConfig":"261"},{"size":8181,"mtime":1613279283181,"results":"327","hashOfConfig":"261"},{"size":4589,"mtime":1612938154828,"results":"328","hashOfConfig":"261"},{"size":2352,"mtime":1610266066795,"results":"329","hashOfConfig":"261"},{"size":5093,"mtime":1612534671806,"results":"330","hashOfConfig":"261"},{"size":4349,"mtime":1612534671807,"results":"331","hashOfConfig":"261"},{"size":7285,"mtime":1612938154829,"results":"332","hashOfConfig":"261"},{"size":9848,"mtime":1613375807210,"results":"333","hashOfConfig":"261"},{"size":1065,"mtime":1612534671840,"results":"334","hashOfConfig":"261"},{"size":3473,"mtime":1609504207721,"results":"335","hashOfConfig":"261"},{"size":682,"mtime":1612505280494,"results":"336","hashOfConfig":"261"},{"size":6892,"mtime":1612261299011,"results":"337","hashOfConfig":"261"},{"size":1399,"mtime":1610543862366,"results":"338","hashOfConfig":"261"},{"size":1452,"mtime":1610543910991,"results":"339","hashOfConfig":"261"},{"size":832,"mtime":1612938154805,"results":"340","hashOfConfig":"261"},{"size":2677,"mtime":1611761389248,"results":"341","hashOfConfig":"261"},{"size":1600,"mtime":1610266066804,"results":"342","hashOfConfig":"261"},{"size":828,"mtime":1609511739548,"results":"343","hashOfConfig":"261"},{"size":682,"mtime":1611154119482,"results":"344","hashOfConfig":"261"},{"size":1088,"mtime":1612261299046,"results":"345","hashOfConfig":"261"},{"size":1398,"mtime":1612534671811,"results":"346","hashOfConfig":"261"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10udgc7",{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"467","messages":"468","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},"1bk946a",{"filePath":"522","messages":"523","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"521"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"521"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"521"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"521"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"521"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"521"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"521"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"521"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"521"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"521"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"521"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"521"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"521"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"521"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"521"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"521"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"521"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"521"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"521"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"521"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"521"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"521"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"521"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"521"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"521"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"521"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"521"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"521"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"521"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"521"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"521"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"521"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"521"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"521"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"521"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"521"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"521"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"521"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"521"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"521"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"521"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"521"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"521"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"521"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"521"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"521"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"521"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"521"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"521"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"521"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"521"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"521"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"521"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"521"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"521"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"521"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"521"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js",["750","751","752","753","754","755","756","757"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js",["758"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js",["759","760","761","762","763","764"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js",["765","766","767","768","769","770","771","772","773","774","775"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js",["776","777","778"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js",["779","780","781","782","783","784","785","786","787","788","789"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js",["790"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js",["791"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js",["792","793","794","795","796","797","798","799","800","801","802"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js",["803"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js",["804"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js",["805"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js",["806"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js",["807"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js",["808","809","810","811","812","813"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js",["814","815"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js",["816","817","818","819","820","821","822","823"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js",["824","825"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js",["826"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js",["827"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js",["828","829","830","831","832","833","834"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js",["835","836"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js",["837","838"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js",["839","840"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js",["841"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js",["842","843","844","845"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js",["846","847","848"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js",["849"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js",["850"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js",["851","852"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js",["853"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js",["854","855","856","857","858"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js",["859"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js",["860","861","862"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js",["863","864","865","866","867","868"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["869","870","871","872","873","874","875"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js",["876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js",["894"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js",["895","896","897","898","899","900","901","902","903","904","905"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js",["906","907","908","909"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js",["910","911","912"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js",["913","914","915"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js",["916","917","918","919","920","921","922","923","924"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js",["925"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js",["926","927","928","929","930"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js",["931","932"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js",["933","934","935","936","937","938","939","940","941","942"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js",["943","944","945","946","947","948","949","950","951","952"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js",["953","954"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js",["955","956","957","958","959","960","961","962"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js",["963","964","965","966","967","968","969","970","971","972"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js",["973","974","975","976","977","978"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js",["979","980"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js",["981","982","983","984","985","986"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js",["987","988","989","990","991","992"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js",["993","994","995"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js",["996"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js",["997","998","999","1000"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\createAppointmentUI.js",["1001","1002","1003","1004","1005"],"C:\\Users\\malla\\Desktop\\project\\src\\index.js",[],["1006","1007"],"C:\\Users\\malla\\Desktop\\project\\src\\App.js",["1008","1009","1010","1011","1012","1013","1014","1015"],"import './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { AuthProvider } from './util/Auth';\r\nimport PrivateRoute from \"./util/AuthRoute\";\r\n\r\n// User ------------------------------------------------------\r\nimport LoginUI from './User/LoginUI';\r\nimport ResetPasswordUI from './User/ResetPasswordUI';\r\n\r\n// System Admin ----------------------------------------------\r\nimport SysAdm from \"./SystemAdmin/SysAdm\";\r\n\r\n// Patient ---------------------------------------------------\r\nimport Patient from './Patient/Patient';\r\nimport RegisterUI  from './Patient/RegisterUI';\r\n\r\n// Medical Doctor --------------------------------------------\r\nimport MedDoc from './MedicalDoctor/MedDoc'\r\n\r\n// Medical Admin ---------------------------------------------\r\nimport MedAdm from './MedicalAdmin/MedAdm'\r\n\r\nimport NoMatch from './noMatch'\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n      <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          // User Login Page\r\n          <Route exact path=\"/\" component={LoginUI}/>\r\n\r\n          // Patient Create New Account Page\r\n          <Route path=\"/register\" component={RegisterUI}/>\r\n\r\n          // User Reset Password Page\r\n          <Route path=\"/resetPassword\" component={ResetPasswordUI}/>\r\n\r\n          // System admin Main Page ----------------------------------------\r\n          <PrivateRoute path=\"/SysAdm\" component={SysAdm} />\r\n\r\n          // Patient Main Page ---------------------------------------------\r\n          <PrivateRoute path=\"/Patient\" component={Patient}/>\r\n\r\n          // Medical Doctor Main Page --------------------------------------\r\n          <PrivateRoute path=\"/MedDoc\" component={MedDoc}/>\r\n\r\n          // Medical Admin Main Page ---------------------------------------\r\n          <PrivateRoute path=\"/MedAdm\" component={MedAdm}/>\r\n          \r\n          // Display error if path does not match\r\n          <Route path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n          \r\n        </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\malla\\Desktop\\project\\src\\reportWebVitals.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\noMatch.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\Auth.js",["1016"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function deleteAccount(currentUser){\r\n    return auth.delete(currentUser)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SysAdm.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\User\\LoginUI.js",["1017","1018","1019","1020","1021","1022"],"import React, {useState} from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { auth, firestore } from '../firebase';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nfunction LoginUI() {\r\n    //useStates\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const {login} = useAuth();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const {currentUser} = useAuth();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(Email, Password);\r\n            history.push(\"/Patient\");\r\n        }catch(error) {\r\n            setError(error.message);\r\n        }\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h1 className= \"text-center mb-4\" style={{\r\n                     fontSize: '2em'\r\n                 }}>MyAppointment</h1>\r\n                 <h2 className= \"text-center mb-4\"> Login</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        value={Password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Button className=\"w-100\" type=\"submit\">Login</Button>\r\n                 </Form>\r\n                 <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/resetPassword\">Forgot Password?</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Don't have an account? <Link to=\"/register\"><u>Join Now!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\Patient.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MedAdm.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MedDoc.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\RegisterUI.js",["1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { auth, firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport {useAuth} from '../util/Auth'\r\n\r\nfunction RegisterUI() {\r\n\r\n   //useStates\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Password, setPassword] = useState(\"\"); \r\n   const [ConfirmPassword, setConfirmPassword] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const history = useHistory();\r\n\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const NRICRef = useRef();\r\n   const AddressRef = useRef();\r\n   const DOBRef = useRef();\r\n   const EmailRef = useRef();\r\n   const TelephoneRef = useRef();\r\n   const PasswordRef = useRef();\r\n   const ConfirmPasswordRef = useRef();\r\n\r\n   const {signup} = useAuth()\r\n   const {currentUser} = useAuth()\r\n\r\n   // Check Validity\r\n   const isNumber = /\\d/;\r\n   const isSpecChar = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\r\n   const isLower = /[a-z]/;\r\n   const isUpper = /[A-Z]/;\r\n\r\n   const [passwordFocused, setPasswordFocused] = useState(false);\r\n   const [passwordValidity, setPasswordValidity] = useState ({\r\n      minChar: null,\r\n      lower: null,\r\n      upper: null,\r\n      number: null,\r\n      specialChar: null\r\n   });\r\n\r\n   const onChangePassword = password =>\r\n   {\r\n      setPassword(password);\r\n      setPasswordValidity({\r\n         minChar: password.length >=8 ? true : false,\r\n         lower: isLower.test(password) ? true : false,\r\n         upper: isUpper.test(password) ? true : false,\r\n         number: isNumber.test(password) ? true : false,\r\n         specialChar: isSpecChar.test(password) ? true : false\r\n      })\r\n   }\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      if(Password !== ConfirmPassword)\r\n      {\r\n         return setError(\"Passwords do not match\")\r\n      }\r\n\r\n      if (passwordValidity.minChar == false || passwordValidity.lower == false || passwordValidity.upper == false || passwordValidity.number == false || passwordValidity.specialChar == false)\r\n      {\r\n         return setError(\"Password do not meet the requirement\");\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         await signup(Email, Password) \r\n\r\n         \r\n              \r\n\r\n         firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            NRIC: NRIC,\r\n            Address: Address,\r\n            DOB: DOB,\r\n            Email: Email.toLowerCase(),\r\n            Telephone: Telephone,\r\n            Role: \"Patient\",\r\n         })\r\n         .then(() => {\r\n            alert(\"Account Registered Successfully!\");\r\n         })\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setAddress(\"\");\r\n      setDOB(\"\");\r\n      setEmail(\"\");\r\n      setTelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setPasswordFocused(false);\r\n      };\r\n\r\n   return (\r\n      <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create your Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control\r\n                        ref={NRICRef}\r\n                        value={NRIC}\r\n                        onChange={(e) => setNRIC(e.target.value)} \r\n                        pattern = \"[s S| t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={AddressRef}\r\n                        value={Address}\r\n                        onChange={(e) => setAddress(e.target.value)} \r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        ref={DOBRef}\r\n                        value={DOB}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)} \r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        ref={TelephoneRef}\r\n                        value={Telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Form.Group id = \"Password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={PasswordRef}\r\n                        value={Password}\r\n                        onFocus = {() => setPasswordFocused(true)}\r\n                        onChange={(e) => onChangePassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"ConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={ConfirmPasswordRef}\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n\r\n                     { passwordFocused && <PasswordStrengthIndicator validity={passwordValidity}/>}\r\n\r\n                     <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                 </Form>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/\"><u>Login!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default RegisterUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\PRoute.js",["1034","1035","1036"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport PrivateRoute from \"../util/AuthRoute\";\r\nimport PatientRoute from \"../util/PatientRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport { AuthProvider } from '../util/Auth';\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport PHomePageUI from \"../Patient/PHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../Patient/changePwUI\";\r\nimport ViewMyMPUI from \"../Patient/ViewMyMPUI\"\r\nimport UserAppointmentUI from '../Patient/userAppointmentUI';\r\nimport BookAppointmentUI from '../Patient/BookAppointmentUI';\r\nimport ResAppointmentUI from '../Patient/ResAppointmentUI';\r\nimport CancelAppointmentUI from '../Patient/CancelAppointmentUI';\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport PatientViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\nimport DoctorProfile from \"../Patient/doctorProfile\";\r\nimport SearchDoctor from \"../Patient/searchDoctor\";\r\nimport ScheduleAppointmentUI from \"../Patient/ScheduleAppointmentUI\"\r\nimport ViewIndividualMPUI from \"../Patient/ViewIndividualMPUI\";\r\nimport ViewMC from \"../Patient/ViewMC\";\r\nimport ViewReceipt from \"../Patient/ViewReceipt\";\r\n\r\nconst PRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            <PatientRoute exact path= {`${path}`} component={PHomePageUI} role={user.Role}/>\r\n\r\n            {/* // My Profile */}\r\n            <PatientRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <PatientRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Medical Profile */}\r\n            <PatientRoute exact path={`${path}/MedicalProfile`} component={ViewMyMPUI} role={user.Role}/>\r\n\r\n            {/* // Individual Medical Profile */}\r\n            <PatientRoute exact path={`${path}/ViewMedicalProfile`} component={ViewIndividualMPUI} role={user.Role}/>\r\n\r\n            {/* // View MC */}\r\n            <PatientRoute exact path={`${path}/ViewMC`} component={ViewMC} role={user.Role}/>\r\n\r\n            {/* // View Receipt */}\r\n            <PatientRoute exact path={`${path}/ViewReceipt`} component={ViewReceipt} role={user.Role}/>\r\n\r\n            {/* // Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment`} component={UserAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Book Apointment */}\r\n            <PatientRoute exact path={`${path}/bookAppointment/`} component={BookAppointmentUI} role={user.Role}/>\r\n            <PatientRoute exact path={`${path}/scheduleAppointment/`} component={ScheduleAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={PatientViewArticle}/>\r\n\r\n            {/* // Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/searchDoctor`} component={SearchDoctor} role={user.Role}/>\r\n\r\n            {/* // Individual Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/doctorProfile/:id`} component={DoctorProfile} role={user.Role}/>\r\n            \r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n        </Switch>\r\n    )}\r\n\r\nexport default PRoute;","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MARoute.js",["1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047"],"import React, {useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport MedAdmRoute from \"../util/MedAdmRoute\"\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MAHomepageUI from \"../MedicalAdmin/MAHomepageUI\";\r\nimport ResAppointmentUI from \"../MedicalAdmin/ResAppointmentUI\";\r\nimport CancelAppointmentUI from \"../MedicalAdmin/CancelAppointmentUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalAdmin/changePwUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticle\";\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticle\";\r\nimport ViewDoctorScheduleUI from \"../MedicalAdmin/ViewDoctorScheduleUI\";\r\nimport createAppointmentUI from \"../MedicalAdmin/createAppointmentUI\";\r\n\r\nconst MARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Medical Admin Homepage\r\n            <MedAdmRoute exact path= {`${path}`} component={MAHomepageUI} role={user.Role}/>\r\n\r\n            // View My Profile\r\n            <MedAdmRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <MedAdmRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            // View Doctor to Patient\r\n            <MedAdmRoute exact path={`${path}/Schedule`} component={ViewDoctorScheduleUI} role={user.Role}/>\r\n\r\n            // Create New Appointment\r\n            <MedAdmRoute exact path={`${path}/Schedule/createAppt`} component={createAppointmentUI} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route  path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            // Create New Health Post\r\n            <MedAdmRoute path={`${path}/ViewHealthArticle/new-article`} component={NewArticle} role={user.Role}/>\r\n\r\n            // Edit Article\r\n            <MedAdmRoute path={`${path}/edit-article`} component={EditArticle} role={user.Role}/>\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default MARoute;","C:\\Users\\malla\\Desktop\\project\\src\\Routes\\MDRoute.js",["1048"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport DoctorRoute from \"../util/DoctorRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MDHomepageUI from \"../MedicalDoctor/MDHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalDoctor/changePwUI\";\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticle\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticle\";\r\nimport CreateMPUI from \"../MedicalDoctor/CreateMPUI\";\r\nimport ViewPatientProfileUI from \"../MedicalDoctor/ViewPatientProfileUI\";\r\nimport CreateMedicalRecord from \"../MedicalDoctor/CreateMedicalRecord\";\r\nimport EditMedicalRecord from \"../MedicalDoctor/EditMedicalRecord\";\r\nimport TransferMedicalRecord from \"../MedicalDoctor/TransferMedicalRecord\";\r\nimport ViewMPUI from \"../MedicalDoctor/ViewMPUI\";\r\nimport ViewAllocatedPatientUI from \"../MedicalDoctor/ViewAllocatedPatientUI\"\r\nimport DocRescheduleUI from \"../MedicalDoctor/DocRescheduleUI\";\r\nimport CreateMC from \"../MedicalDoctor/CreateMC\"\r\nimport ViewMedicalCertificate from \"../MedicalDoctor/ViewMedicalCertificate\"\r\n\r\nconst MDRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            {/* // Medical Doctor Homepage */}\r\n            <DoctorRoute exact path= {`${path}`} component={MDHomepageUI} role={user.Role}/>\r\n\r\n            {/* // View My Profile */}\r\n            <DoctorRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <DoctorRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Profile */}\r\n            <DoctorRoute exact path={`${path}/PatientProfile`} component={ViewPatientProfileUI} role={user.Role}/>\r\n\r\n            {/* // craete medical record */}\r\n            <DoctorRoute exact path={`${path}/CreateMedicalRecord`} component={CreateMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // edit medical record */}\r\n            <DoctorRoute exact path={`${path}/EditMedicalRecord`} component={EditMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // transfer medical record */}\r\n            <DoctorRoute exact path={`${path}/TransferMedicalRecord`} component={TransferMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Document */}\r\n            <DoctorRoute exact path={`${path}/CreateMP`} component={CreateMPUI} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Certificate */}\r\n            <DoctorRoute exact path={`${path}/CreateMC`} component={CreateMC} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Record */}\r\n            <DoctorRoute exact path={`${path}/ViewMP`} component={ViewMPUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Certicficate */}\r\n            <DoctorRoute exact path={`${path}/ViewMC`} component={ViewMedicalCertificate} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Schedule`} component={ViewAllocatedPatientUI} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Reschedule`} component={DocRescheduleUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI} />\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            {/* // Create New Health Post */}\r\n            <Route path={`${path}/ViewHealthArticle/new-article`} component={NewArticle}/>\r\n\r\n            {/* // Edit Article */}\r\n            <Route path={`${path}/edit-article`} component={EditArticle}/>\r\n            \r\n\r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n            \r\n        </Switch>\r\n    )}\r\n\r\nexport default MDRoute;","C:\\Users\\malla\\Desktop\\project\\src\\firebase.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\App.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\util\\IdleTimerContainer.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Routes\\SARoute.js",["1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059"],"import React, {useState} from 'react';\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport SAHomePageUI from \"../SystemAdmin/SAHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ViewAllAccountUI from \"../SystemAdmin/ViewAllAccountUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ChangePasswordUI from \"../SystemAdmin/changePwUI\";\r\nimport CreateAccountUI from \"../SystemAdmin/CreateAccountUI\";\r\nimport ViewIndividualAccountUI from \"../SystemAdmin/ViewIndividualAccountUI\";\r\nimport ViewAllStaffAccount from \"../SystemAdmin/ViewAllStaffAccount\";\r\nimport ViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\n\r\nimport SystemAdminRoute from \"../util/SystemAdminRoute\";\r\n\r\n\r\nconst SARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Sys Adm Homepage\r\n            <SystemAdminRoute exact path= {`${path}`} component={SAHomePageUI} role={user.Role}/>\r\n\r\n            // My Profils\r\n            <SystemAdminRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <SystemAdminRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            // View All Account\r\n            <SystemAdminRoute exact path= {`${path}/viewAllAccount`} component={ViewAllAccountUI} role={user.Role} />\r\n\r\n            // Create New Account\r\n            <SystemAdminRoute exact path={`${path}/viewAllAccount/createAccount`} component={CreateAccountUI} role={user.Role}/>\r\n\r\n            // View Individual Account\r\n            <SystemAdminRoute exact path={`${path}/viewIndvAcc`} component={ViewIndividualAccountUI} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            //View All Staff\r\n            <SystemAdminRoute path={`${path}/viewAllStaffAccount`} component={ViewAllStaffAccount} role={user.Role}/>\r\n\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default SARoute;\r\n\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\Navbar\\NavigationbarSA.js",["1060"],"import React, {useState} from 'react';\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport { firestore, auth } from '../../firebase';\r\nimport {useAuth} from '../../util/Auth';\r\n\r\n\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #2B3856; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #95B9C7;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand, .navbar-brand:hover {\r\n    font-size: 1.4em;\r\n    color: #98AFC7;\r\n    cursor: default;\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\n\r\nconst NaviBar = () => {\r\n\r\n  const {currentUser} = useAuth()\r\n  const [users, setUsers] = useState([])\r\n  React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Users\")\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n      };\r\n      fetchData();\r\n   }, [])\r\n   const user = {...users[0]}\r\n\r\n   function deleteUser(){\r\n    currentUser.delete().then(function() {\r\n        alert(\"Exit successfully\")\r\n      }).catch(function(error) {\r\n        alert(error)\r\n      });  \r\n}\r\n\r\n    return(\r\n        <Styles>\r\n        <Navbar>\r\n            <Navbar.Brand>My Appointment</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n              <Nav className=\"ml-auto\">\r\n              {user.Role ? ( <Nav.Item><Nav.Link onClick={() => auth.signOut()}>Logout</Nav.Link></Nav.Item>): \r\n              (<Nav.Item><Nav.Link onClick={() => deleteUser() }>Your Account has been deleted / disabled. Click here to exit</Nav.Link></Nav.Item>)}\r\n              </Nav>\r\n        </Navbar>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default NaviBar;","C:\\Users\\malla\\Desktop\\project\\src\\components\\PasswordStrengthIndicator.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\SASideBarData.js",["1061"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n   {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n       \r\n   {name: 'My Profiles', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n      subMenuItems: [\r\n         {name: 'Change Password', to: '/changePW'}\r\n      ]},\r\n\r\n   {name: 'Manage Account', to: '/viewAllAccount', icon: '/icons/manageAccount.svg', \r\n      subMenuItems: [\r\n         {name: 'Create New Account', to: '/createAccount'}\r\n      ]},\r\n\r\n   {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n      subMenuItems: []}\r\n];\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MASideBarData.js",["1062"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems:[\r\n            {name: 'Create New Appointment', to: '/createAppt'}\r\n        ]},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\PSideBarData.js",["1063"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePw'}\r\n        ]},\r\n\r\n    {name: 'Medical Profile', to: '/MedicalProfile', icon: '/icons/medicalProfile.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Appointment', to: '/Appointment', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'Doctor Profile', to: '/searchDoctor', icon: '/icons/doctor.svg', \r\n       subMenuItems: []}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\MDSideBarData.js",["1064"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Patient Profile', to: '/PatientProfile', icon: '/icons/patient.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\project\\src\\util\\PatientRoute.js",["1065","1066"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport {useAuth} from \"../util/Auth\"\r\n\r\nfunction PatientRoute({ component: Component, role, ...rest }) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        {role === \"Patient\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {role === \"System Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/sysadm\"/>)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientRoute\r\n","C:\\Users\\malla\\Desktop\\project\\src\\User\\myProfilePageUI.js",["1067","1068"],"import React, { useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport {useRouteMatch} from 'react-router-dom';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction MyProfilePageUI() {\r\n\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Role] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n\r\n   const [enableFields, setEnableFields] = useState(true);\r\n   const [editEnabled, setEditEnabled] = useState(false);\r\n   const[updateEnabled, setUpdateEnabled] = useState(true);\r\n   const { currentUser } = useAuth();\r\n   const { updateEmail } = useAuth();\r\n   const [Users, setUsers] = useState([]);\r\n\r\n   const {path} = useRouteMatch();\r\n\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Users\")\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n   function onEdit(){\r\n      setEditEnabled(true);\r\n      setUpdateEnabled(false);\r\n      setEnableFields(false);\r\n      setFirstName(Users[0].FirstName);\r\n      setLastName(Users[0].LastName);\r\n      setNRIC(Users[0].NRIC);\r\n      setDOB(Users[0].DOB);\r\n      setAddress(Users[0].Address);\r\n      setEmail(Users[0].Email);\r\n      setTelephone(Users[0].Telephone);\r\n   }\r\n\r\n  \r\n\r\n   const submitUpdate = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your ' + Users.map(user => user.Role.toLowerCase()) + ' account has been updated successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      try{\r\n         setError(\"\");\r\n         setUpdateEnabled(true);\r\n         if(currentUser.email !== Email)\r\n         {\r\n            await updateEmail(Email);\r\n         }\r\n         //update data in firestore collection\r\n         firestore.collection(\"Users\").doc(Users[0].id)\r\n            .update({\r\n               FirstName: FirstName,\r\n               LastName: LastName,\r\n               NRIC: NRIC,\r\n               Address: Address,\r\n               DOB: DOB,\r\n               Email: Email.toLowerCase(),\r\n               Telephone: Telephone\r\n            })\r\n            .then(() => {\r\n               submitUpdate()\r\n            })\r\n      }catch(error){\r\n         setError(error.message);\r\n      }\r\n      setEnableFields(true);\r\n      setUpdateEnabled(true);\r\n      setEditEnabled(false);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n            {Users.map(user => \r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">My Profile</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.FirstName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.LastName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.NRIC} \r\n                        disabled = {true} \r\n                        onChange={(e) => setNRIC(e.target.value)}\r\n                        pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Address} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.DOB} \r\n                        disabled = {true}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Email} \r\n                        disabled = {true} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Telephone} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <Button onClick={onEdit} disabled = {editEnabled} className=\"w-100 my-2\">Edit</Button>\r\n                     <Button disabled = {updateEnabled} className=\"w-100 my-2\" type=\"submit\">Update</Button>\r\n                     <Button href = {`${path}`} disabled = {updateEnabled} className=\"w-100 my-2\">Cancel</Button>\r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n            )}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyProfilePageUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PHomepageUI.js",["1069","1070","1071","1072","1073","1074"],"import React,{useState} from 'react'\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction PHomepageUI() {\r\n    const { currentUser } = useAuth();\r\n\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n    return (\r\n        <div>\r\n            <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Users.map(user => <h1> Hello {user.FirstName } {user.LastName},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Medical Profile</h5>\r\n                                    <p className=\"card-text\">View your past medical visits, medical reports, bill receipts, medical prescriptions, Medical certificates and more!</p>\r\n                                    <a onClick={() => {window.location.href=\"/Patient/MedicalProfile\"}} className=\"btn btn-primary\">View Medical Profiles</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Appointment</h5>\r\n                                <p className=\"card-text\">View all our appointment records here! You can Book a new appointment, Reschedule or Cancel any existing appointments here.</p>\r\n                                <a onClick={() => {window.location.href=\"/Patient/Appointment\"}} className=\"btn btn-primary\">View / Amend Appointments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1520223297779-95bbd1ea79b7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MzN8fHByb2ZpbGV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">My Profile</h5>\r\n                                <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                <a onClick={() => {window.location.href=\"/Patient/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-5 col-sm-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Educational</h5>\r\n                                    <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                    <a onClick={() => {window.location.href=\"/Patient/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"200px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Doctor Profile</h5>\r\n                                <p className=\"card-text\">Search from a list of our healthcare doctors to learn more about them to help plan for your next appointments!</p>\r\n                                <a onClick={() => {window.location.href=\"/Patient/searchDoctor\"}} className=\"btn btn-primary\">Search Doctors</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PHomepageUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ResAppointmentUI.js",["1075"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ResAppointmentUI() {\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {Appointment} = state;         // save appointment data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [doctor, setDoctor] = useState([]);               // store doctor data\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Name\", \"==\", String(Appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const confirmReScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\");\r\n      if(date === \"\" || selectedSlot === \"\")\r\n      {\r\n          return setError(\"Date Or Timeslot Not Selected\");\r\n      }\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(Appointment.id).update({\r\n            Date : date,\r\n            Timeslot: selectedSlot,\r\n        })\r\n        .then(() => {\r\n            confirmReScheduleAlert()\r\n        })\r\n\r\n        // Send email to user\r\n        let details = {\r\n            date: date,\r\n            doctor: doct.Name,\r\n            timeslot: selectedSlot,\r\n            user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n            email: currentUser.email,\r\n            department: doct.Department\r\n        };\r\n        let response = await fetch(\"http://localhost:5000/reschedule\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n        });\r\n        let result = await response.json();\r\n        console.log(result.status);\r\n\r\n        history.push(\"/Patient/Appointment\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n\r\n      setSelectedSlot(\"\");\r\n      setDate(\"\");\r\n }\r\n\r\n    // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n    // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n    const doct = {...doctor[0]};\r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(doct.Email === appointments[j].DocEmail)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n    \r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title>Reschedule Your Appointment</Card.Title>\r\n                    <Card.Title>Your Doctor</Card.Title>\r\n                    <Card.Img variant=\"top\" src={doct.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{doct.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {doct.Department}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/Patient/Appointment'}>\r\n                    <Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMyMPUI.js",["1076"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card,  Container } from \"react-bootstrap\";\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMyMPUI() {\r\n   const {currentUser} = useAuth();\r\n   const [medDocs, setMedDocs] = useState([]);\r\n\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Medical Documents\")\r\n         .where(\"PatientEmail\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n\r\n    return (\r\n       <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n         <Container>\r\n            <Card>\r\n               <Card.Title className=\"text-center\" style={{\r\n                  fontSize : \"2rem\",\r\n                  marginTop: \"2%\"\r\n               }}>View Your Medical Documents</Card.Title>\r\n               <Card.Title style={{\r\n                  marginTop: \"4%\",\r\n                  marginLeft: '2%',\r\n                  fontSize: '1.5rem',\r\n               }}>List of Documents</Card.Title>\r\n               <hr style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft: \"1.5%\",\r\n                }}/>\r\n                {medDocs.map(doc =>\r\n                <Card style={{\r\n                   maxWidth: \"40rem\",\r\n                   marginLeft: \"1.5%\",\r\n                   marginTop: \"1%\"\r\n                }}>\r\n                   <Card.Header as=\"h5\">Date of Visit : {doc.DateOfVisit}</Card.Header>\r\n                   <Card.Body>\r\n                     {doc.MedicalCertificate === \"\" ?\r\n                   <Card.Title>MC issued : No</Card.Title>: <Card.Title>MC issued : Yes</Card.Title>}\r\n                   <Link to={{\r\n                        pathname: '/Patient/ViewMedicalProfile', \r\n                        state:{document: doc}\r\n            }}><Button style={{\r\n                      marginTop: \"3%\",\r\n                   }}>View Medical Document</Button></Link>\r\n                   </Card.Body>\r\n                </Card>\r\n                )}\r\n            </Card>\r\n         </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ViewMyMPUI","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\userAppointmentUI.js",["1077","1078","1079","1080","1081","1082","1083","1084"],"import React, { Component, useState } from 'react';\r\nimport {Container, Card, Button, Row} from \"react-bootstrap\";\r\nimport { useAuth } from '../util/Auth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { firestore } from '../firebase';\r\nimport './UserAppointmentUI.css';\r\nimport moment from 'moment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\n\r\nfunction UserAppointmentUI() {\r\n\r\n  const{currentUser} = useAuth();\r\n  const [Email, setEmail] = useState(\"\"); \r\n  const [Users, setUsers] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const doctor = { Name : \"\"};\r\n  const [toggleState, setToggleState] = useState(1);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const toggleTab = (index) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    const fetchData = async () =>{\r\n       firestore.collection(\"Users\")\r\n       .where(\"Email\", \"==\", String(currentUser.email))\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n             setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n\r\n       firestore.collection(\"Appointment\")\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n          setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n\r\n       firestore.collection(\"Medical Doctors\")\r\n       .get()\r\n       .then(function(data){\r\n          console.log(data)\r\n          setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n       }); \r\n    };\r\n    fetchData();\r\n }, [])\r\n\r\n const filteredAppointments = appointments.filter(app =>{\r\n    if(app.PatientEmail === currentUser.email)\r\n        return app;\r\n })\r\n\r\n const filterUpcoming = filteredAppointments.filter(app =>{\r\n    let today = moment(date).format('MMMM Do YYYY');\r\n    let appDate = moment(app.Date).format('MMMM Do YYYY');\r\n    return appDate >= today;\r\n })\r\n\r\n const filterPast = filteredAppointments.filter(app =>{\r\n  let today = moment(date).format('MMMM Do YYYY');\r\n  let appDate = moment(app.Date).format('MMMM Do YYYY');\r\n  return appDate < today;\r\n})\r\n\r\n  return (\r\n    <div>\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n      <Container className= \"w-100\">\r\n        <Card>\r\n          <Card.Title className = \"my-3 px-5\">{Users.map(user => <h4>{user.FirstName } {user.LastName}</h4>)}\r\n          <div className = \"col text-right\">\r\n          <Link to={{\r\n                        pathname: 'bookAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button type=\"submit\">Book New Appointment</Button></Link>\r\n              </div>\r\n              </Card.Title>\r\n          </Card>\r\n        </Container>\r\n        <Container className = \"my-5 w-100\">\r\n        <Card>\r\n          <div className=\"bloc-tabs\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Upcoming\r\n        </button>\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Past\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div\r\n          className={toggleState === 1 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <h2>Your Upcoming Appointments</h2>\r\n          <hr />\r\n          {filterUpcoming.map(app => \r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Doctor : {app.Doctor}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <Link to={{\r\n                        pathname: 'Appointment/Reschedule', \r\n                        state:{Appointment: app}\r\n            }}><Button variant=\"primary\">Reschedule Appointment</Button></Link>\r\n                <Link to={{\r\n                        pathname: 'Appointment/Cancel', \r\n                        state:{Appointment: app}\r\n            }}><Button className = \"mx-4\" variant=\"primary\">Cancel Appointment</Button></Link>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <h2>Your Past Appointments</h2>\r\n          <hr />\r\n          {filterPast.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Doctor : {app.Doctor}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <Link to={{\r\n                        pathname: 'bookAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button variant=\"primary\">Book Again</Button></Link>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n      </Card>\r\n      </Container>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserAppointmentUI\r\n\r\n","C:\\Users\\malla\\Desktop\\project\\src\\User\\ViewHealthArticleUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\CancelAppointmentUI.js",["1085","1086","1087","1088"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction CancelAppointmentUI() {\r\n   const {state} = useLocation();              // access appointment passed from link router\r\n   const {Appointment} = state;                // save appointment data from state\r\n   const [error, setError] = useState(\"\");     // store error message\r\n   const { currentUser } = useAuth();\r\n   const history = useHistory();\r\n\r\n   const cancelAppointmentAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your appointment has been cancelled successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\");\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(Appointment.id).delete()\r\n         .then(() => {\r\n            cancelAppointmentAlert()\r\n         })\r\n\r\n         // Send email to user\r\n         let details = {\r\n            date: Appointment.Date,\r\n            doctor: Appointment.Doctor,\r\n            timeslot: Appointment.Timeslot,\r\n            user: Appointment.Patient,\r\n            email: Appointment.PatientEmail\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/cancel\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n\r\n         history.push(\"/Patient/Appointment\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n }\r\n\r\n   return (\r\n      <div>\r\n         <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Cancel Appointment</Card.Title>\r\n                <label class=\"note\">The following appointment will be cancelled:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label className=\"my-2\">Appointment Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Date}\r\n                        type=\"date\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"text\">\r\n                     <Form.Label>Appointment Time Slot</Form.Label>\r\n                     <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Timeslot}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Doctor Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Doctor}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Cancel Appointment</Button>\r\n                <Link to={'/Patient/Appointment'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CancelAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\BookAppointmentUI.js",["1089","1090"],"import React,{useState} from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport './UserAppointmentUI.css';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction BookAppointmentUI() {\r\n\r\n    const {state} = useLocation();\r\n    const {doctor} = state;\r\n    const {currentUser} = useAuth();\r\n    const [Users, setUsers] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    return (\r\n        <div>\r\n           <IdleTimerContainer></IdleTimerContainer>\r\n              {Users.map(user => \r\n              <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n              <Card>\r\n               <Card.Body>\r\n                   <h2 className= \"text-center mb-4\">Book a new appointment</h2>\r\n                   <label class=\"note\">Note: You may choose a doctor of your choice or click next without selecting a doctor</label>\r\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                   <Form>\r\n                       <Form.Group id = \"FirstName\">\r\n                          <Form.Label>First Name</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.FirstName} \r\n                          disabled = {true} \r\n                          pattern = \"^[a-z A-Z]+$\"\r\n                          title = \"Please enter character in the range a-z OR A-Z\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"LastName\">\r\n                          <Form.Label>Last Name</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.LastName} \r\n                          disabled = {true} \r\n                          pattern = \"^[a-z A-Z]+$\"\r\n                          title = \"Please enter character in the range a-z OR A-Z\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"NRIC\">\r\n                          <Form.Label>NRIC</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.NRIC} \r\n                          disabled = {true} \r\n                          pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                          title = \"Please enter according to NRIC format\"\r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Address\">\r\n                          <Form.Label>Address</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Address} \r\n                          disabled = {true} \r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"DOB\">\r\n                          <Form.Label>Date Of Birth</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.DOB} \r\n                          disabled = {true}\r\n                          max={moment().format(\"YYYY-MM-DD\")}\r\n                          type=\"date\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Email\">\r\n                          <Form.Label>Email Address</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Email} \r\n                          disabled = {true} \r\n                          type=\"email\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Telephone\">\r\n                          <Form.Label>Telephone</Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {user.Telephone} \r\n                          disabled = {true} \r\n                          pattern = \"[0-9]{8}\"\r\n                          title = \"Please enter 8 digits\"\r\n                          type=\"invalid\" required/>\r\n                       </Form.Group>\r\n                       <Form.Group id = \"Doctor\">\r\n                          <Form.Label><Link to= {\"/Patient/searchDoctor\"}>Select A Doctor Here</Link></Form.Label>\r\n                          <Form.Control \r\n                          defaultValue = {doctor.Name} \r\n                          disabled = {true} \r\n                          type=\"text\" required/>\r\n                       </Form.Group>\r\n                       <Link to={{\r\n                        pathname: '/Patient/scheduleAppointment/', \r\n                        state:{doctor: doctor}\r\n            }}><Button className=\"w-100 my-2\" type=\"submit\">Next</Button></Link>\r\n                   </Form>\r\n               </Card.Body>\r\n              </Card>\r\n              </div>\r\n              </Container>\r\n              )}\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default BookAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewIndividualMPUI.js",["1091","1092","1093","1094","1095","1096","1097"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\n\r\nfunction ViewIndividualMPUI() {\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Medical Document</h2>\r\n             <Card.Body>\r\n                <Form>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select \r\n                        value = {document.prescriptions}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.prescriptions.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select \r\n                        value = {document.LabTests}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.LabTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewMC', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewReceipt', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View Receipt</Button></Link>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewIndividualMPUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorProfile.js",["1098"],"import React, { Component } from 'react'\r\nimport {withRouter, Link} from \"react-router-dom\";\r\nimport {Accordion, Card, Button} from \"react-bootstrap\"\r\nimport PatientComment from './PatientComment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nclass DoctorProfile extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            doctor: {},\r\n            isLoaded : false,\r\n            showComments: false,\r\n            comments: []\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('doctor')){\r\n                this.setState({\r\n                    doctor: this.props.location.state.doctor\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            return (      \r\n              <div>\r\n                  <IdleTimerContainer></IdleTimerContainer>\r\n                    <div className=\"card w-100\">\r\n                        <div className=\"row no-gutters\">\r\n                        <div className=\"col-auto\">\r\n                            <img src={this.state.doctor.Image} width={300} heigth={250} className=\"img-fluid\" alt=\"\"/>\r\n                        </div>\r\n            <div className=\"col text-center w-75 \">\r\n                <div className=\"card-block px-2\">\r\n                    <h1 className=\"card-title text-center text-muted\">{this.state.doctor.Name}</h1>\r\n                    <p className=\"card-title text-center text-muted\">{this.state.doctor.Specialist}</p>\r\n                    <p className=\"card-text text-center text-muted\">Department : {this.state.doctor.Department}</p>\r\n                    <Link to={{\r\n                   pathname: '/Patient/bookAppointment', \r\n                   state:{doctor: this.state.doctor}\r\n            }}><a href=\"\" className=\"btn btn-primary \">Book Appointment</a></Link>\r\n                    {/* <a href=\"/Patient/appointmentForm\" className=\"btn btn-primary \">Book Appointment</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{backgroundColor:\"#E5E5E5\"}} className=\"card-footer w-100 text-muted\">\r\n            Your Health is our priority\r\n        </div>\r\n  </div>\r\n                    <div>\r\n                        <hr style={{\r\n                                color: \"#eee\",\r\n                                height: \"1px\"\r\n                            }}/>\r\n                    </div>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                         <h4><b>BIOGRAPHY</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body style={{backgroundColor:\"#fff\"}}>{this.state.doctor.Information}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/2987/2987903.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        <h4><b>QUALIFICATION</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>{this.state.doctor.Education}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n            \r\n                    <PatientComment email={this.state.doctor.Email} id = {this.state.doctor.id} /> \r\n                           \r\n                                      \r\n          </div>                                      \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n  }                  \r\n\r\nexport default withRouter(DoctorProfile)\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchDoctor.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewMC.js",["1099","1100"],"import React,{useState} from 'react';\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { auth, firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\n\r\nfunction ViewMC() {\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    const doctor = {...doc[0]};\r\n    return (\r\n        <div className=\"text-center\">\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            {document.MedicalCertificate === \"\" ? <h1>NO MEDICAL CERTIFICATE</h1> : \r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{document.Patient}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {document.MedicalCertificate} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {document.MCStartDate} and is valid till {document.MCEndDate}</Card.Text>\r\n            <Card.Img src={doctor.Signature}\r\n            style={{maxWidth:\"5%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"77%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '14%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMC\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ScheduleAppointmentUI.js",["1101","1102","1103"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ScheduleAppointmentUI() {\r\n\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {doctor} = state;         // save doctor data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [docGPs, setDocGPs] = useState([]);              // store general practitioners\r\n    const [docGP, setDocGP] = useState({...doctor});\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Department\", \">=\", \"General Practitioner (Non-specialist)\")\r\n            .where(\"Department\", \"<=\", \"General Practitioner (Non-specialist)\\uF7FF\")\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDocGPs(data.docs.map(doc => ({ ...doc.data(), id: doc.id}))); \r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const confirmScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been booked successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     //handle submit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        if(date === \"\" || selectedSlot === \"\")\r\n        {\r\n            return setError(\"Date Or Timeslot Not Selected\");\r\n        }\r\n        if(docGP.Name === \"\")\r\n        {\r\n            return setError(\"No Doctor was selected!\");\r\n        }\r\n\r\n        try{\r\n            await firestore.collection(\"Appointment\").add({\r\n                Date : date,\r\n                Doctor : docGP.Name,\r\n                Timeslot : selectedSlot,\r\n                Patient : Users[0].FirstName + \" \" + Users[0].LastName,\r\n                PatientEmail : currentUser.email,\r\n                DocEmail : docGP.Email,\r\n                DocCreated : false\r\n            })\r\n            .then(() => {\r\n                confirmScheduleAlert()\r\n            })\r\n            \r\n            // Send email to user\r\n            let details = {\r\n                date: date,\r\n                doctor: docGP.Name,\r\n                timeslot: selectedSlot,\r\n                user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n                email: currentUser.email,\r\n                department: docGP.Department\r\n            };\r\n            let response = await fetch(\"http://localhost:5000/book\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify(details)\r\n            });\r\n            let result = await response.json();\r\n            console.log(result.status);\r\n\r\n            history.push(\"/Patient/Appointment\");\r\n\r\n          } catch(error){\r\n             return setError(error.message);\r\n          }\r\n        setSelectedSlot(\"\");\r\n        setDate(\"\");\r\n   }\r\n\r\n   //select a random doctor on click\r\n   const selectDoc = (e) => {\r\n       if(doctor.Name === \"\")\r\n            setDocGP({...docGPs[Math.floor(Math.random()*docGPs.length)]});\r\n   }\r\n\r\n     // declare and initialize timeslot array for everyday\r\n      const times = [\"08:00 AM - 09:00 AM\",\r\n      \"09:00 AM - 10:00 AM\",\r\n      \"10:00 AM - 11:00 AM\",\r\n      \"11:00 AM - 12:00 PM\",\r\n      \"01:00 PM - 02:00 PM\",\r\n      \"02:00 PM - 03:00 PM\",\r\n      \"04:00 PM - 05:00 PM\",\r\n      \"05:00 PM - 06:00 PM\",\r\n      \"07:00 PM - 08:00 PM\"\r\n    ];\r\n\r\n    // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n    \r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(docGP.Name === appointments[j].Doctor)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n    \r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            {doctor.Name === \"\" ?(\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title>You did not select a doctor therefore a gerneral practitioner will be assigned to you. Click below to view your assigned doctor.</Card.Title>\r\n                        <Button onClick = {selectDoc} className=\"w-100 my-2\">View my doctor</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Container>\r\n                {docGP.Name !== \"\" ?(\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                    <Card.Img variant=\"top\" src={docGP.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{docGP.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {docGP.Department}\r\n                        </Card.Text>\r\n                        <Link to={{pathname: '/Patient/doctorProfile/'+docGP.id, state:{doctor: docGP}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Container>\r\n                ): \"\"}\r\n            </div>\r\n            ): (\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card >\r\n                    <Card.Title>Doctor Selected</Card.Title>\r\n                    <Card.Img variant=\"top\" src={docGP.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{docGP.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {docGP.Department}\r\n                        </Card.Text>\r\n                        <Link to={{pathname: '/Patient/doctorProfile/'+docGP.id, state:{doctor: docGP}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            )}\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Confirm</Button>\r\n                <Link to={{\r\n                        pathname: '/Patient/bookAppointment', \r\n                        state:{doctor: doctor}\r\n            }}><Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ResAppointmentUI.js",["1104"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { firestore } from '../firebase';\r\nimport \"../Patient/ScheduleAppointment.css\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction ResAppointmentUI() {\r\n    const {state} = useLocation();  //access doctor passed from link router\r\n    const {appointment} = state;         // save appointment data from state\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [Users, setUsers] = useState([]);                // store patient data\r\n    const [doctor, setDoctor] = useState([]);               // store doctor data\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\", \"==\", String(appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n                console.log(data)\r\n                setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n      //handle submit\r\n   const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if(date === \"\" || selectedSlot === \"\")\r\n    {\r\n        return setError(\"Date Or Timeslot Not Selected\");\r\n    }\r\n\r\n    try{\r\n       await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n          Date : date,\r\n          Timeslot: selectedSlot,\r\n      })\r\n      .then(() => {\r\n          confirmReScheduleAlert()\r\n      })\r\n\r\n      // Send email to user\r\n      let details = {\r\n          date: date,\r\n          doctor: doct.Name,\r\n          timeslot: selectedSlot,\r\n          user: Users[0].FirstName + \" \" + Users[0].LastName,\r\n          email: currentUser.email,\r\n          department: doct.Department\r\n      };\r\n      let response = await fetch(\"http://localhost:5000/reschedule\", {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json;charset=utf-8\"\r\n          },\r\n          body: JSON.stringify(details)\r\n      });\r\n      let result = await response.json();\r\n      console.log(result.status);\r\n\r\n      history.push(\"/MedAdm/Schedule\");\r\n    }\r\n    catch(error){\r\n       return setError(error.message);\r\n    }\r\n\r\n    setSelectedSlot(\"\");\r\n    setDate(\"\");\r\n}\r\n\r\n     // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n  // to filter timeslots for the doctor selected in bookAppoinemntUI \r\n  const doct = {...doctor[0]};\r\n  const bookedTimeslots = [];\r\n  \r\n  for(var j = 0; j < appointments.length; j++)\r\n  {\r\n      //get booked timeslots for the doctor on that day\r\n      if(date === appointments[j].Date)\r\n      {\r\n          if(doct.Email === appointments[j].DocEmail)\r\n          {\r\n              bookedTimeslots.push(appointments[j].Timeslot);\r\n          }\r\n      } \r\n  }\r\n\r\n  //remove booked timeslots from times array\r\n  const filteredTimes = times.filter(function(x) { \r\n    return bookedTimeslots.indexOf(x) < 0;\r\n  });\r\n\r\n\r\n     const confirmReScheduleAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <div className=\"text-center\">\r\n                <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Title>Reschedule Your Appointment</Card.Title>\r\n                    <Card.Title>Your Doctor</Card.Title>\r\n                    <Card.Img variant=\"top\" src={doct.Image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{doct.Name}</Card.Title>\r\n                        <Card.Text>\r\n                            {doct.Department}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card> \r\n                </div>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100 mt-3\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/MedAdm/Schedule'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\ViewReceipt.js",["1105","1106"],"import React,{useState} from 'react'\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport {firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewReceipt() {\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    const doctor = {...doc[0]};\r\n    const gst = (document.consultFee+document.prescriptionFee+document.testFee)*0.07\r\n    const grandTotal = (document.consultFee+document.prescriptionFee+document.testFee)+gst\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"my-5\" style={{maxWidth:\"800px\"}}>\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"text-right\" style ={{\r\n                        fontFamily : 'helvetica',\r\n                        color: \"violet\",\r\n                    }}>Receipt</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h4\" className=\"text-center\" style={{\r\n                            fontFamily:\"helvetica\",\r\n                            fontStyle: \"italic\",\r\n                        }}>MyAppointment System</Card.Title>\r\n                        <Card.Title as=\"h5\">Patient Name : {document.Patient}</Card.Title>\r\n                        <Card.Text>Date of Visit : {document.DateOfVisit}</Card.Text>\r\n                        <Card.Text>Appointment ID : {document.appointmentID}</Card.Text>\r\n                        <hr style={{\r\n                            color: 'black',\r\n                            backgroundColor: 'green',\r\n                            height: 1,\r\n                            align: \"right\",\r\n                        }}/>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"lime\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Description</th>\r\n                                <th scope=\"col\" className=\"text-center\">Amount ($ SGD)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {document.consultFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Consulation Fees</td>\r\n                                <td className=\"text-center\">{document.consultFee}</td>\r\n                                </tr>): null}\r\n                                {document.prescriptionFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Prescriptions Fees<br/><ul>{document.prescriptions.map(md=>\r\n                                    <li className=\"ml-4\">{md.label} - ${md.price}</li>)}</ul></td>\r\n                                <td className=\"text-center\">{document.prescriptionFee}</td>\r\n                                </tr>): null}\r\n                                {document.testFee!==0 ? (\r\n                                <tr>\r\n                                <td colSpan=\"3\">Test Fees<br/><ul>{document.LabTests.map(md=>\r\n                                    <li className=\"ml-4\">{md.label} - ${md.price}</li>)}</ul></td>\r\n                                <td className=\"text-center\">{document.testFee}</td>\r\n                                </tr>): null}\r\n                                <tr>\r\n                                <td colSpan=\"3\"style={{fontWeight:\"bolder\"}}>GST 7 %</td>\r\n                                <td style={{fontWeight:\"bolder\"}}className=\"text-center\">{gst.toFixed(2)}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td colSpan=\"3\"style={{fontWeight:\"bolder\",\r\n                                fontSize: \"1.3rem\",\r\n                            }}>Grand Total</td>\r\n                                <td style={{fontWeight:\"bolder\",fontSize:\"1.3rem\"}}className=\"text-center\">{grandTotal.toFixed(2)}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                            <hr className=\"my-1\" style={{\r\n                            color: 'black',\r\n                            backgroundColor: 'green',\r\n                            height: 1,\r\n                            align: \"right\",\r\n                        }}/>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-right\" style={{\r\n                        color:\"violet\"\r\n                    }}>Auto Generated Receipt</Card.Footer>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewReceipt\r\n","C:\\Users\\malla\\Desktop\\project\\src\\util\\MedAdmRoute.js",["1107"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction MedAdmRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to respctive homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/sysadm\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedAdmRoute\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\MAHomepageUI.js",["1108","1109","1110","1111"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction MAHomepageUI() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">My Profile</h5>\r\n                                        <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Schedule</h5>\r\n                                        <p className=\"card-text\">You can view and edit the schedule here</p>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/Schedule\"}} className=\"btn btn-primary\">View / Edit Schedule</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Educational</h5>\r\n                                        <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                        <a onClick={() => {window.location.href=\"/MedAdm/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MAHomepageUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js",["1112","1113","1114","1115"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"../Patient/ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction CancelAppointmentUI() {\r\n    const {state} = useLocation();              // access appointment passed from link router\r\n    const {appointment} = state;                // save appointment data from state\r\n    const [error, setError] = useState(\"\");     // store error message\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n\r\n    const cancelAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been cancelled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n      //handle submit\r\n   const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try{\r\n       await firestore.collection(\"Appointment\").doc(appointment.id).delete()\r\n       .then(() => {\r\n          cancelAppointmentAlert()\r\n       })\r\n\r\n       // Send email to user\r\n       let details = {\r\n          date: appointment.Date,\r\n          doctor: appointment.Doctor,\r\n          timeslot: appointment.Timeslot,\r\n          user: appointment.Patient,\r\n          email: appointment.PatientEmail\r\n       };\r\n       let response = await fetch(\"http://localhost:5000/cancel\", {\r\n          method: \"POST\",\r\n          headers: {\r\n             \"Content-Type\": \"application/json;charset=utf-8\"\r\n          },\r\n          body: JSON.stringify(details)\r\n       });\r\n       let result = await response.json();\r\n       console.log(result.status);\r\n\r\n       history.push(\"/MedAdm/Schedule\");\r\n    }\r\n    catch(error){\r\n       return setError(error.message);\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n         <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Cancel Appointment</Card.Title>\r\n                <label class=\"note\">The following appointment will be cancelled:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label className=\"my-2\">Appointment Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={appointment.Date}\r\n                        type=\"date\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"text\">\r\n                     <Form.Label>Appointment Time Slot</Form.Label>\r\n                     <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={appointment.Timeslot}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Doctor Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={appointment.Doctor}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Cancel Appointment</Button>\r\n                <Link to={'/MedAdm/Schedule'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CancelAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\util\\DoctorRoute.js",["1116"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction DoctorRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Patient\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/Patient\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n      {role === \"System Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/sysadm\"/>)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorRoute\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\createAppointmentUI.js",["1117","1118","1119","1120","1121"],"import React from 'react'\r\nimport {Form, Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass createAppointmentUI extends React.Component\r\n{\r\n   // display UI\r\n   render()\r\n   {\r\n      return (\r\n         <h1>Generate Patient Visit Document Page</h1>\r\n      );\r\n   }\r\n}\r\n \r\n\r\nexport default createAppointmentUI\r\n\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131"],"import React, {useEffect, useState} from 'react'\r\nimport {Form, Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport * as s from './ViewDoctorSchedule.styles';\r\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\n\r\nfunction ViewDoctorScheduleUI()\r\n{\r\n   {/* department dropdown list */}\r\n   const options = [\r\n      {\"id\": 1,\r\n      \"value\": \"Anesthesiology\",\r\n      \"label\": \"Anesthesiology\"\r\n      },\r\n\r\n      {\"id\": 2,\r\n      \"value\": \"Cardiology\", \r\n      \"label\": \"Cardiology\"\r\n      },\r\n\r\n      {\"id\": 3,\r\n      \"value\": \"Dermatology\", \r\n      \"label\": \"Dermatology\"\r\n      },\r\n\r\n      {\"id\": 4,\r\n      \"value\": \"Endocrinology\", \r\n      \"label\": \"Endocrinology\"\r\n      },\r\n\r\n      {\"id\": 5,\r\n      \"value\": \"Gastroenterology\", \r\n      \"label\": \"Gastroenterology\"\r\n      },\r\n\r\n      {\"id\": 6,\r\n      \"value\": \"General Practitioner (Non-specialist)\", \r\n      \"label\": \"General Practitioner (Non-specialist)\"\r\n      },\r\n\r\n      {\"id\": 7,\r\n      \"value\": \"Haematology\", \r\n      \"label\": \"Haematology\"\r\n      },\r\n\r\n      {\"id\": 8,\r\n      \"value\": \"Immunology\", \r\n      \"label\": \"Immunology\"\r\n      },\r\n\r\n      {\"id\": 9,\r\n      \"value\": \"Infectious Diseases\", \r\n      \"label\": \"Infectious Diseases\"\r\n      },\r\n\r\n      {\"id\": 10,\r\n      \"value\": \"Neurology\", \r\n      \"label\": \"Neurology\"\r\n      },\r\n\r\n      {\"id\": 11,\r\n      \"value\": \"Oncology\", \r\n      \"label\": \"Oncology\"\r\n      },\r\n\r\n      {\"id\": 12,\r\n      \"value\": \"Orthopaedic\", \r\n      \"label\": \"Orthopaedic\"\r\n      },\r\n\r\n      {\"id\": 13,\r\n      \"value\": \"Psychiatry\", \r\n      \"label\": \"Psychiatry\"\r\n      },\r\n\r\n      {\"id\": 14,\r\n      \"value\": \"Rheumatology\", \r\n      \"label\": \"Rheumatology\"\r\n      },\r\n\r\n      {\"id\": 15,\r\n      \"value\": \"Urology\", \r\n      \"label\": \"Urology\"\r\n      }\r\n   ];\r\n\r\n   const currentDate = new Date();\r\n\r\n   // State ------------------------------------------\r\n   const [selectedOptions, setSelectedOptions] = useState([]);\r\n   const [startDate, setStartDate] = useState(new Date());\r\n   const [appointments, setAppointments] = useState([]);\r\n   const [doctor, setDoctor] = useState([]);\r\n\r\n   // Effect ---------------------------------------\r\n   useEffect(() => {\r\n      setSelectedOptions([{label: \"All\", value: \"*\"}, ...options]);\r\n   }, []);\r\n\r\n   // convert 12hr clock to 24hour clock\r\n   const convertTime12to24 = time12h => {\r\n      const [time, modifier] = time12h.split(\" \");\r\n     \r\n      let [hours, minutes] = time.split(\":\");\r\n     \r\n      if (hours === \"12\") {\r\n        hours = \"00\";\r\n      }\r\n     \r\n      if (modifier === \"PM\") {\r\n        hours = parseInt(hours, 10) + 12;\r\n      }\r\n     \r\n      return `${hours}:${minutes}`;\r\n   };\r\n\r\n   // Retrieve Data from Firebase\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         firestore.collection(\"Appointment\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n         firestore.collection(\"Medical Doctors\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         })\r\n      };\r\n      fetchData();\r\n   }, []);\r\n\r\n   const handleDeptChange = (value) => {\r\n      this.props.onSelectDepartment(value);\r\n   }\r\n\r\n   function onChange (value, event) {\r\n      if (event.action === \"select-option\" && event.option.value === \"*\") {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\r\n          this.setState([]);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\") {\r\n          this.setState(value.filter((o) => o.value !== \"*\"));\r\n      }\r\n\r\n      else if (value.length === this.options.length - 1) {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else {\r\n          this.setState(value);\r\n      } \r\n\r\n   }\r\n\r\n   // filter and sort array\r\n   const filterList = [...selectedOptions]\r\n                     .sort((a, b) => a.value > b.value ? 1 : -1)\r\n                     .map((item) => item.value )\r\n                     .filter((item) => item !== \"*\");\r\n\r\n   var appList = [];\r\n\r\n   // Get Appointment\r\n   for (var i = 0; i < filterList.length; i++)\r\n   {\r\n      if (i === 0)\r\n      {\r\n         appList = [];\r\n      }\r\n\r\n      appList.push(<s.departmentHeader> {filterList[i]} </s.departmentHeader>);\r\n\r\n      for (var a = 0; a < doctor.length; a++)\r\n      {\r\n         var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n         if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n         {\r\n            appList.push(<h4> {doctor[a].Name} </h4>)\r\n            var tempAppointment = [...appointments]\r\n                              .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                              .filter((item) => item.DocEmail === doctor[a].Email)\r\n                              .sort((a, b) => convertTime12to24(a.Timeslot.substring(0, 8)) > convertTime12to24(b.Timeslot.substring(0, 8)) ? 1 : -1)\r\n            \r\n            for (var b = 0; b < tempAppointment.length; b++)\r\n            {\r\n               if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n               {\r\n                  appList.push(<s.appCard>\r\n                                 <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                                 <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                                 <Link to = {{pathname: '/MedAdm/Reschedule/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Reschedule </s.resButton></Link>\r\n                                 &nbsp; &nbsp; &nbsp; \r\n                                 <Link to = {{pathname: '/MedAdm/Cancel/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Cancel </s.resButton></Link>\r\n                              </s.appCard>\r\n                              )\r\n               }\r\n\r\n               else \r\n               {\r\n                  appList.push(<s.appCard>\r\n                     <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                     <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                  </s.appCard>\r\n                  )\r\n               }\r\n            }\r\n            \r\n            appList.push(<br />)\r\n         }\r\n      }\r\n\r\n      appList.push(<hr/>)\r\n   }\r\n\r\n\r\n   const sendReminder = async (e) =>\r\n   {\r\n      if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n      {\r\n         for (var i = 0; i < filterList.length; i++)\r\n         {\r\n            if (i === 0)\r\n            {\r\n               appList = [];\r\n            }\r\n\r\n            for (var a = 0; a < doctor.length; a++)\r\n            {\r\n               var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n               if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n               {\r\n                  var tempAppointment = [...appointments]\r\n                                    .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                                    .filter((item) => item.DocEmail === doctor[a].Email);\r\n                  \r\n                  for (var b = 0; b < tempAppointment.length; b++)\r\n                  {\r\n                     // Send email to user\r\n                     let details = {\r\n                        date: tempAppointment[b].Date,\r\n                        doctor: tempAppointment[b].Doctor,\r\n                        timeslot: tempAppointment[b].Timeslot,\r\n                        user: tempAppointment[b].Patient,\r\n                        email: tempAppointment[b].PatientEmail,\r\n                        department: doctor[a].Department\r\n                     };\r\n                     let response = await fetch(\"http://localhost:5000/sendReminder\", {\r\n                           method: \"POST\",\r\n                           headers: {\r\n                              \"Content-Type\": \"application/json;charset=utf-8\"\r\n                           },\r\n                           body: JSON.stringify(details)\r\n                     });\r\n                     let result = await response.json();\r\n                     console.log(result.status);\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         alert (\"Reminder Send\");\r\n      }\r\n\r\n      else\r\n      {\r\n         alert(\"Unable to Send Reminder to Past Appointment\");\r\n      }\r\n\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         {/* department selection*/}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Department:</s.headerLabel>\r\n            <ReactMultiSelectCheckboxes \r\n            options={[{label: \"All\", value: \"*\"}, ...options]}\r\n            value={selectedOptions}\r\n            onChange={onChange}\r\n            setState={setSelectedOptions}/>\r\n         </div>\r\n         <br />\r\n\r\n         {/* date selection */}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Date:</s.headerLabel>\r\n            <DatePicker \r\n            todayButton=\"Navigate to Today\"\r\n            selected={startDate} \r\n            onChange={date => setStartDate(date)}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            cursor= \"pointer\"\r\n            />\r\n         </div>\r\n         <br/>\r\n\r\n         {/* Send Reminder Button */}\r\n         <s.newButton onClick={sendReminder}> Send Reminder </s.newButton>\r\n         &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n         <br/> <br/>\r\n         <s.docSchedule>\r\n            <h3> Date: {startDate.toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'}).replace(/ /g, '-')} </h3>\r\n            <br/>\r\n            {/*display doctor schedule*/}\r\n            <div style={{backgroundColor:\"#488AC7\"}}>\r\n               {appList.map(item => (\r\n                  <s.appDetails>\r\n                  {item}\r\n                  </s.appDetails>\r\n               ))}\r\n            </div>\r\n         </s.docSchedule>\r\n      </div>\r\n   );\r\n}\r\n \r\n\r\nexport default ViewDoctorScheduleUI","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MDHomepageUI.js",["1132","1133","1134","1135","1136"],"import React,{useState} from 'react'\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction MDHomepageUI() {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    const [Doctors, setDoctors] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Doctors.map(doc => <h1> Hello {doc.Name},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\"><div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Patient Profile</h5>\r\n                                    <p className=\"card-text\">You can view the patient profile and their past medical records here</p>\r\n                                    <a onClick={() => {window.location.href=\"/MedDoc/PatientProfile\"}} className=\"btn btn-primary\">View Patient Profiles</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1606852837335-046eed58c3cd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Schedule</h5>\r\n                                <p className=\"card-text\">You can view and edit the schedule here</p>\r\n                                <a onClick={() => {window.location.href=\"/MedDoc/Schedule\"}} className=\"btn btn-primary\">View / Edit Schedule</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-5 col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Educational</h5>\r\n                                    <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                    <a onClick={() => {window.location.href=\"/MedDoc/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\" >\r\n                            <img src=\"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fG1lZGljYWx8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                            className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">My Profile</h5>\r\n                                <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                <a onClick={() => {window.location.href=\"/MedDoc/myProfile\"}} className=\"btn btn-primary\">View / Edit profile</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MDHomepageUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMPUI.js",["1137","1138","1139","1140","1141","1142","1143","1144","1145"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMPUI() {\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    //usestates\r\n    const[doctor, setDoctor] = useState([]);\r\n    const[medDocs, setMedDocs] = useState([]);\r\n    const[Reason, setReason] = useState(\"\");\r\n    const[LabResult, setLabResult] = useState(\"\");\r\n    const[ConsultFee, setConsultFee] = useState(0);\r\n    const[PrescriptionFee, setPrescriptionFee] = useState(0);\r\n    const [error, setError] = useState(\"\");                \r\n    const [MCDisabled, setMCDisabled] = useState(true);\r\n    const [btnDisabled, setBtnDisabled] = useState(false);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTests, setMedTests] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\",\"==\",String(appointment.DocEmail))\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n\r\n    const doc = {...doctor[0]};\r\n\r\n    const MDAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Medical document has been created successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        if(medDocs && medDocs.length)\r\n        {\r\n            return setError(\"This medical document has already been created\");\r\n        }\r\n\r\n        let cFee = 0;\r\n        if(doc.Department.includes(\"General Practitioner\"))\r\n            cFee = 50;\r\n        else\r\n            cFee = 100;\r\n\r\n        let pFees = 0, tFees = 0;\r\n        for(var i = 0; i < medicines.length; i++)\r\n        {\r\n            pFees += medicines[i].price;\r\n        }\r\n        for(var i = 0; i < medTests.length; i++)\r\n        {\r\n            tFees += medTests[i].price;\r\n        }\r\n        try{\r\n            await firestore.collection(\"Medical Documents\").add({\r\n                appointmentID: appointment.id,\r\n                Patient: appointment.Patient,\r\n                PatientEmail: appointment.PatientEmail,\r\n                DocEmail: appointment.DocEmail,\r\n                Reason: Reason,\r\n                DateOfVisit: appointment.Date,\r\n                LabResults: LabResult,\r\n                prescriptions: medicines,\r\n                LabTests : medTests,\r\n                consultFee: parseFloat(cFee),\r\n                prescriptionFee: parseFloat(pFees),\r\n                testFee: parseFloat(tFees),\r\n                MedicalCertificate: \"\"\r\n            })\r\n            await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n                DocCreated : true\r\n            })\r\n            .then(() => {\r\n                MDAlert()\r\n            })\r\n          } catch(error){\r\n             return setError(error.message);\r\n          }\r\n            setReason(\"\");\r\n            setLabResult(\"\");\r\n            setMedicines([]);\r\n            setMedTests([]);\r\n            setConsultFee(0);\r\n            setPrescriptionFee(0);\r\n            setMCDisabled(false);\r\n            setBtnDisabled(true);\r\n    }\r\n\r\n    const drugList = [\r\n        { label: 'Medicine1', value: 'Medicine1', price: 10 },\r\n        { label: 'Medicine2', value: 'Medicine2', price: 10 },\r\n        { label: 'Medicine3', value: 'Medicine3', price: 10 },\r\n        { label: 'Medicine4', value: 'Medicine4', price: 10 },\r\n        { label: 'Medicine5', value: 'Medicine5' , price: 10},\r\n        { label: 'Medicine6', value: 'Medicine6' , price: 10},\r\n        { label: 'Medicine7', value: 'Medicine7', price: 10 },\r\n        { label: 'Medicine8', value: 'Medicine8', price: 10 },\r\n        { label: 'Medicine9', value: 'Medicine9', price: 10 },\r\n        { label: 'Medicine10', value: 'Medicine10', price: 10 },\r\n        { label: 'Medicine11', value: 'Medicine11' , price: 10},\r\n        { label: 'Medicine12', value: 'Medicine12' , price: 10},\r\n        { label: 'Medicine13', value: 'Medicine13', price: 10 },\r\n        { label: 'Medicine14', value: 'Medicine14', price: 10 },\r\n        { label: 'Medicine15', value: 'Medicine15', price: 10 },\r\n        { label: 'Medicine16', value: 'Medicine16', price: 10 },\r\n        { label: 'Medicine17', value: 'Medicine17' , price: 10},\r\n        { label: 'Medicine18', value: 'Medicine18' , price: 10},\r\n        { label: 'Medicine19', value: 'Medicine19', price: 10 },\r\n        { label: 'Medicine20', value: 'Medicine20', price: 10 },\r\n        { label: 'Medicine21', value: 'Medicine21', price: 10 },\r\n        { label: 'Medicine22', value: 'Medicine22', price: 10 },\r\n        { label: 'Medicine23', value: 'Medicine23' , price: 10},\r\n        { label: 'Medicine24', value: 'Medicine24' , price: 10},\r\n      ];\r\n\r\n      const medicalTests = [\r\n        { label: 'Blood Test', value: 'Blood Test', price: 100 },\r\n        { label: 'X Ray Scan', value: 'X Ray Scan', price: 120 },\r\n        { label: 'MRI Scan', value: 'MRI Scan', price: 220 },\r\n        { label: 'Brain Scan', value: 'Brain Scan', price: 120 },\r\n        { label: 'CT Scan', value: 'CT Scan', price: 220 },\r\n        { label: 'Kidney Function Test', value: 'Kidney Function Test', price: 150 },\r\n        { label: 'Liver Function Test', value: 'Liver Function Test', price: 150 },\r\n        { label: 'Malabsorption Test', value: 'Malabsorption Test' , price: 80},\r\n        { label: 'Pregnancy Test', value: 'Pregnancy Test' , price: 50 },\r\n        { label: 'Syphillis Test', value: 'Syphillis Test', price: 75 },\r\n        { label: 'Toxicology Test', value: 'Toxicology Test', price: 100 },\r\n        { label: 'Urinanalysis', value: 'Urinanalysis', price: 10 },\r\n        { label: 'Mammograhy', value: 'Mammograhy', price: 250 },\r\n        { label: 'Ultrasound', value: 'Ultrasound' , price: 150},\r\n        { label: 'Endoscopy', value: 'Endoscopy' , price: 200},\r\n        { label: 'Skin Test', value: 'Skin Test', price: 200 },\r\n        { label: 'Semen Analysis', value: 'Semen Analysis', price: 100 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Create Medical Document</h2>\r\n             <Card.Body>\r\n             {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {appointment.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {appointment.Date} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        value = {Reason}\r\n                        rows = {3}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select options={drugList}\r\n                        isMulti\r\n                        onChange = {opt => setMedicines(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {medicines.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select options={medicalTests}\r\n                        isMulti\r\n                        onChange = {opt => setMedTests(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {medTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        value = {LabResult}\r\n                        rows = {3}\r\n                        onChange={(e) => setLabResult(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <hr/>\r\n                    <Button disabled = {medDocs.length > 0 || btnDisabled} className=\"w-100 my-2\" type=\"submit\">Create Medical Record</Button>\r\n                    <Link to={{\r\n                        pathname: '/MedDoc/CreateMC', \r\n                        state:{appointment: appointment}\r\n            }}><Button disabled = {!medDocs.length > 0 && MCDisabled} className=\"w-100 my-2\">Create Medical Certificate</Button></Link>\r\n                </Form>\r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMPUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js",["1146"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {useLocation, useHistory} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMedicalRecord() {\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n\r\n    //useStates\r\n    const [allergies, setAllergies] = useState(\"\");\r\n    const [demographics, setDemographics] = useState(\"\");\r\n    const [diagnoses, setDiagnoses] = useState(\"\");\r\n    const [labResults, setLabResults] = useState(\"\");\r\n    const [medicalHistory, setMedicalHistory] = useState(\"\");\r\n    const [vitals, setVitals] = useState(\"\");\r\n    const [error, setError] = useState(\"\"); \r\n    const [medRec, setMedRec] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Records\")\r\n            .where(\"PatientEmail\",\"==\",String(md.PatientEmail))\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedRec(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    \r\n    const cancelAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Your appointment has been cancelled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    const rec = {...medRec[0]};\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        try{\r\n            await firestore.collection(\"Medical Records\").add({\r\n                Allergies : allergies,\r\n                Demographics : demographics,\r\n                Diagnoses : diagnoses,\r\n                LabResults : labResults,\r\n                MedicalHistory : medicalHistory,\r\n                Vitals : vitals,\r\n                Patient : md.Patient,\r\n                PatientEmail : md.PatientEmail,\r\n                AssignedDoc : md.DocEmail\r\n            })\r\n            .then(() => {\r\n                cancelAppointmentAlert()\r\n                history.push(\"/MedDoc/PatientProfile\");\r\n            })\r\n        }\r\n        catch(error){\r\n            return setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            {!rec.PatientEmail ? (\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n                    <Card>\r\n                        <h2 className= \"text-center mb-4 mt-3\">Create Medical Record</h2>\r\n                        <Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id = \"Name\">\r\n                                <Form.Label>Patient Name</Form.Label>\r\n                                <Form.Control \r\n                                    defaultValue = {md.Patient} \r\n                                    disabled = {true} \r\n                                    type=\"text\" required/>\r\n                                </Form.Group>\r\n                                <Form.Group id = \"allergies\">\r\n                                <Form.Label>Allergies</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setAllergies(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"demographics\">\r\n                                <Form.Label>Demographics</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDemographics(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"diagnoses\">\r\n                                <Form.Label>Diagnoses</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDiagnoses(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"labResults\">\r\n                                <Form.Label>Lab Results</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setLabResults(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"medicalHistory\">\r\n                                <Form.Label>Medical History</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setMedicalHistory(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"vitals\">\r\n                                <Form.Label>Vitals</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows = {3}\r\n                                    onChange={(e) => setVitals(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" className=\"w-100 my-2\">Create Medical Record</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n            ):(<h1>Medical Record has already been created</h1>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js",["1147"],"import React,{useState} from 'react'\r\nimport { Card, Container, Button } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction ViewPatientProfileUI() {\r\n    const { currentUser } = useAuth();\r\n    const [patients, setPatients] = useState([]); \r\n    const [PatientRecs, setPatientRecs] = useState([]);\r\n    const [createSearchVal, setCreateSearchVal] = useState(\"\");\r\n    const [viewSearchVal, setViewSearchVal] = useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Documents\")\r\n           .where(\"DocEmail\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatients(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n            firestore.collection(\"Medical Records\")\r\n            .where(\"AssignedDoc\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatientRecs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const arr = []\r\n    const obj = {}\r\n\r\n    for(const string of patients){\r\n        if(!obj[string.PatientEmail]){\r\n            arr.push(string)\r\n            obj[string.PatientEmail] = true\r\n        }\r\n    }\r\n\r\n    let filteredArr = arr.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(createSearchVal)\r\n    })\r\n\r\n    let filteredRec = PatientRecs.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(viewSearchVal)\r\n    })\r\n\r\n    return (\r\n        <div>``\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">Create Medical Records For Patient Seen</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setCreateSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">Create Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredArr.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/CreateMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>Create Record</Button></Link></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            <Container className=\"mt-5\">\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">View Created Medical Records For Patients</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setViewSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">View/Edit/Transfer Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredRec.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/EditMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>View/Edit Record</Button></Link>\r\n                            <Link to={{\r\n                        pathname: '/MedDoc/TransferMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button className = \"mt-2\">Transfer</Button></Link>\r\n                            </td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPatientProfileUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js",["1148","1149","1150"],"import React,{useState} from 'react';\r\nimport {Button, Card, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport \"../Patient/UserAppointmentUI.css\";\r\nimport moment from 'moment';\r\nimport Calendar from 'react-awesome-calendar';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\n\r\n\r\nconst Moment = require('moment')\r\n\r\nconst convertTime12to24 = (time12h) => {\r\n  const [time, modifier] = time12h.split(' ');\r\n\r\n  let [hours, minutes] = time.split(':');\r\n\r\n  if (hours === '12') {\r\n    hours = '00';\r\n  }\r\n\r\n  if (modifier === 'PM') {\r\n    hours = parseInt(hours, 10) + 12;\r\n  }\r\n\r\n  return `${hours}:${minutes}:00`;\r\n}\r\n\r\nfunction ViewAllocatedPatientUI() {\r\n   const [toggleState, setToggleState] = useState(1);\r\n   const [appointments, setAppointments] = useState([]);\r\n   const [doctor, setDoctor] = useState([]);\r\n   const {currentUser} = useAuth();\r\n\r\n   const toggleTab = (index) => {\r\n      setToggleState(index);\r\n    };\r\n\r\n    React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Appointment\")\r\n         .where(\"DocEmail\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n          firestore.collection(\"Medical Doctors\")\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n   //filter upcoming\r\n   const filterUpcoming = appointments.filter(app =>{\r\n    return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) >= new Date();\r\n })\r\n\r\n  //filter past\r\n  const filterPast = appointments.filter(app =>{\r\n    return new Date(app.Date+\" \"+ convertTime12to24(app.Timeslot.substr(11,app.Timeslot.length))) < new Date();\r\n })\r\n\r\n  //sort according to date and timeslot for past in desc order\r\n  const sortedPast = filterPast.sort((a,b) => \r\n  new Date(b.Date + \" \"+ convertTime12to24(b.Timeslot.substr(0,8)))-\r\n  new Date(a.Date + \" \"+ convertTime12to24(a.Timeslot.substr(0,8)))\r\n)\r\n\r\n   // sort according to date and timeslot ascending order\r\n   const sorted = filterUpcoming.sort((a,b) => \r\n      new Date(a.Date + \" \"+ convertTime12to24(a.Timeslot.substr(0,8)))-\r\n      new Date(b.Date + \" \"+ convertTime12to24(b.Timeslot.substr(0,8)))\r\n   )\r\n\r\n   const events = [];\r\n   const doc = {...doctor[0]};\r\n\r\n   // create event array and populate all future appointments\r\n   for(var i = 0; i < sorted.length; i++)\r\n   {\r\n     // convert to match UTC format\r\n     var fromDate = new Date(sorted[i].Date+\" \"+convertTime12to24(sorted[i].Timeslot.substr(0,8)));\r\n     fromDate.setHours(fromDate.getHours()+8);\r\n     var toDate = new Date(sorted[i].Date+\" \"+convertTime12to24(sorted[i].Timeslot.substr(11,sorted[i].Timeslot.length)));\r\n     toDate.setHours(toDate.getHours()+8);\r\n\r\n     // create event object\r\n      const obj = {\r\n        id : sorted[i].id,\r\n        color : '\t#FFA500',\r\n        from : fromDate,\r\n        to : toDate,\r\n        title : sorted[i].Patient+ \" ( \"+sorted[i].Timeslot+\" )\"\r\n      }\r\n\r\n      //push to array\r\n      events.push(obj);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n        <IdleTimerContainer></IdleTimerContainer>\r\n        <Container>\r\n          <Card>\r\n            <div className=\"text-center\">\r\n          <Card.Title className=\"text-center\">Your Schedule</Card.Title>\r\n          <Card.Img variant=\"left\" src={doc.Image} width=\"220px\"/>\r\n            <Card.Title>{doc.Name}</Card.Title>\r\n            </div>\r\n          </Card>\r\n          </Container>\r\n          <Container>\r\n        <Card className=\"my-5\">\r\n        <Calendar\r\n                events={events}\r\n            />\r\n            </Card>\r\n            </Container>\r\n            <Container className = \"my-5 w-100\">\r\n        <Card>\r\n          <div className=\"bloc-tabs\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Upcoming\r\n        </button>\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Past\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div className={toggleState === 1 ? \"content  active-content\" : \"content\"}>\r\n          <h2>Upcoming Patient To See</h2>\r\n          <hr />\r\n          {sorted.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Patient : {app.Patient}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <Link to={{\r\n                        pathname: '/MedDoc/Reschedule', \r\n                        state:{appointment: app}\r\n            }}><Button className = \"mt-2\"variant=\"primary\">Reschedule</Button></Link>\r\n                <div className=\"col text-right\">\r\n                  {!app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/CreateMP', \r\n                        state:{appointment: app}\r\n            }}><Button>Create Medical Document</Button></Link> : null}\r\n            {app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/ViewMP', \r\n                        state:{appointment: app}\r\n            }}><Button>View/Edit Medical Document</Button></Link> : null}\r\n                </div>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n\r\n        <div className={toggleState === 2 ? \"content  active-content\" : \"content\"}>\r\n          <h2>Past Patient Seen</h2>\r\n          <hr />\r\n          {filterPast.map(app =>\r\n          <Card className = \"my-5\">\r\n            <Card.Header as=\"h5\">Date : {moment(app.Date).format('MMMM Do YYYY')}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Patient : {app.Patient}</Card.Title>\r\n                <Card.Text>Booked Time : {app.Timeslot}</Card.Text>\r\n                <div className=\"col text-right\">\r\n                  {!app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/CreateMP', \r\n                        state:{appointment: app}\r\n            }}><Button>Create Medical Document</Button></Link> : null}\r\n            {app.DocCreated ? <Link to={{\r\n                        pathname: '/MedDoc/ViewMP', \r\n                        state:{appointment: app}\r\n            }}><Button>View/Edit Medical Document</Button></Link> : null}\r\n                </div>\r\n            </Card.Body>\r\n          </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n      </Card>\r\n      </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ViewAllocatedPatientUI\r\n\r\n\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\EditMedicalRecord.js",["1151","1152"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction EditMedicalRecord() {\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n    const {path} = useRouteMatch();\r\n\r\n    //useStates\r\n    const [allergies, setAllergies] = useState(\"\");\r\n    const [demographics, setDemographics] = useState(\"\");\r\n    const [diagnoses, setDiagnoses] = useState(\"\");\r\n    const [labResults, setLabResults] = useState(\"\");\r\n    const [medicalHistory, setMedicalHistory] = useState(\"\");\r\n    const [vitals, setVitals] = useState(\"\");\r\n    const [error, setError] = useState(\"\"); \r\n    const [medRec, setMedRec] = useState([]);\r\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n\r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setAllergies(md.Allergies);\r\n        setDemographics(md.Demographics);\r\n        setDiagnoses(md.Diagnoses);\r\n        setLabResults(md.LabResults);\r\n        setMedicalHistory(md.MedicalHistory);\r\n        setVitals(md.Vitals);\r\n    }\r\n\r\n    const medicalRecordUpdatedAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Patient medical record has been updated successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n                Allergies : allergies,\r\n                Demographics : demographics,\r\n                Diagnoses : diagnoses,\r\n                LabResults : labResults,\r\n                MedicalHistory : medicalHistory,\r\n                Vitals : vitals,\r\n            })\r\n            .then(() => {\r\n                medicalRecordUpdatedAlert()\r\n                history.push(\"/MedDoc/PatientProfile\");\r\n             })\r\n        }\r\n        catch(error){\r\n            return setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n                    <Card>\r\n                        <h2 className= \"text-center mb-4 mt-3\">View/Edit Medical Record</h2>\r\n                        <Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id = \"Name\">\r\n                                <Form.Label>Patient Name</Form.Label>\r\n                                <Form.Control \r\n                                    defaultValue = {md.Patient} \r\n                                    disabled = {true} \r\n                                    type=\"text\" required/>\r\n                                </Form.Group>\r\n                                <Form.Group id = \"allergies\">\r\n                                <Form.Label>Allergies</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Allergies}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setAllergies(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"demographics\">\r\n                                <Form.Label>Demographics</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Demographics}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDemographics(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"diagnoses\">\r\n                                <Form.Label>Diagnoses</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Diagnoses}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDiagnoses(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"labResults\">\r\n                                <Form.Label>Lab Results</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.LabResults}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setLabResults(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"medicalHistory\">\r\n                                <Form.Label>Medical History</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.MedicalHistory}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setMedicalHistory(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"vitals\">\r\n                                <Form.Label>Vitals</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Vitals}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setVitals(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                                <Button type=\"submit\" className=\"w-100 my-2\" disabled={fieldsDisabled}>Update Medical Record</Button>\r\n                                <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js",["1153","1154","1155","1156","1157"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {Link, useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction TransferMedicalRecord() {\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [searchDoc, setSearchDoc] = useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     async function transferRecords(email){\r\n        await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n           AssignedDoc : email\r\n        })\r\n        .then(() => {\r\n            alert(\"Transferred Successfully!\");\r\n            history.push(\"/MedDoc/PatientProfile\");\r\n         })\r\n     }\r\n\r\n     let filteredDoc = doctors.filter(doc =>{\r\n         return doc.Name.toLowerCase().includes(searchDoc);\r\n     })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as=\"h3\" className=\"text-center mt-3\"style={{fontWeight:\"bolder\",\r\n                    textDecoration: \"underline\"\r\n                }}>Transfer Medical Record</Card.Title>\r\n                    <Card.Text className=\"mt-4 ml-3\"style={{fontWeight:\"bolder\"}}>Patient Name : {md.Patient}</Card.Text>\r\n                    <Card.Text className=\"ml-3\" style={{fontWeight:\"bolder\"}}>Medical Record ID : {md.id}</Card.Text>\r\n                    <Card.Title as=\"h4\" className=\"text-center mt-3\">Doctor List</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"1%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setSearchDoc(e.target.value)} placeholder = \"Enter Doctor Name...\"/>\r\n                    </div>\r\n                    <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"80vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Doctor</th>\r\n                                <th scope=\"col\" className=\"text-center\">Transfer Medical Record</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredDoc.map(doc => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{doc.Name}</td>\r\n                                <td className=\"text-center\"> <Button onClick={(e)=>transferRecords(doc.Email)}>Transfer Record</Button></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                </Card>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js",["1158","1159","1160","1161","1162","1163"],"import React,{useState} from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport { auth, firestore } from '../firebase';\r\nimport moment from 'moment';\r\n\r\nfunction ViewMedicalCertificate() {\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    const [medDocs, setMedDocs] = useState([]);\r\n    const [doc, setDoc] = useState([]);\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\",\"==\",appointment.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    const document = {...medDocs[0]};\r\n    const doctor = {...doc[0]};\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            {document.MedicalCertificate === \"\" ? <h1>NO MEDICAL CERTIFICATE</h1> : \r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{document.Patient}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {document.MedicalCertificate} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {document.MCStartDate} and is valid till {document.MCEndDate}</Card.Text>\r\n            <Card.Img src={doctor.Signature}\r\n            style={{maxWidth:\"5%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"77%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '14%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMedicalCertificate\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\CreateMC.js",["1164","1165","1166","1167","1168","1169","1170","1171"],"import React,{useState, useRef} from 'react'\r\nimport Popup from \"reactjs-popup\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport \"./CreateMC.css\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\";\r\nimport { auth, firestore, storageRef } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction CreateMC() {\r\n    const{state} = useLocation();\r\n    const{appointment} = state;\r\n    const[noOfDays, setNoOfDays] = useState(1);\r\n    const[doc, setDoc] = useState([]);\r\n    const[document,setDocument] = useState([]);\r\n    const[imageURL, setImageURL] = useState(null);\r\n    const history = useHistory();\r\n    const sigCanvas = useRef({});\r\n    \r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n            .where(\"Email\",\"==\",appointment.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDocument(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData()\r\n    },[])\r\n\r\n    \r\n\r\n    const doctor = {...doc[0]};\r\n    const clear = () => sigCanvas.current.clear();\r\n    let img = doctor.Signature\r\n\r\n    const save = () => {\r\n        setImageURL(sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n        img = imageURL\r\n    }\r\n    \r\n    const startDate = new Date();\r\n    const endDate = new Date(startDate);\r\n    endDate.setDate(endDate.getDate() + (noOfDays-1));\r\n\r\n    const saveToDataBase = async () => {\r\n        await firestore.collection(\"Medical Doctors\").doc(doctor.id).update({\r\n            Signature: imageURL\r\n        })\r\n        .then(() =>{\r\n            alert('Signature has been updated successfully')\r\n        })\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    const saveMC = async () => {\r\n        await firestore.collection(\"Medical Documents\").doc(document[0].id).update({\r\n            MedicalCertificate : noOfDays,\r\n            MCStartDate : moment(startDate).format(\"DD/MM/YYYY\"),\r\n            MCEndDate : moment(endDate).format(\"DD/MM/YYYY\")\r\n        })\r\n        .then(() =>{\r\n            alert(\"Medical Certificate Created Successfully\");\r\n        })\r\n        history.push({\r\n            pathname: \"/MedDoc/Schedule\",\r\n            state: {doctor: doctor}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center mb-4\">Generate MC</Card.Title>\r\n                        <Form>\r\n                            <Form.Group id = \"days\">\r\n                            <Form.Label>Enter Number of Days</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue = \"1\"\r\n                                type=\"number\"\r\n                                min='1'\r\n                                onChange={(e) => setNoOfDays(e.target.value)}\r\n                                required\r\n                            />\r\n                            </Form.Group>\r\n                            <Popup modal\r\n                                trigger={<Button className=\"mt-3 mb-3\">Click To Update Your Digital Signature</Button>}\r\n                                closeOnDocumentClick={false}>\r\n                                    {close => (\r\n                                        <>\r\n                                        <SignaturePad\r\n                                            ref={sigCanvas}\r\n                                            canvasProps={{\r\n                                            className: \"signatureCanvas\"\r\n                                            }}\r\n                                        />\r\n                                    {/* Button to trigger save canvas image */}\r\n                                        <Button onClick={save}>Save</Button>\r\n                                        <Button onClick={clear}>Clear</Button>\r\n                                        <Button onClick={close}>Close</Button>\r\n                                        </>\r\n                                 )}\r\n                                </Popup>\r\n                                <Form.Group>\r\n                                <Card.Img src={imageURL} height=\"200px\"></Card.Img>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Button onClick={(e)=> {saveToDataBase()}}>Save Your Signature</Button>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Button onClick={(e)=> {saveMC()}} className=\"mt-3\">Generate MC</Button>\r\n                                </Form.Group>\r\n                        </Form>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n             </div>\r\n             <MC imageURL={doctor.Signature} name={appointment.Patient} days={noOfDays}\r\n                startDate={startDate} endDate={endDate} doctor={doctor}\r\n                 />\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMC\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\ViewMPUI.js",["1172","1173","1174","1175","1176","1177","1178","1179","1180","1181"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport {useRouteMatch} from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMPUI() {\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    //usestates\r\n    const[medDocs, setMedDocs] = useState([]);\r\n    const[Reason, setReason] = useState(\"\");\r\n    const[LabResult, setLabResult] = useState(\"\");\r\n    const[ConsultFee, setConsultFee] = useState(0);\r\n    const[PrescriptionFee, setPrescriptionFee] = useState(0);\r\n    const [error, setError] = useState(\"\");  \r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n    const[fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTests, setMedTests] = useState([]);\r\n\r\n    const {path} = useRouteMatch();\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData()\r\n    },[])\r\n\r\n    const document = {...medDocs[0]};\r\n    const assignedMed = [];\r\n    const assignedMedTests = []\r\n\r\n    for(var i = 0; i < medDocs.length; i++)\r\n    {\r\n        for(var j = 0; j < medDocs[i].prescriptions.length; j++)\r\n        {\r\n            assignedMed.push({...medDocs[i].prescriptions[j]});\r\n        }\r\n        for(var j = 0; j < medDocs[i].LabTests.length; j++)\r\n        {\r\n            assignedMedTests.push({...medDocs[i].LabTests[j]});\r\n        }\r\n    }\r\n\r\n    const MPAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Medical profile has been updated successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n    \r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setReason(document.Reason);\r\n        setLabResult(document.LabResults);\r\n        setConsultFee(document.consultFee);\r\n        setPrescriptionFee(document.prescriptionFee);\r\n        setMedicines(document.prescriptions.map(md => ({...md})));\r\n        setMedTests(document.LabTests.map(md => ({...md})));\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let pFees = 0, tFees = 0;\r\n        for(var i = 0; i < medicines.length; i++)\r\n        {\r\n            pFees += medicines[i].price;\r\n        }\r\n        for(var i = 0; i < medTests.length; i++)\r\n        {\r\n            tFees += medTests[i].price;\r\n        }\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            //update data in firestore collection\r\n         firestore.collection(\"Medical Documents\").doc(document.id)\r\n         .update({\r\n            appointmentID: appointment.id,\r\n            Patient: appointment.Patient,\r\n            PatientEmail: appointment.PatientEmail,\r\n            DocEmail: appointment.DocEmail,\r\n            Reason: Reason,\r\n            DateOfVisit: appointment.Date,\r\n            LabResults: LabResult,\r\n            prescriptions: medicines,\r\n            LabTests : medTests,\r\n            prescriptionFee: parseFloat(pFees),\r\n            testFee: parseFloat(tFees),\r\n         })\r\n         .then(() => {\r\n            MPAlert()\r\n         })\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n        setFieldsDisabled(true);\r\n        setEditDisabled(false);\r\n    }\r\n\r\n    const drugList = [\r\n        { label: 'Medicine1', value: 'Medicine1', price: 10 },\r\n        { label: 'Medicine2', value: 'Medicine2', price: 10 },\r\n        { label: 'Medicine3', value: 'Medicine3', price: 10 },\r\n        { label: 'Medicine4', value: 'Medicine4', price: 10 },\r\n        { label: 'Medicine5', value: 'Medicine5' , price: 10},\r\n        { label: 'Medicine6', value: 'Medicine6' , price: 10},\r\n        { label: 'Medicine7', value: 'Medicine7', price: 10 },\r\n        { label: 'Medicine8', value: 'Medicine8', price: 10 },\r\n        { label: 'Medicine9', value: 'Medicine9', price: 10 },\r\n        { label: 'Medicine10', value: 'Medicine10', price: 10 },\r\n        { label: 'Medicine11', value: 'Medicine11' , price: 10},\r\n        { label: 'Medicine12', value: 'Medicine12' , price: 10},\r\n        { label: 'Medicine13', value: 'Medicine13', price: 10 },\r\n        { label: 'Medicine14', value: 'Medicine14', price: 10 },\r\n        { label: 'Medicine15', value: 'Medicine15', price: 10 },\r\n        { label: 'Medicine16', value: 'Medicine16', price: 10 },\r\n        { label: 'Medicine17', value: 'Medicine17' , price: 10},\r\n        { label: 'Medicine18', value: 'Medicine18' , price: 10},\r\n        { label: 'Medicine19', value: 'Medicine19', price: 10 },\r\n        { label: 'Medicine20', value: 'Medicine20', price: 10 },\r\n        { label: 'Medicine21', value: 'Medicine21', price: 10 },\r\n        { label: 'Medicine22', value: 'Medicine22', price: 10 },\r\n        { label: 'Medicine23', value: 'Medicine23' , price: 10},\r\n        { label: 'Medicine24', value: 'Medicine24' , price: 10},\r\n      ];\r\n\r\n      const medicalTests = [\r\n        { label: 'Blood Test', value: 'Blood Test', price: 100 },\r\n        { label: 'X Ray Scan', value: 'X Ray Scan', price: 120 },\r\n        { label: 'MRI Scan', value: 'MRI Scan', price: 220 },\r\n        { label: 'Brain Scan', value: 'Brain Scan', price: 120 },\r\n        { label: 'CT Scan', value: 'CT Scan', price: 220 },\r\n        { label: 'Kidney Function Test', value: 'Kidney Function Test', price: 150 },\r\n        { label: 'Liver Function Test', value: 'Liver Function Test', price: 150 },\r\n        { label: 'Malabsorption Test', value: 'Malabsorption Test' , price: 80},\r\n        { label: 'Pregnancy Test', value: 'Pregnancy Test' , price: 50 },\r\n        { label: 'Syphillis Test', value: 'Syphillis Test', price: 75 },\r\n        { label: 'Toxicology Test', value: 'Toxicology Test', price: 100 },\r\n        { label: 'Urinanalysis', value: 'Urinanalysis', price: 10 },\r\n        { label: 'Mammograhy', value: 'Mammograhy', price: 250 },\r\n        { label: 'Ultrasound', value: 'Ultrasound' , price: 150},\r\n        { label: 'Endoscopy', value: 'Endoscopy' , price: 200},\r\n        { label: 'Skin Test', value: 'Skin Test', price: 200 },\r\n        { label: 'Semen Analysis', value: 'Semen Analysis', price: 100 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Create Medical Profile</h2>\r\n             <Card.Body>\r\n             {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select options={drugList}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medicines : assignedMed}\r\n                        onChange = {opt => setMedicines(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medicines.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMed.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select options={medicalTests}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medTests : assignedMedTests}\r\n                        onChange = {opt => setMedTests(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMedTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setLabResult(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <hr/>\r\n                    <Link to={{\r\n                        pathname: '/MedDoc/ViewMC', \r\n                        state:{appointment: appointment}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                    <Button type=\"submit\"className=\"w-100 my-2\" disabled={fieldsDisabled}>Update</Button>\r\n                    <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMPUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\DocRescheduleUI.js",["1182","1183"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {Link, useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction DocRescheduleUI() {\r\n    const {state} = useLocation()\r\n    const {appointment} = state\r\n    const history = useHistory();\r\n    const {currentUser} = useAuth();\r\n\r\n    const [appointments, setAppointments] = useState([]);  // save Appointment data from firestore in this array \r\n    const [selectedSlot, setSelectedSlot] = useState(\"\");  // to save patient selected time slot\r\n    const [date, setDate] = useState(\"\");                  // to save patient selected date\r\n    const [error, setError] = useState(\"\");                // store error message\r\n    const [doctor, setDoctor] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Appointment\")\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n           firestore.collection(\"Medical Doctors\")\r\n           .where(\"Email\",\"==\",String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const resAppointmentAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Appointment has been rescheduled successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     const doct = {...doctor[0]}\r\n\r\n     const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n      setError(\"\");\r\n      if(date === \"\" || selectedSlot === \"\")\r\n      {\r\n          return setError(\"Date Or Timeslot Not Selected\");\r\n      }\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(appointment.id).update({\r\n            Date : date,\r\n            Timeslot: selectedSlot,\r\n        })\r\n        .then(() => {\r\n            resAppointmentAlert()\r\n        })\r\n\r\n        // Send email to user\r\n        let details = {\r\n            date: date,\r\n            doctor: appointment.Doctor,\r\n            timeslot: selectedSlot,\r\n            user: appointment.Patient,\r\n            email: appointment.PatientEmail,\r\n            department: doct.Department\r\n        };\r\n        let response = await fetch(\"http://localhost:5000/docReschedule\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n        });\r\n        let result = await response.json();\r\n        console.log(result.status);\r\n\r\n        history.push(\"/MedDoc/Schedule\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n\r\n      setSelectedSlot(\"\");\r\n      setDate(\"\");\r\n     }\r\n\r\n     // declare and initialize timeslot array for everyday\r\n    const times = [\"08:00 AM - 09:00 AM\",\r\n    \"09:00 AM - 10:00 AM\",\r\n    \"10:00 AM - 11:00 AM\",\r\n    \"11:00 AM - 12:00 PM\",\r\n    \"01:00 PM - 02:00 PM\",\r\n    \"02:00 PM - 03:00 PM\",\r\n    \"04:00 PM - 05:00 PM\",\r\n    \"05:00 PM - 06:00 PM\",\r\n    \"07:00 PM - 08:00 PM\"\r\n  ];\r\n\r\n    const bookedTimeslots = [];\r\n    \r\n    for(var j = 0; j < appointments.length; j++)\r\n    {\r\n        //get booked timeslots for the doctor on that day\r\n        if(date === appointments[j].Date)\r\n        {\r\n            if(currentUser.email === appointments[j].DocEmail)\r\n            {\r\n                bookedTimeslots.push(appointments[j].Timeslot);\r\n            }\r\n        } \r\n    }\r\n\r\n    //remove booked timeslots from times array\r\n    const filteredTimes = times.filter(function(x) { \r\n        return bookedTimeslots.indexOf(x) < 0;\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"date\">\r\n                        <label class=\"note\">Note: You will not be able to reschedule an appointment from the same day</label>\r\n                        <Form.Label>Select A Date</Form.Label>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form.Control \r\n                        disabled = {false}\r\n                        min={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"timeslots\">\r\n                     <Form.Label>Available Time Slots</Form.Label>\r\n                     <label class=\"note\">Time slots will display after selecting a date</label>\r\n            {filteredTimes.map(time => (date === \"\") ? null : <div> \r\n                <input type=\"radio\" value={time} name=\"time\" \r\n                onChange={e => {setSelectedSlot(e.target.value)}} /><label>{time}</label>\r\n                </div>)}\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Book</Button>\r\n                <Link to={'/MedDoc/Schedule'}>\r\n                    <Button className=\"w-100 my-2\" type=\"submit\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocRescheduleUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\PatientViewArticle.js",["1184"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass PatientViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/Patient/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                    <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (PatientViewArticle)","C:\\Users\\malla\\Desktop\\project\\src\\components\\ViewArticle\\ViewArticle.js",["1185","1186"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                            <a onClick={() => {window.location.href=\"/MedDoc/edit-article\"}} className=\"btn btn-success\">Edit</a>\r\n                            <button onClick = {this.deleteArticle.bind(this, this.state.article.id)}class = \"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (ViewArticle)","C:\\Users\\malla\\Desktop\\project\\src\\components\\EditArticle\\EditArticle.js",["1187","1188","1189"],"import React, {Component} from 'react'\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap'\r\nimport classes from './EditArticle.module.css'\r\nimport Compressor from 'compressorjs'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass EditArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: ''})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\").doc(this.state.article.id)\r\n                 .set(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>Edit Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme='snow'\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditArticle","C:\\Users\\malla\\Desktop\\project\\src\\components\\NewArticle\\NewArticle.js",["1190","1191","1192"],"import React, {Component} from 'react';\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport classes from './NewArticle.module.css';\r\nimport Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer';\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\")\r\n                 .add(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>New Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme='snow'\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\SAHomepageUI.js",["1193","1194","1195","1196","1197","1198","1199","1200","1201","1202"],"import React, {useState} from 'react';\r\nimport NavBar from '../components/navbarUI';\r\nimport { Link } from \"react-router-dom\"\r\nimport {useAuth} from '../util/Auth';\r\nimport { firestore, auth } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\nfunction SAHomePageUI() {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            })\r\n        };\r\n        fetchData();\r\n     }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <React.Fragment>\r\n                    <h1 className='text-center text-danger text text-capitalize my-5'\r\n                    style={{fontSize: '2em'}}>\r\n                        {Users.map(user => <h1> Hello {user.Name},</h1>)}\r\n                        Welcome To MyAppointment System\r\n                    </h1>\r\n                    <div className=\"container col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1460672985063-6764ac8b9c74?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bWVkaWNhbCUyMGFwcG9pbnRtZW50fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Manage Account</h5>\r\n                                        <p className=\"card-text\">You can view, delete, disable, enable, and edit account details</p>\r\n                                        <a onClick={() => {window.location.href=\"/SysAdm/viewAllAccount\"}} className=\"btn btn-primary\">Manage Account</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1520223297779-95bbd1ea79b7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MzN8fHByb2ZpbGV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                    className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">My Profile</h5>\r\n                                        <p className=\"card-text\">You can see all your profile details here. You may choose to edit your address and telephone number.</p>\r\n                                        <a onClick={() => {window.location.href=\"/SysAdm/myProfile\"}} className=\"btn btn-primary\">View / Edit Profile</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"card\" >\r\n                                    <img className=\"photo\" src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZWR1Y2F0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\" \r\n                                        className=\"card-img-top\" alt=\"...\" height=\"240px\"/>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Educational</h5>\r\n                                            <p className=\"card-text\">Get your hands on the latest health educational materials and health promotions!</p>\r\n                                            <a onClick={() => {window.location.href=\"/SysAdm/ViewHealthArticle\"}} className=\"btn btn-primary\">View Post</a>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SAHomePageUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["1203","1204","1205","1206","1207","1208","1209"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport { Container } from \"react-bootstrap\"\r\nimport {UserInput} from './UserInput'\r\nimport SearchBar from './searchBar';\r\nimport DropDown from './dropDownBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllAccountUI() \r\n{\r\n   const [users, setUsers] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [filteredUsers, setFilteredUsers] = useState([]);\r\n   const [DropDownn, setDropDownn] = useState(\"All\");\r\n   let history = useHistory();\r\n\r\n   \r\n   \r\n\r\n   React.useEffect(() => {\r\n   \r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('Users').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   const filteredArray =   users.filter((user) =>\r\n   user.Email.toLowerCase().includes(search.toLowerCase())\r\n )\r\n\r\n   // const filteredArray = users.filter(user => {\r\n   //    if (DropDown === \"All\")\r\n   //       return user.FirstName.toLowerCase().includes(search.toLowerCase())\r\n   //    return user.Email.toLowerCase().includes(search.toLowerCase())\r\n   // })\r\n  \r\n\r\n\r\n   return(\r\n      <>\r\n      \r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">User Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Enter a user name...\"/>\r\n         </div>\r\n\r\n         {/* drop down */}\r\n         <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                }}>\r\n                <DropDown handleChange={(e) => setDropDownn(e.target.value)} placeholder=\"Select an option\" /> \r\n         </div>       \r\n         <div\r\n        style={{\r\n               display: \"flex\",\r\n               justifyContent: \"center\",\r\n               alignItems: \"center\",\r\n               marginBottom: \"20px\",\r\n               fontWeight: \"bold\"\r\n           }}\r\n     >\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllStaffAccount\"}}/>Staff\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllAccount\"}}/>All Users\r\n     </div>       \r\n      \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n           \r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>NRIC</th>\r\n                     <th>Address</th>\r\n                     <th>Date Of Birth</th>\r\n                     <th>Email Address</th>\r\n                     <th>Telephone</th>\r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredArray.map(users => (\r\n                        <tr>\r\n                           {users.Name ? (<td>{users.Name}</td>):(<td>{users.FirstName} {users.LastName}</td>)} \r\n                            \r\n                           {users.NRIC ? (<td>{users.NRIC}</td>):(<td>-</td>)}\r\n                           {users.Address ? (<td>{users.Address}</td>):(<td>-</td>)}\r\n                           {users.DOB ? (<td>{users.DOB}</td>):(<td>-</td>)}\r\n                           <td>{users.Email}</td>\r\n                           {users.Telephone ? (<td>{users.Telephone}</td>):(<td>-</td>)}\r\n                           <td>{users.Role}</td>\r\n                           {/* <Link to = {{ */}\r\n                              {/* pathname: '/SysAdm/viewIndvAcc', */}\r\n                              {/* state: {user: users} */}\r\n                           {/* }}><Button type = \"submit\">Edit</Button></Link> */}\r\n                           {/* <button onClick={onDelete} class = \"btn btn-danger\">Delete</button> */}\r\n\r\n                        <UserInput users = {users}/>\r\n\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n            \r\n         </div>\r\n         \r\n      </div>\r\n     \r\n\r\n\r\n\r\n      \r\n      {/* <ul> */}\r\n         {/* {users.map(users => ( */}\r\n            {/* // <li key = {users.FirstName}> */}\r\n               {/* <UserInput users = {users}/> */}\r\n            {/* </li> */}\r\n         {/* // ))} */}\r\n      {/* </ul> */}\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllAccountUI","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js",["1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {UserInput} from './UserInput'\r\nimport SearchBar from './searchBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllStaffAccount() \r\n{\r\n   const [users, setUsers] = useState([])\r\n   const [medicalDocUsers, setMedicalDocUsers] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [filteredUsers, setFilteredUsers] = useState([]);\r\n   let history = useHistory();\r\n   \r\n\r\n   React.useEffect(() => {\r\n   \r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('All Medical Staff').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n         \r\n         await firestore.collection('Medical Doctors').get()\r\n         setMedicalDocUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         \r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   const filteredArray =   users.filter((user) =>\r\n   user.Email.toLowerCase().includes(search.toLowerCase())\r\n )\r\n\r\n   return(\r\n      <>\r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">Staff Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Search for a user by Email...\"/>\r\n         </div>\r\n                                                                                                                                   \r\n      <div\r\n         style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginBottom: \"20px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n      >\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllStaffAccount\"}}/>Staff\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllAccount\"}}/>All Users\r\n      </div>       \r\n       \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>                                                 \r\n                     <th>Email Address</th>  \r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredArray.map(users => (\r\n                        <tr>\r\n                           <td>{users.Name}</td>                                                                                                 \r\n                           <td>{users.Email}</td>\r\n                           <td>{users.Role}</td>\r\n                           {/* <Link to = {{ */}\r\n                              {/* pathname: '/SysAdm/viewIndvAcc', */}\r\n                              {/* state: {user: users} */}\r\n                           {/* }}><Button type = \"submit\">Edit</Button></Link> */}\r\n                           {/* <button onClick={onDelete} class = \"btn btn-danger\">Delete</button> */}\r\n\r\n                        <UserInput users = {users}/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n\r\n\r\n\r\n      \r\n      {/* <ul> */}\r\n         {/* {users.map(users => ( */}\r\n            {/* // <li key = {users.FirstName}> */}\r\n               {/* <UserInput users = {users}/> */}\r\n            {/* </li> */}\r\n         {/* // ))} */}\r\n      {/* </ul> */}\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllStaffAccount","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js",["1221","1222","1223","1224","1225","1226"],"import React, { useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from '../util/Auth';\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport {useRouteMatch, useLocation} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\n\r\nfunction ViewIndividualAccountUI() {\r\n\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n\r\n   const [enableFields, setEnableFields] = useState(true);\r\n   const [editEnabled, setEditEnabled] = useState(false);\r\n   const[updateEnabled, setUpdateEnabled] = useState(true);\r\n   const { currentUser } = useAuth();\r\n   const { updateEmail } = useAuth();\r\n   const [Users, setUsers] = useState([]);\r\n\r\n   const {path} = useRouteMatch();\r\n\r\n   const {state} = useLocation();\r\n   const {user} = state;  \r\n   let history = useHistory();\r\n\r\n   function onEdit(){\r\n      setEditEnabled(true);\r\n      setUpdateEnabled(false);\r\n      setEnableFields(false);\r\n      setFirstName(user.FirstName);\r\n      setLastName(user.LastName);\r\n      setNRIC(user.NRIC);\r\n      setDOB(user.DOB);\r\n      setAddress(user.Address);\r\n      setEmail(user.Email);\r\n      setTelephone(user.Telephone);\r\n   }\r\n\r\n   const submitUpdateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: user.Role + ' account has been updated successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      try{\r\n         setError(\"\");\r\n         setUpdateEnabled(true);\r\n         //update data in firestore collection\r\n         firestore.collection(\"Users\").doc(user.id)\r\n            .update({\r\n               FirstName: FirstName,\r\n               LastName: LastName,\r\n               NRIC: NRIC,\r\n               Address: Address,\r\n               DOB: DOB,\r\n               Telephone: Telephone\r\n            })\r\n            .then(() => {\r\n               submitUpdateAlert()\r\n            })\r\n      }catch(error){\r\n         setError(error.message);\r\n      }\r\n      setEnableFields(true);\r\n      setUpdateEnabled(true);\r\n      setEditEnabled(false);\r\n   }\r\n   \r\n\r\n \r\n\r\n   return (\r\n      <>\r\n      \r\n      <div>\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">{user.Role} Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.FirstName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.LastName} \r\n                        disabled = {true} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.NRIC} \r\n                        disabled = {true} \r\n                        onChange={(e) => setNRIC(e.target.value)}\r\n                        pattern = \"[s S | t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Address} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.DOB} \r\n                        disabled = {true}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)}\r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Email} \r\n                        disabled = {true} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue = {user.Telephone} \r\n                        disabled = {enableFields} \r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <Button onClick={onEdit} disabled = {editEnabled} className=\"w-100 my-2\">Edit</Button>\r\n            \r\n                     <Button disabled = {updateEnabled} className=\"w-100 my-2\" type=\"submit\">Update</Button>\r\n                  \r\n                     <Button href = {`${path}`} disabled = {updateEnabled} className=\"w-100 my-2\">Cancel</Button>   \r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n            \r\n      </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ViewIndividualAccountUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\CreateAccountUI.js",["1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { auth, firestore, storageRef } from '../firebase';\r\nimport moment from 'moment';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\nfunction CreateAccountUI() {\r\n\r\n   //useStates\r\n   const [fileUrl, setFileUrl] = React.useState(null);\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Role, setRole] = useState(\"\");\r\n   const [Password, setPassword] = useState(\"\"); \r\n   const [ConfirmPassword, setConfirmPassword] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const history = useHistory();\r\n\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const NRICRef = useRef();\r\n   const AddressRef = useRef();\r\n   const DOBRef = useRef();\r\n   const EmailRef = useRef();\r\n   const TelephoneRef = useRef();\r\n   const PasswordRef = useRef();\r\n   const ConfirmPasswordRef = useRef();\r\n\r\n   const RoleRef = useRef();\r\n\r\n   // Check Validity\r\n   const isNumber = /\\d/;\r\n   const isSpecChar = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\r\n   const isLower = /[a-z]/;\r\n   const isUpper = /[A-Z]/;\r\n\r\n   const [passwordFocused, setPasswordFocused] = useState(false);\r\n   const [passwordValidity, setPasswordValidity] = useState ({\r\n      minChar: null,\r\n      lower: null,\r\n      upper: null,\r\n      number: null,\r\n      specialChar: null\r\n   });\r\n\r\n   const onFileChange = async (e) => {\r\n      const file = e.target.files[0];\r\n      const sRef = storageRef\r\n      const fileRef = sRef.child(file.name);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    \r\n\r\n   const onChangePassword = password =>\r\n   {\r\n      setPassword(password);\r\n      setPasswordValidity({\r\n         minChar: password.length >=8 ? true : false,\r\n         lower: isLower.test(password) ? true : false,\r\n         upper: isUpper.test(password) ? true : false,\r\n         number: isNumber.test(password) ? true : false,\r\n         specialChar: isSpecChar.test(password) ? true : false\r\n      })\r\n   }\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (Role === \"\" || Role === \"Select A Role\") {\r\n         return setError(\"Not A Valid Role\")\r\n      }\r\n      \r\n      if(Password !== ConfirmPassword)\r\n      {\r\n         return setError(\"Passwords do not match\")\r\n      }\r\n\r\n      if (passwordValidity.minChar === false || passwordValidity.lower === false || passwordValidity.upper === false || passwordValidity.number === false || passwordValidity.specialChar === false)\r\n      {\r\n         return setError(\"Password do not meet the requirement\");\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         await auth.createUserWithEmailAndPassword(Email, Password)\r\n\r\n         \r\n         \r\n         await firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email: Email.toLowerCase(),\r\n            Role: Role\r\n         })\r\n\r\n         if (Role === \"Medical Doctor\"){\r\n            await firestore.collection('Medical Doctors').add({\r\n               Image: fileUrl,\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role\r\n            })\r\n            .then(() => {\r\n               alert(\"Account Registered Successfully!\");\r\n            })\r\n         }\r\n\r\n         if (Role === \"Medical Admin\"){\r\n            await firestore.collection('All Medical Staff').add({\r\n               Image: fileUrl,\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role\r\n            })\r\n            .then(() => {\r\n               alert(\"Account Registered Successfully!\");\r\n            })\r\n         }\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n         \r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setAddress(\"\");\r\n      setDOB(\"\");\r\n      setEmail(\"\");\r\n      setTelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setPasswordFocused(false);\r\n      setRole(\"\");\r\n      };\r\n\r\n   return (\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n          <IdleTimerContainer></IdleTimerContainer>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create Staff Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"Avatar\">\r\n                  <Form.Label>Upload Image</Form.Label>\r\n                        <Form.Control \r\n                       onChange = {onFileChange}        \r\n                     type=\"file\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        ref={TelephoneRef}\r\n                        value={Telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"AccountType\">\r\n                        <Form.Label>Role</Form.Label>\r\n                     </Form.Group>\r\n\r\n                     <select placeholder = \"Select A Role\" onChange = {(e)=> setRole(e.target.value)}>\r\n                        <option disabled = \"disabled\" selected = \"selected\">Select A Role</option>\r\n                        <option>Medical Doctor</option>\r\n                        <option>Medical Admin</option>\r\n                     </select>\r\n\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Form.Group id = \"Password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={PasswordRef}\r\n                        value={Password}\r\n                        onFocus = {() => setPasswordFocused(true)}\r\n                        onChange={(e) => onChangePassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"ConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={ConfirmPasswordRef}\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n\r\n                     { passwordFocused && <PasswordStrengthIndicator validity={passwordValidity}/>}\r\n\r\n                     <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n   )\r\n}\r\n\r\nexport default CreateAccountUI\r\n","C:\\Users\\malla\\Desktop\\project\\src\\util\\SystemAdminRoute.js",["1240"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction SystemAdminRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SystemAdminRoute\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\PatientComment.js",["1241","1242"],"import React, {useState} from 'react'\r\nimport './comment.css'\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore} from '../firebase';\r\nimport StarRatings from 'react-star-ratings';\r\nimport moment from 'moment';\r\n\r\nfunction PatientComment(props) {\r\n    const [comments, setComments] = useState([])\r\n    const [currentComments, setCurrentComments] = useState(\"\")\r\n    const {currentUser} = useAuth()\r\n    const [users, setUsers] = useState([])\r\n    const [rating, setRating] = useState(1)\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n           await firestore.collection(\"comments\")\r\n           .where(\"Email\", \"==\", String(props.email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setComments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n     const user = {...users[0]}\r\n     let array = []\r\n           \r\n    async function submitComment (e) {\r\n        e.preventDefault()\r\n        const obj = {\r\n            email: props.email,\r\n            patient: user.FirstName + \" \" + user.LastName,\r\n            patientEmail: currentUser.email,\r\n            comment: currentComments,\r\n            rating: rating, \r\n            date: moment(new Date()).format('MMMM Do YYYY')\r\n        }\r\n        \r\n        array.push(obj)\r\n\r\n        \r\n        await firestore.collection(\"comments\").add(\r\n            {\r\n                Email: props.email,\r\n                patient: user.FirstName + \" \" + user.LastName,\r\n                patientEmail: currentUser.email,\r\n                comment: currentComments,\r\n                rating: rating,\r\n                date: moment(new Date()).format('MMMM Do YYYY')\r\n            }\r\n        ).then(() => {\r\n            alert(\"Posted successfully\")\r\n        })\r\n        await firestore.collection(\"comments\")\r\n        .where(\"Email\", \"==\", String(props.email))\r\n        .get()\r\n        .then(function(data){\r\n           console.log(data)\r\n              setComments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n        }); \r\n    }\r\n\r\n    async function DeleteComment (comment) {\r\n        array = array.filter(i => i.id !== comment.id);\r\n       await firestore.collection(\"comments\").doc(comment.id).delete().then(()=>{\r\n            alert(\"Comment has been deleted successfully!\")\r\n            window.location.reload();\r\n\r\n        }).catch(err => alert(err))\r\n    }\r\n  \r\n\r\n  let Total = 0\r\n\r\n  for (var i = 0; i < comments.length; i++) {\r\n      Total += parseFloat(comments[i].rating)\r\n  }\r\n\r\n  const avg = Total / comments.length\r\n\r\n   \r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center\">\r\n            <div className = \"comment-box\">\r\n                \r\n                <h5>REVIEWS</h5>\r\n                \r\n                <h1 className = \"font\" style = {{\r\n                    fontSize: \"70px\"\r\n                }}>{avg.toFixed(1)}</h1>\r\n\r\n            <div className = \"star\" style = {{\r\n                marginTop: \"-1%\"\r\n            }}> \r\n                <StarRatings\r\n                rating= {avg?avg:0}\r\n                starDimension=\"25px\"\r\n                starSpacing=\"2px\"\r\n                starRatedColor=\"orange\"         \r\n            />\r\n            </div>\r\n            \r\n            <div className = \"row\">\r\n            <img src = \"https://www.flaticon.com/svg/vstatic/svg/3358/3358902.svg?token=exp=1612171347~hmac=e27f444ac60e2ba54cd07f70b1392594\" style = {{\r\n                width: \"20px\",\r\n                colorAdjust: \"#0069d9\",\r\n                marginLeft: \"1%\"\r\n                \r\n            }}/>\r\n            <h5 className = \"mt-2 ml-1\">{comments.length} total</h5>\r\n            </div>\r\n            \r\n            \r\n\r\n                <form className = \"comment-form\">\r\n                    <div className = \"comment-form-fields\">\r\n                        <input placeholder = \"Name\" value = {user.FirstName + \" \" + user.LastName} disabled = {true } required>\r\n                        </input>\r\n                        <input placeholder = \"Email\" value = {currentUser.email} disabled = {true } required>\r\n                        </input>\r\n                        <textarea placeholder=\"Write a review here\" rows = \"4\" onChange={(e) => setCurrentComments(e.target.value)} required>\r\n                        </textarea>\r\n                        <input placeholder = \"Leave a rating here\" type = \"number\" min = \"1\" max = \"5\" onChange={(e) => setRating(e.target.value)} required></input>\r\n                        <div className = \"comment-form-actions\">\r\n                            <button type = \"submit\" onClick = {submitComment}>\r\n                                Post Review\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <h3>Reviews</h3>\r\n                    {comments.length === 0 && (<h4 className = \"comment-count\"> No reviews yet </h4>)}\r\n                    {comments.length !== 0 && (<h4 className = \"comment-count\"> {comments.length} reviews </h4> \r\n                    )}\r\n            \r\n                      {comments.map(comment => \r\n                      \r\n                    \r\n                    <div className = \"comment\">\r\n                        <p className = \"mt-1\">{comment.patient} </p>\r\n                        \r\n                        <div className = \"row\" style = {{\r\n                            marginLeft: \"-0.05%\",\r\n                            marginTop: \"-0.5%\"\r\n                        }}> \r\n                        <StarRatings \r\n                         \r\n                         \r\n                         \r\n                        \r\n                        rating= {parseFloat(comment.rating)}\r\n                        starDimension=\"20px\"\r\n                        starSpacing=\"2px\"\r\n                        starRatedColor=\"orange\"  \r\n                        />\r\n                        <p className = \"ml-3 mt-1\">{comment.date}</p>\r\n                        </div>\r\n\r\n                                                   \r\n                        <p className = \"comment-body mt-4\">{comment.comment}</p>\r\n\r\n\r\n                        <div className = \"comment-footer ml-1\" >\r\n                            <button className = \"btn btn-danger mt-4\" onClick = {(e)=>{DeleteComment(comment)}} disabled = {currentUser.email !== comment.patientEmail}>Delete</button>\r\n                        </div>\r\n                    </div>)}                            \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientComment\r\n","C:\\Users\\malla\\Desktop\\project\\src\\Patient\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\Patient\\doctorCard.js",["1243","1244","1245","1246","1247","1248"],"import React from 'react'\r\nimport {Form, Button, Card, Container, Alert, Row, Col} from 'react-bootstrap'\r\nimport {Link,} from \"react-router-dom\";\r\nimport TextTruncate from 'react-text-truncate';\r\n\r\nconst DoctorCard = (props) => {\r\n    return(\r\n            <Card className=\"\" style={{ width: '18rem' }}>\r\n               <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Img variant=\"top\" src={props.data.Image} height=\"220px\" />\r\n               </Link>\r\n         <Card.Body>\r\n         <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Title>{props.data.Name}</Card.Title>\r\n            </Link>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Department: {props.data.Department}</Card.Subtitle>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Specialty: {props.data.Specialist}</Card.Subtitle>\r\n            {/* <TextTruncate \r\n               line={3}\r\n               element=\"span\"\r\n               truncateText=\"…\"\r\n               text={props.data.Information}\r\n            /> */}\r\n               <Link to={{pathname: 'doctorProfile/'+props.data.id, state:{doctor: props.data}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n         </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default DoctorCard","C:\\Users\\malla\\Desktop\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\MedicalDoctor\\MC.js",["1249","1250","1251"],"import React from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\nfunction MC(props) {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{props.name}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {props.days} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {moment(props.startDate).format(\"DD/MM/YYYY\")} and is valid till {moment(props.endDate).format(\"DD/MM/YYYY\")}</Card.Text>\r\n            <Card.Img src={props.imageURL}\r\n            style={{maxWidth:\"10%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"75%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '11%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{props.doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MC\r\n\r\n","C:\\Users\\malla\\Desktop\\project\\src\\components\\ArticleCard\\ArticleCard.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\UserInput.js",["1252","1253","1254","1255","1256","1257"],"import React from 'react'\r\nimport {firestore} from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {Link, BrowserRouter} from 'react-router-dom';\r\nimport * as admin from \"firebase-admin\";\r\n\r\nexport const UserInput = (props) => {\r\n\r\n    const onDelete = async () => {\r\n        await firestore.collection(\"Users\").doc(props.users.id).delete()\r\n         .then(() => {\r\n            alert(\"User has been deleted Successfully!\");\r\n            window.location.reload();\r\n         })\r\n    }\r\n\r\n\r\n\r\n    return (<>\r\n        {/* {<button onClick={onUpdateFirstName}>Update</button>} */}\r\n        <div>\r\n        <Link to = {{\r\n            pathname: '/SysAdm/viewIndvAcc',\r\n            state: {user: props.users}\r\n        }}>\r\n        \r\n        \r\n\r\n        <Button className = \"btn btn-success\">Edit</Button></Link>\r\n        <button onClick={(e) => onDelete()} class = \"btn btn-danger\">Delete</button>\r\n        {/* <a onClick={() => {window.location.href=\"/SysAdm/viewIndvAcc\"}} className=\"btn btn-success\">Edit</a> */}\r\n        </div>\r\n    </>\r\n    )\r\n}","C:\\Users\\malla\\Desktop\\project\\src\\SystemAdmin\\dropDownBar.js",[],{"ruleId":"1258","severity":1,"message":"1259","line":30,"column":17,"nodeType":"1260","endLine":32,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":32,"column":54,"nodeType":"1260","endLine":35,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":35,"column":59,"nodeType":"1260","endLine":38,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":38,"column":69,"nodeType":"1260","endLine":41,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":41,"column":61,"nodeType":"1260","endLine":44,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":62,"nodeType":"1260","endLine":47,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":47,"column":60,"nodeType":"1260","endLine":50,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":50,"column":60,"nodeType":"1260","endLine":53,"endColumn":11},{"ruleId":"1261","severity":1,"message":"1262","line":38,"column":12,"nodeType":"1263","messageId":"1264","endLine":38,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1266","line":3,"column":16,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1267","line":11,"column":12,"nodeType":"1263","messageId":"1264","endLine":11,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1268","line":14,"column":12,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1269","line":14,"column":19,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":12,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1267","line":22,"column":11,"nodeType":"1263","messageId":"1264","endLine":22,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1271","line":23,"column":10,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1270","line":36,"column":11,"nodeType":"1263","messageId":"1264","endLine":36,"endColumn":22},{"ruleId":"1272","severity":1,"message":"1273","line":40,"column":41,"nodeType":"1260","messageId":"1274","endLine":40,"endColumn":42,"suggestions":"1275"},{"ruleId":"1272","severity":1,"message":"1276","line":40,"column":58,"nodeType":"1260","messageId":"1274","endLine":40,"endColumn":59,"suggestions":"1277"},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":36,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":38},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":71,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":73},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":106,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":108},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":142,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":144},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":183,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":185},{"ruleId":"1261","severity":1,"message":"1282","line":3,"column":8,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1283","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":22},{"ruleId":"1284","severity":1,"message":"1285","line":45,"column":9,"nodeType":"1286","endLine":45,"endColumn":11,"suggestions":"1287"},{"ruleId":"1284","severity":1,"message":"1285","line":39,"column":9,"nodeType":"1286","endLine":39,"endColumn":11,"suggestions":"1288"},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":17,"nodeType":"1260","endLine":46,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":46,"column":93,"nodeType":"1260","endLine":49,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":49,"column":105,"nodeType":"1260","endLine":52,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":58,"column":106,"nodeType":"1260","endLine":61,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":61,"column":109,"nodeType":"1260","endLine":64,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":64,"column":119,"nodeType":"1260","endLine":67,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":67,"column":94,"nodeType":"1260","endLine":70,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":70,"column":75,"nodeType":"1260","endLine":73,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":73,"column":114,"nodeType":"1260","endLine":76,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":76,"column":98,"nodeType":"1260","endLine":79,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":44,"column":9,"nodeType":"1286","endLine":44,"endColumn":11,"suggestions":"1289"},{"ruleId":"1261","severity":1,"message":"1290","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1285","line":39,"column":9,"nodeType":"1286","endLine":39,"endColumn":11,"suggestions":"1291"},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":17,"nodeType":"1260","endLine":46,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":46,"column":98,"nodeType":"1260","endLine":49,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":49,"column":110,"nodeType":"1260","endLine":52,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":52,"column":120,"nodeType":"1260","endLine":55,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":55,"column":118,"nodeType":"1260","endLine":58,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":58,"column":129,"nodeType":"1260","endLine":61,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":61,"column":120,"nodeType":"1260","endLine":64,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":64,"column":94,"nodeType":"1260","endLine":67,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":67,"column":74,"nodeType":"1260","endLine":70,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":70,"column":118,"nodeType":"1260","endLine":74,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1293"},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":9,"nodeType":"1286","endLine":23,"endColumn":11,"suggestions":"1294"},{"ruleId":"1295","severity":1,"message":"1296","line":42,"column":37,"nodeType":"1297","endLine":42,"endColumn":133},{"ruleId":"1295","severity":1,"message":"1296","line":53,"column":33,"nodeType":"1297","endLine":53,"endColumn":126},{"ruleId":"1295","severity":1,"message":"1296","line":64,"column":33,"nodeType":"1297","endLine":64,"endColumn":124},{"ruleId":"1295","severity":1,"message":"1296","line":79,"column":37,"nodeType":"1297","endLine":79,"endColumn":136},{"ruleId":"1295","severity":1,"message":"1296","line":90,"column":33,"nodeType":"1297","endLine":90,"endColumn":127},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1299","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1300","line":1,"column":17,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1301","line":2,"column":34,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":37},{"ruleId":"1261","severity":1,"message":"1302","line":14,"column":10,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1303","line":14,"column":17,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1304","line":17,"column":10,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1305","line":20,"column":16,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":23},{"ruleId":"1284","severity":1,"message":"1285","line":51,"column":5,"nodeType":"1286","endLine":51,"endColumn":7,"suggestions":"1306"},{"ruleId":"1307","severity":1,"message":"1308","line":53,"column":55,"nodeType":"1309","messageId":"1310","endLine":53,"endColumn":57},{"ruleId":"1261","severity":1,"message":"1311","line":16,"column":19,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":27},{"ruleId":"1284","severity":1,"message":"1285","line":29,"column":9,"nodeType":"1286","endLine":29,"endColumn":11,"suggestions":"1312"},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":7,"nodeType":"1286","endLine":23,"endColumn":9,"suggestions":"1313"},{"ruleId":"1295","severity":1,"message":"1314","line":52,"column":16,"nodeType":"1297","endLine":52,"endColumn":56},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1317","line":5,"column":30,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1266","line":6,"column":16,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1318","line":23,"column":7,"nodeType":"1286","endLine":23,"endColumn":9,"suggestions":"1319"},{"ruleId":"1284","severity":1,"message":"1318","line":22,"column":7,"nodeType":"1286","endLine":22,"endColumn":9,"suggestions":"1320"},{"ruleId":"1261","severity":1,"message":"1321","line":23,"column":11,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1322","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":15},{"ruleId":"1284","severity":1,"message":"1285","line":43,"column":7,"nodeType":"1286","endLine":43,"endColumn":9,"suggestions":"1323"},{"ruleId":"1284","severity":1,"message":"1324","line":50,"column":9,"nodeType":"1286","endLine":50,"endColumn":11,"suggestions":"1325"},{"ruleId":"1261","severity":1,"message":"1326","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":12,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1285","line":52,"column":9,"nodeType":"1286","endLine":52,"endColumn":11,"suggestions":"1327"},{"ruleId":"1261","severity":1,"message":"1328","line":9,"column":5,"nodeType":"1263","messageId":"1264","endLine":9,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1328","line":10,"column":5,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":10},{"ruleId":"1295","severity":1,"message":"1296","line":106,"column":29,"nodeType":"1297","endLine":106,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":35,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":39},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":41,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1331","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":53},{"ruleId":"1261","severity":1,"message":"1299","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":17},{"ruleId":"1284","severity":1,"message":"1285","line":33,"column":9,"nodeType":"1286","endLine":33,"endColumn":11,"suggestions":"1332"},{"ruleId":"1261","severity":1,"message":"1333","line":13,"column":7,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":59,"column":7,"nodeType":"1286","endLine":59,"endColumn":9,"suggestions":"1334"},{"ruleId":"1261","severity":1,"message":"1335","line":72,"column":9,"nodeType":"1263","messageId":"1264","endLine":72,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":16,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":30,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1326","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1337","line":30,"column":7,"nodeType":"1286","endLine":30,"endColumn":9,"suggestions":"1338"},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1267","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1340","line":15,"column":20,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":30},{"ruleId":"1261","severity":1,"message":"1341","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1342","line":16,"column":26,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":42},{"ruleId":"1261","severity":1,"message":"1343","line":17,"column":11,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1271","line":18,"column":8,"nodeType":"1263","messageId":"1264","endLine":18,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1326","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1344","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1345","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1346","line":17,"column":11,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1267","line":24,"column":11,"nodeType":"1263","messageId":"1264","endLine":24,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1271","line":25,"column":10,"nodeType":"1263","messageId":"1264","endLine":25,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1347","line":29,"column":10,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1348","line":30,"column":10,"nodeType":"1263","messageId":"1264","endLine":30,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1349","line":31,"column":10,"nodeType":"1263","messageId":"1264","endLine":31,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1350","line":37,"column":10,"nodeType":"1263","messageId":"1264","endLine":37,"endColumn":17},{"ruleId":"1272","severity":1,"message":"1273","line":41,"column":41,"nodeType":"1260","messageId":"1274","endLine":41,"endColumn":42,"suggestions":"1351"},{"ruleId":"1272","severity":1,"message":"1276","line":41,"column":58,"nodeType":"1260","messageId":"1274","endLine":41,"endColumn":59,"suggestions":"1352"},{"ruleId":"1278","severity":1,"message":"1279","line":88,"column":36,"nodeType":"1280","messageId":"1281","endLine":88,"endColumn":38},{"ruleId":"1278","severity":1,"message":"1279","line":88,"column":71,"nodeType":"1280","messageId":"1281","endLine":88,"endColumn":73},{"ruleId":"1278","severity":1,"message":"1279","line":88,"column":106,"nodeType":"1280","messageId":"1281","endLine":88,"endColumn":108},{"ruleId":"1278","severity":1,"message":"1279","line":88,"column":142,"nodeType":"1280","messageId":"1281","endLine":88,"endColumn":144},{"ruleId":"1278","severity":1,"message":"1279","line":88,"column":183,"nodeType":"1280","messageId":"1281","endLine":88,"endColumn":185},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1329","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":3,"column":16,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1353","line":3,"column":24,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1317","line":3,"column":30,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":37,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1354","line":13,"column":11,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1267","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1340","line":15,"column":20,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":30},{"ruleId":"1261","severity":1,"message":"1341","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1342","line":16,"column":26,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":42},{"ruleId":"1261","severity":1,"message":"1271","line":17,"column":8,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1330","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1295","severity":1,"message":"1296","line":22,"column":41,"nodeType":"1297","endLine":22,"endColumn":131},{"ruleId":"1295","severity":1,"message":"1296","line":33,"column":41,"nodeType":"1297","endLine":33,"endColumn":130},{"ruleId":"1295","severity":1,"message":"1296","line":45,"column":41,"nodeType":"1297","endLine":45,"endColumn":139},{"ruleId":"1261","severity":1,"message":"1355","line":12,"column":7,"nodeType":"1263","messageId":"1264","endLine":12,"endColumn":17},{"ruleId":"1356","severity":1,"message":"1357","line":181,"column":41,"nodeType":"1358","endLine":181,"endColumn":49},{"ruleId":"1359","severity":1,"message":"1360","line":220,"column":45,"nodeType":"1297","endLine":220,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1355","line":12,"column":7,"nodeType":"1263","messageId":"1264","endLine":12,"endColumn":17},{"ruleId":"1356","severity":1,"message":"1357","line":146,"column":41,"nodeType":"1358","endLine":146,"endColumn":49},{"ruleId":"1359","severity":1,"message":"1360","line":185,"column":45,"nodeType":"1297","endLine":185,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1361","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1265","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1362","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1363","line":21,"column":11,"nodeType":"1263","messageId":"1264","endLine":21,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1337","line":46,"column":7,"nodeType":"1286","endLine":46,"endColumn":9,"suggestions":"1364"},{"ruleId":"1365","severity":1,"message":"1366","line":82,"column":17,"nodeType":"1263","messageId":"1367","endLine":82,"endColumn":18},{"ruleId":"1284","severity":1,"message":"1368","line":35,"column":7,"nodeType":"1286","endLine":35,"endColumn":9,"suggestions":"1369"},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":9,"nodeType":"1286","endLine":23,"endColumn":11,"suggestions":"1370"},{"ruleId":"1295","severity":1,"message":"1296","line":43,"column":37,"nodeType":"1297","endLine":43,"endColumn":132},{"ruleId":"1295","severity":1,"message":"1296","line":54,"column":33,"nodeType":"1297","endLine":54,"endColumn":122},{"ruleId":"1295","severity":1,"message":"1296","line":70,"column":37,"nodeType":"1297","endLine":70,"endColumn":135},{"ruleId":"1295","severity":1,"message":"1296","line":81,"column":33,"nodeType":"1297","endLine":81,"endColumn":123},{"ruleId":"1261","severity":1,"message":"1371","line":23,"column":12,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1372","line":23,"column":20,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":29},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":15,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1353","line":2,"column":23,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1299","line":8,"column":10,"nodeType":"1263","messageId":"1264","endLine":8,"endColumn":17},{"ruleId":"1373","severity":1,"message":"1374","line":14,"column":4,"nodeType":"1375","messageId":"1376","endLine":14,"endColumn":36},{"ruleId":"1284","severity":1,"message":"1377","line":103,"column":7,"nodeType":"1286","endLine":103,"endColumn":9,"suggestions":"1378"},{"ruleId":"1261","severity":1,"message":"1379","line":141,"column":10,"nodeType":"1263","messageId":"1264","endLine":141,"endColumn":26},{"ruleId":"1380","severity":1,"message":"1381","line":194,"column":39,"nodeType":"1309","messageId":"1382","endLine":194,"endColumn":82},{"ruleId":"1380","severity":1,"message":"1381","line":249,"column":45,"nodeType":"1309","messageId":"1382","endLine":249,"endColumn":88},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1361","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1265","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1362","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1363","line":21,"column":11,"nodeType":"1263","messageId":"1264","endLine":21,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1383","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1384"},{"ruleId":"1365","severity":1,"message":"1385","line":53,"column":17,"nodeType":"1263","messageId":"1367","endLine":53,"endColumn":18},{"ruleId":"1365","severity":1,"message":"1366","line":89,"column":17,"nodeType":"1263","messageId":"1367","endLine":89,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1331","line":4,"column":40,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":53},{"ruleId":"1284","severity":1,"message":"1285","line":40,"column":9,"nodeType":"1286","endLine":40,"endColumn":11,"suggestions":"1386"},{"ruleId":"1261","severity":1,"message":"1317","line":4,"column":30,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1330","line":7,"column":9,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1315","line":7,"column":15,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1299","line":8,"column":10,"nodeType":"1263","messageId":"1264","endLine":8,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1265","line":10,"column":10,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1387","line":10,"column":27,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":37},{"ruleId":"1284","severity":1,"message":"1337","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1388"},{"ruleId":"1261","severity":1,"message":"1389","line":51,"column":9,"nodeType":"1263","messageId":"1264","endLine":51,"endColumn":12},{"ruleId":"1261","severity":1,"message":"1390","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1265","line":5,"column":21,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":25},{"ruleId":"1284","severity":1,"message":"1285","line":25,"column":9,"nodeType":"1286","endLine":25,"endColumn":11,"suggestions":"1391"},{"ruleId":"1356","severity":1,"message":"1357","line":42,"column":37,"nodeType":"1358","endLine":42,"endColumn":61},{"ruleId":"1295","severity":1,"message":"1296","line":46,"column":41,"nodeType":"1297","endLine":46,"endColumn":136},{"ruleId":"1356","severity":1,"message":"1357","line":53,"column":37,"nodeType":"1358","endLine":53,"endColumn":61},{"ruleId":"1295","severity":1,"message":"1296","line":57,"column":41,"nodeType":"1297","endLine":57,"endColumn":131},{"ruleId":"1356","severity":1,"message":"1357","line":64,"column":41,"nodeType":"1358","endLine":64,"endColumn":65},{"ruleId":"1295","severity":1,"message":"1296","line":68,"column":45,"nodeType":"1297","endLine":68,"endColumn":143},{"ruleId":"1261","severity":1,"message":"1302","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1270","line":27,"column":12,"nodeType":"1263","messageId":"1264","endLine":27,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1392","line":28,"column":12,"nodeType":"1263","messageId":"1264","endLine":28,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1393","line":29,"column":11,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1269","line":29,"column":18,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1271","line":35,"column":8,"nodeType":"1263","messageId":"1264","endLine":35,"endColumn":15},{"ruleId":"1284","severity":1,"message":"1394","line":33,"column":9,"nodeType":"1286","endLine":33,"endColumn":11,"suggestions":"1395"},{"ruleId":"1359","severity":1,"message":"1360","line":113,"column":13,"nodeType":"1297","endLine":118,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":40,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":45},{"ruleId":"1261","severity":1,"message":"1301","line":2,"column":47,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1396","line":2,"column":52,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":55},{"ruleId":"1261","severity":1,"message":"1397","line":4,"column":8,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1329","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1353","line":3,"column":24,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1317","line":3,"column":30,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":37,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1398","line":4,"column":15,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1399","line":5,"column":13,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":16,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":30,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":35},{"ruleId":"1284","severity":1,"message":"1400","line":50,"column":9,"nodeType":"1286","endLine":50,"endColumn":11,"suggestions":"1401"},{"ruleId":"1261","severity":1,"message":"1326","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":13,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":15,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1353","line":2,"column":23,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":13},{"ruleId":"1402","replacedBy":"1403"},{"ruleId":"1404","replacedBy":"1405"},{"ruleId":"1258","severity":1,"message":"1259","line":30,"column":17,"nodeType":"1260","endLine":32,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":32,"column":54,"nodeType":"1260","endLine":35,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":35,"column":59,"nodeType":"1260","endLine":38,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":38,"column":69,"nodeType":"1260","endLine":41,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":41,"column":61,"nodeType":"1260","endLine":44,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":62,"nodeType":"1260","endLine":47,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":47,"column":60,"nodeType":"1260","endLine":50,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":50,"column":60,"nodeType":"1260","endLine":53,"endColumn":11},{"ruleId":"1261","severity":1,"message":"1262","line":38,"column":12,"nodeType":"1263","messageId":"1264","endLine":38,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1266","line":3,"column":16,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1267","line":11,"column":12,"nodeType":"1263","messageId":"1264","endLine":11,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1268","line":14,"column":12,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1269","line":14,"column":19,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":12,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1267","line":22,"column":11,"nodeType":"1263","messageId":"1264","endLine":22,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1271","line":23,"column":10,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1270","line":36,"column":11,"nodeType":"1263","messageId":"1264","endLine":36,"endColumn":22},{"ruleId":"1272","severity":1,"message":"1273","line":40,"column":41,"nodeType":"1260","messageId":"1274","endLine":40,"endColumn":42,"suggestions":"1406"},{"ruleId":"1272","severity":1,"message":"1276","line":40,"column":58,"nodeType":"1260","messageId":"1274","endLine":40,"endColumn":59,"suggestions":"1407"},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":36,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":38},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":71,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":73},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":106,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":108},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":142,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":144},{"ruleId":"1278","severity":1,"message":"1279","line":74,"column":183,"nodeType":"1280","messageId":"1281","endLine":74,"endColumn":185},{"ruleId":"1261","severity":1,"message":"1282","line":3,"column":8,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1283","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":22},{"ruleId":"1284","severity":1,"message":"1285","line":45,"column":9,"nodeType":"1286","endLine":45,"endColumn":11,"suggestions":"1408"},{"ruleId":"1284","severity":1,"message":"1285","line":39,"column":9,"nodeType":"1286","endLine":39,"endColumn":11,"suggestions":"1409"},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":17,"nodeType":"1260","endLine":46,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":46,"column":93,"nodeType":"1260","endLine":49,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":49,"column":105,"nodeType":"1260","endLine":52,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":58,"column":106,"nodeType":"1260","endLine":61,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":61,"column":109,"nodeType":"1260","endLine":64,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":64,"column":119,"nodeType":"1260","endLine":67,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":67,"column":94,"nodeType":"1260","endLine":70,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":70,"column":75,"nodeType":"1260","endLine":73,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":73,"column":114,"nodeType":"1260","endLine":76,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":76,"column":98,"nodeType":"1260","endLine":79,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":44,"column":9,"nodeType":"1286","endLine":44,"endColumn":11,"suggestions":"1410"},{"ruleId":"1284","severity":1,"message":"1285","line":39,"column":9,"nodeType":"1286","endLine":39,"endColumn":11,"suggestions":"1411"},{"ruleId":"1258","severity":1,"message":"1259","line":44,"column":17,"nodeType":"1260","endLine":46,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":46,"column":98,"nodeType":"1260","endLine":49,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":49,"column":110,"nodeType":"1260","endLine":52,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":52,"column":120,"nodeType":"1260","endLine":55,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":55,"column":118,"nodeType":"1260","endLine":58,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":58,"column":129,"nodeType":"1260","endLine":61,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":61,"column":120,"nodeType":"1260","endLine":64,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":64,"column":94,"nodeType":"1260","endLine":67,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":67,"column":74,"nodeType":"1260","endLine":70,"endColumn":13},{"ruleId":"1258","severity":1,"message":"1259","line":70,"column":118,"nodeType":"1260","endLine":74,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1412"},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1299","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1322","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":15},{"ruleId":"1284","severity":1,"message":"1285","line":43,"column":7,"nodeType":"1286","endLine":43,"endColumn":9,"suggestions":"1413"},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":9,"nodeType":"1286","endLine":23,"endColumn":11,"suggestions":"1414"},{"ruleId":"1295","severity":1,"message":"1296","line":42,"column":37,"nodeType":"1297","endLine":42,"endColumn":133},{"ruleId":"1295","severity":1,"message":"1296","line":53,"column":33,"nodeType":"1297","endLine":53,"endColumn":126},{"ruleId":"1295","severity":1,"message":"1296","line":64,"column":33,"nodeType":"1297","endLine":64,"endColumn":124},{"ruleId":"1295","severity":1,"message":"1296","line":79,"column":37,"nodeType":"1297","endLine":79,"endColumn":136},{"ruleId":"1295","severity":1,"message":"1296","line":90,"column":33,"nodeType":"1297","endLine":90,"endColumn":127},{"ruleId":"1284","severity":1,"message":"1324","line":50,"column":9,"nodeType":"1286","endLine":50,"endColumn":11,"suggestions":"1415"},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":7,"nodeType":"1286","endLine":23,"endColumn":9,"suggestions":"1416"},{"ruleId":"1261","severity":1,"message":"1300","line":1,"column":17,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1301","line":2,"column":34,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":37},{"ruleId":"1261","severity":1,"message":"1302","line":14,"column":10,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1303","line":14,"column":17,"nodeType":"1263","messageId":"1264","endLine":14,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1304","line":17,"column":10,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1305","line":20,"column":16,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":23},{"ruleId":"1284","severity":1,"message":"1285","line":51,"column":5,"nodeType":"1286","endLine":51,"endColumn":7,"suggestions":"1417"},{"ruleId":"1307","severity":1,"message":"1308","line":53,"column":55,"nodeType":"1309","messageId":"1310","endLine":53,"endColumn":57},{"ruleId":"1261","severity":1,"message":"1326","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":12,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1311","line":16,"column":19,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":27},{"ruleId":"1284","severity":1,"message":"1285","line":29,"column":9,"nodeType":"1286","endLine":29,"endColumn":11,"suggestions":"1418"},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1317","line":5,"column":30,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1266","line":6,"column":16,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":25},{"ruleId":"1295","severity":1,"message":"1314","line":52,"column":16,"nodeType":"1297","endLine":52,"endColumn":56},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1318","line":23,"column":7,"nodeType":"1286","endLine":23,"endColumn":9,"suggestions":"1419"},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1285","line":52,"column":9,"nodeType":"1286","endLine":52,"endColumn":11,"suggestions":"1420"},{"ruleId":"1284","severity":1,"message":"1400","line":50,"column":9,"nodeType":"1286","endLine":50,"endColumn":11,"suggestions":"1421"},{"ruleId":"1284","severity":1,"message":"1318","line":22,"column":7,"nodeType":"1286","endLine":22,"endColumn":9,"suggestions":"1422"},{"ruleId":"1261","severity":1,"message":"1321","line":23,"column":11,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1330","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1295","severity":1,"message":"1296","line":22,"column":41,"nodeType":"1297","endLine":22,"endColumn":131},{"ruleId":"1295","severity":1,"message":"1296","line":33,"column":41,"nodeType":"1297","endLine":33,"endColumn":130},{"ruleId":"1295","severity":1,"message":"1296","line":45,"column":41,"nodeType":"1297","endLine":45,"endColumn":139},{"ruleId":"1261","severity":1,"message":"1326","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1270","line":15,"column":13,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":15,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1353","line":2,"column":23,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":15,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1353","line":2,"column":23,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":27},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1299","line":8,"column":10,"nodeType":"1263","messageId":"1264","endLine":8,"endColumn":17},{"ruleId":"1373","severity":1,"message":"1374","line":14,"column":4,"nodeType":"1375","messageId":"1376","endLine":14,"endColumn":36},{"ruleId":"1284","severity":1,"message":"1377","line":103,"column":7,"nodeType":"1286","endLine":103,"endColumn":9,"suggestions":"1423"},{"ruleId":"1261","severity":1,"message":"1379","line":141,"column":10,"nodeType":"1263","messageId":"1264","endLine":141,"endColumn":26},{"ruleId":"1380","severity":1,"message":"1381","line":194,"column":39,"nodeType":"1309","messageId":"1382","endLine":194,"endColumn":82},{"ruleId":"1380","severity":1,"message":"1381","line":249,"column":45,"nodeType":"1309","messageId":"1382","endLine":249,"endColumn":88},{"ruleId":"1284","severity":1,"message":"1285","line":23,"column":9,"nodeType":"1286","endLine":23,"endColumn":11,"suggestions":"1424"},{"ruleId":"1295","severity":1,"message":"1296","line":43,"column":37,"nodeType":"1297","endLine":43,"endColumn":132},{"ruleId":"1295","severity":1,"message":"1296","line":54,"column":33,"nodeType":"1297","endLine":54,"endColumn":122},{"ruleId":"1295","severity":1,"message":"1296","line":70,"column":37,"nodeType":"1297","endLine":70,"endColumn":135},{"ruleId":"1295","severity":1,"message":"1296","line":81,"column":33,"nodeType":"1297","endLine":81,"endColumn":123},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1361","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1265","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1362","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1363","line":21,"column":11,"nodeType":"1263","messageId":"1264","endLine":21,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1337","line":46,"column":7,"nodeType":"1286","endLine":46,"endColumn":9,"suggestions":"1425"},{"ruleId":"1365","severity":1,"message":"1366","line":82,"column":17,"nodeType":"1263","messageId":"1367","endLine":82,"endColumn":18},{"ruleId":"1284","severity":1,"message":"1368","line":35,"column":7,"nodeType":"1286","endLine":35,"endColumn":9,"suggestions":"1426"},{"ruleId":"1284","severity":1,"message":"1285","line":33,"column":9,"nodeType":"1286","endLine":33,"endColumn":11,"suggestions":"1427"},{"ruleId":"1261","severity":1,"message":"1333","line":13,"column":7,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":13},{"ruleId":"1284","severity":1,"message":"1285","line":59,"column":7,"nodeType":"1286","endLine":59,"endColumn":9,"suggestions":"1428"},{"ruleId":"1261","severity":1,"message":"1335","line":72,"column":9,"nodeType":"1263","messageId":"1264","endLine":72,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1371","line":23,"column":12,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1372","line":23,"column":20,"nodeType":"1263","messageId":"1264","endLine":23,"endColumn":29},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":35,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":39},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":41,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":9,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1331","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":53},{"ruleId":"1261","severity":1,"message":"1299","line":6,"column":10,"nodeType":"1263","messageId":"1264","endLine":6,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":16,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":30,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1326","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1337","line":30,"column":7,"nodeType":"1286","endLine":30,"endColumn":9,"suggestions":"1429"},{"ruleId":"1261","severity":1,"message":"1317","line":4,"column":30,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1330","line":7,"column":9,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1315","line":7,"column":15,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1299","line":8,"column":10,"nodeType":"1263","messageId":"1264","endLine":8,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1265","line":10,"column":10,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1387","line":10,"column":27,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":37},{"ruleId":"1284","severity":1,"message":"1337","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1430"},{"ruleId":"1261","severity":1,"message":"1389","line":51,"column":9,"nodeType":"1263","messageId":"1264","endLine":51,"endColumn":12},{"ruleId":"1261","severity":1,"message":"1315","line":3,"column":15,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":25},{"ruleId":"1261","severity":1,"message":"1316","line":3,"column":40,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1299","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1361","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1265","line":7,"column":10,"nodeType":"1263","messageId":"1264","endLine":7,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1362","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1363","line":21,"column":11,"nodeType":"1263","messageId":"1264","endLine":21,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1383","line":41,"column":7,"nodeType":"1286","endLine":41,"endColumn":9,"suggestions":"1431"},{"ruleId":"1365","severity":1,"message":"1385","line":53,"column":17,"nodeType":"1263","messageId":"1367","endLine":53,"endColumn":18},{"ruleId":"1365","severity":1,"message":"1366","line":89,"column":17,"nodeType":"1263","messageId":"1367","endLine":89,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1331","line":4,"column":40,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":53},{"ruleId":"1284","severity":1,"message":"1285","line":40,"column":9,"nodeType":"1286","endLine":40,"endColumn":11,"suggestions":"1432"},{"ruleId":"1261","severity":1,"message":"1328","line":9,"column":5,"nodeType":"1263","messageId":"1264","endLine":9,"endColumn":10},{"ruleId":"1261","severity":1,"message":"1328","line":10,"column":5,"nodeType":"1263","messageId":"1264","endLine":10,"endColumn":10},{"ruleId":"1295","severity":1,"message":"1296","line":106,"column":29,"nodeType":"1297","endLine":106,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1355","line":12,"column":7,"nodeType":"1263","messageId":"1264","endLine":12,"endColumn":17},{"ruleId":"1356","severity":1,"message":"1357","line":181,"column":41,"nodeType":"1358","endLine":181,"endColumn":49},{"ruleId":"1359","severity":1,"message":"1360","line":220,"column":45,"nodeType":"1297","endLine":220,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1355","line":12,"column":7,"nodeType":"1263","messageId":"1264","endLine":12,"endColumn":17},{"ruleId":"1356","severity":1,"message":"1357","line":146,"column":41,"nodeType":"1358","endLine":146,"endColumn":49},{"ruleId":"1359","severity":1,"message":"1360","line":185,"column":45,"nodeType":"1297","endLine":185,"endColumn":122},{"ruleId":"1261","severity":1,"message":"1390","line":2,"column":8,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1265","line":5,"column":21,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":25},{"ruleId":"1284","severity":1,"message":"1285","line":25,"column":9,"nodeType":"1286","endLine":25,"endColumn":11,"suggestions":"1433"},{"ruleId":"1356","severity":1,"message":"1357","line":42,"column":37,"nodeType":"1358","endLine":42,"endColumn":61},{"ruleId":"1295","severity":1,"message":"1296","line":46,"column":41,"nodeType":"1297","endLine":46,"endColumn":136},{"ruleId":"1356","severity":1,"message":"1357","line":53,"column":37,"nodeType":"1358","endLine":53,"endColumn":61},{"ruleId":"1295","severity":1,"message":"1296","line":57,"column":41,"nodeType":"1297","endLine":57,"endColumn":131},{"ruleId":"1356","severity":1,"message":"1357","line":64,"column":41,"nodeType":"1358","endLine":64,"endColumn":65},{"ruleId":"1295","severity":1,"message":"1296","line":68,"column":45,"nodeType":"1297","endLine":68,"endColumn":143},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":19},{"ruleId":"1261","severity":1,"message":"1267","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1340","line":15,"column":20,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":30},{"ruleId":"1261","severity":1,"message":"1341","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1342","line":16,"column":26,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":42},{"ruleId":"1261","severity":1,"message":"1343","line":17,"column":11,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1271","line":18,"column":8,"nodeType":"1263","messageId":"1264","endLine":18,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1329","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":3,"column":16,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1353","line":3,"column":24,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1317","line":3,"column":30,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":37,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1354","line":13,"column":11,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1267","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1340","line":15,"column":20,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":30},{"ruleId":"1261","severity":1,"message":"1341","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":24},{"ruleId":"1261","severity":1,"message":"1342","line":16,"column":26,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":42},{"ruleId":"1261","severity":1,"message":"1271","line":17,"column":8,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1302","line":20,"column":11,"nodeType":"1263","messageId":"1264","endLine":20,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1270","line":27,"column":12,"nodeType":"1263","messageId":"1264","endLine":27,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1392","line":28,"column":12,"nodeType":"1263","messageId":"1264","endLine":28,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1393","line":29,"column":11,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1269","line":29,"column":18,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":26},{"ruleId":"1261","severity":1,"message":"1271","line":35,"column":8,"nodeType":"1263","messageId":"1264","endLine":35,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1326","line":5,"column":8,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1344","line":15,"column":11,"nodeType":"1263","messageId":"1264","endLine":15,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1345","line":16,"column":11,"nodeType":"1263","messageId":"1264","endLine":16,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1346","line":17,"column":11,"nodeType":"1263","messageId":"1264","endLine":17,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1267","line":24,"column":11,"nodeType":"1263","messageId":"1264","endLine":24,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1271","line":25,"column":10,"nodeType":"1263","messageId":"1264","endLine":25,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1347","line":29,"column":10,"nodeType":"1263","messageId":"1264","endLine":29,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1348","line":30,"column":10,"nodeType":"1263","messageId":"1264","endLine":30,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1349","line":31,"column":10,"nodeType":"1263","messageId":"1264","endLine":31,"endColumn":16},{"ruleId":"1261","severity":1,"message":"1350","line":37,"column":10,"nodeType":"1263","messageId":"1264","endLine":37,"endColumn":17},{"ruleId":"1272","severity":1,"message":"1273","line":41,"column":41,"nodeType":"1260","messageId":"1274","endLine":41,"endColumn":42,"suggestions":"1434"},{"ruleId":"1272","severity":1,"message":"1276","line":41,"column":58,"nodeType":"1260","messageId":"1274","endLine":41,"endColumn":59,"suggestions":"1435"},{"ruleId":"1261","severity":1,"message":"1298","line":1,"column":15,"nodeType":"1263","messageId":"1264","endLine":1,"endColumn":23},{"ruleId":"1284","severity":1,"message":"1394","line":33,"column":9,"nodeType":"1286","endLine":33,"endColumn":11,"suggestions":"1436"},{"ruleId":"1359","severity":1,"message":"1360","line":113,"column":13,"nodeType":"1297","endLine":118,"endColumn":17},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":9,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1339","line":2,"column":29,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":38},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":40,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":45},{"ruleId":"1261","severity":1,"message":"1301","line":2,"column":47,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":50},{"ruleId":"1261","severity":1,"message":"1396","line":2,"column":52,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":55},{"ruleId":"1261","severity":1,"message":"1397","line":4,"column":8,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":20},{"ruleId":"1261","severity":1,"message":"1329","line":2,"column":10,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1336","line":2,"column":16,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":22},{"ruleId":"1261","severity":1,"message":"1317","line":2,"column":30,"nodeType":"1263","messageId":"1264","endLine":2,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1329","line":3,"column":10,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":14},{"ruleId":"1261","severity":1,"message":"1353","line":3,"column":24,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1317","line":3,"column":30,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":35},{"ruleId":"1261","severity":1,"message":"1339","line":3,"column":37,"nodeType":"1263","messageId":"1264","endLine":3,"endColumn":46},{"ruleId":"1261","severity":1,"message":"1398","line":4,"column":15,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":28},{"ruleId":"1261","severity":1,"message":"1399","line":5,"column":13,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":18},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'deleteAccount' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'firestore' is defined but never used.","'loading' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'history' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["1437","1438"],"Unnecessary escape character: \\/.",["1439","1440"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PrivateRoute' is defined but never used.","'AuthProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["1441"],["1442"],["1443"],"'Reeact' is defined but never used.",["1444"],"'React' is defined but never used.",["1445"],["1446"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useAuth' is defined but never used.","'Component' is defined but never used.","'Row' is defined but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'doctors' is assigned a value but never used.","'setDate' is assigned a value but never used.",["1447"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setError' is assigned a value but never used.",["1448"],["1449"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'withRouter' is defined but never used.","'useHistory' is defined but never used.","'Alert' is defined but never used.","React Hook React.useEffect has a missing dependency: 'document.DocEmail'. Either include it or remove the dependency array.",["1450"],["1451"],"'doctor' is assigned a value but never used.","'Role' is assigned a value but never used.",["1452"],"React Hook React.useEffect has missing dependencies: 'Appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["1453"],"'moment' is defined but never used.",["1454"],"'cross' is assigned a value but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.",["1455"],"'Moment' is assigned a value but never used.",["1456"],"'sortedPast' is assigned a value but never used.","'Button' is defined but never used.","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'appointment.id'. Either include them or remove the dependency array.",["1457"],"'Container' is defined but never used.","'setLoading' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'setFilteredUsers' is assigned a value but never used.","'DropDownn' is assigned a value but never used.","'NRIC' is assigned a value but never used.","'Address' is assigned a value but never used.","'DOB' is assigned a value but never used.","'NRICRef' is assigned a value but never used.","'AddressRef' is assigned a value but never used.","'DOBRef' is assigned a value but never used.","'RoleRef' is assigned a value but never used.",["1458","1459"],["1460","1461"],"'Card' is defined but never used.","'medicalDocUsers' is assigned a value but never used.","'BlockEmbed' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'MC' is defined but never used.","'ConsultFee' is assigned a value but never used.","'PrescriptionFee' is assigned a value but never used.",["1462"],"no-redeclare","'i' is already defined.","redeclared","React Hook React.useEffect has a missing dependency: 'md.PatientEmail'. Either include it or remove the dependency array.",["1463"],["1464"],"'medRec' is assigned a value but never used.","'setMedRec' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["1465"],"'handleDeptChange' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a'.","unsafeRefs","React Hook React.useEffect has a missing dependency: 'appointment.id'. Either include it or remove the dependency array.",["1466"],"'j' is already defined.",["1467"],"'storageRef' is defined but never used.",["1468"],"'img' is assigned a value but never used.","'NavBar' is defined but never used.",["1469"],"'updateEmail' is assigned a value but never used.","'Users' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.email' and 'props.email'. Either include them or remove the dependency array.",["1470"],"'Col' is defined but never used.","'TextTruncate' is defined but never used.","'BrowserRouter' is defined but never used.","'admin' is defined but never used.","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["1471"],"no-native-reassign",["1472"],"no-negated-in-lhs",["1473"],["1474","1475"],["1476","1477"],["1478"],["1479"],["1480"],["1481"],["1482"],["1483"],["1484"],["1485"],["1486"],["1487"],["1488"],["1489"],["1490"],["1491"],["1492"],["1493"],["1494"],["1495"],["1496"],["1497"],["1498"],["1499"],["1500"],["1501"],["1502"],["1503"],["1504","1505"],["1506","1507"],["1508"],{"messageId":"1509","fix":"1510","desc":"1511"},{"messageId":"1512","fix":"1513","desc":"1514"},{"messageId":"1509","fix":"1515","desc":"1511"},{"messageId":"1512","fix":"1516","desc":"1514"},{"desc":"1517","fix":"1518"},{"desc":"1517","fix":"1519"},{"desc":"1517","fix":"1520"},{"desc":"1517","fix":"1521"},{"desc":"1517","fix":"1522"},{"desc":"1517","fix":"1523"},{"desc":"1517","fix":"1524"},{"desc":"1517","fix":"1525"},{"desc":"1517","fix":"1526"},{"desc":"1527","fix":"1528"},{"desc":"1527","fix":"1529"},{"desc":"1517","fix":"1530"},{"desc":"1531","fix":"1532"},{"desc":"1517","fix":"1533"},{"desc":"1517","fix":"1534"},{"desc":"1517","fix":"1535"},{"desc":"1536","fix":"1537"},{"messageId":"1509","fix":"1538","desc":"1511"},{"messageId":"1512","fix":"1539","desc":"1514"},{"messageId":"1509","fix":"1540","desc":"1511"},{"messageId":"1512","fix":"1541","desc":"1514"},{"desc":"1536","fix":"1542"},{"desc":"1543","fix":"1544"},{"desc":"1517","fix":"1545"},{"desc":"1546","fix":"1547"},{"desc":"1548","fix":"1549"},{"desc":"1517","fix":"1550"},{"desc":"1536","fix":"1551"},{"desc":"1517","fix":"1552"},{"desc":"1553","fix":"1554"},{"desc":"1555","fix":"1556"},"no-global-assign","no-unsafe-negation",{"messageId":"1509","fix":"1557","desc":"1511"},{"messageId":"1512","fix":"1558","desc":"1514"},{"messageId":"1509","fix":"1559","desc":"1511"},{"messageId":"1512","fix":"1560","desc":"1514"},{"desc":"1517","fix":"1561"},{"desc":"1517","fix":"1562"},{"desc":"1517","fix":"1563"},{"desc":"1517","fix":"1564"},{"desc":"1517","fix":"1565"},{"desc":"1517","fix":"1566"},{"desc":"1517","fix":"1567"},{"desc":"1531","fix":"1568"},{"desc":"1517","fix":"1569"},{"desc":"1517","fix":"1570"},{"desc":"1517","fix":"1571"},{"desc":"1527","fix":"1572"},{"desc":"1517","fix":"1573"},{"desc":"1555","fix":"1574"},{"desc":"1527","fix":"1575"},{"desc":"1546","fix":"1576"},{"desc":"1517","fix":"1577"},{"desc":"1536","fix":"1578"},{"desc":"1543","fix":"1579"},{"desc":"1517","fix":"1580"},{"desc":"1517","fix":"1581"},{"desc":"1536","fix":"1582"},{"desc":"1536","fix":"1583"},{"desc":"1548","fix":"1584"},{"desc":"1517","fix":"1585"},{"desc":"1517","fix":"1586"},{"messageId":"1509","fix":"1587","desc":"1511"},{"messageId":"1512","fix":"1588","desc":"1514"},{"messageId":"1509","fix":"1589","desc":"1511"},{"messageId":"1512","fix":"1590","desc":"1514"},{"desc":"1553","fix":"1591"},"removeEscape",{"range":"1592","text":"1593"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1594","text":"1595"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1596","text":"1593"},{"range":"1597","text":"1595"},"Update the dependencies array to be: [currentUser.email]",{"range":"1598","text":"1599"},{"range":"1600","text":"1599"},{"range":"1601","text":"1599"},{"range":"1602","text":"1599"},{"range":"1603","text":"1599"},{"range":"1604","text":"1599"},{"range":"1605","text":"1599"},{"range":"1606","text":"1599"},{"range":"1607","text":"1599"},"Update the dependencies array to be: [document.DocEmail]",{"range":"1608","text":"1609"},{"range":"1610","text":"1609"},{"range":"1611","text":"1599"},"Update the dependencies array to be: [Appointment.DocEmail, currentUser.email]",{"range":"1612","text":"1613"},{"range":"1614","text":"1599"},{"range":"1615","text":"1599"},{"range":"1616","text":"1599"},"Update the dependencies array to be: [appointment.DocEmail, appointment.id]",{"range":"1617","text":"1618"},{"range":"1619","text":"1593"},{"range":"1620","text":"1595"},{"range":"1621","text":"1593"},{"range":"1622","text":"1595"},{"range":"1623","text":"1618"},"Update the dependencies array to be: [md.PatientEmail]",{"range":"1624","text":"1625"},{"range":"1626","text":"1599"},"Update the dependencies array to be: [options]",{"range":"1627","text":"1628"},"Update the dependencies array to be: [appointment.id]",{"range":"1629","text":"1630"},{"range":"1631","text":"1599"},{"range":"1632","text":"1618"},{"range":"1633","text":"1599"},"Update the dependencies array to be: [currentUser.email, props.email]",{"range":"1634","text":"1635"},"Update the dependencies array to be: [appointment.DocEmail, currentUser.email]",{"range":"1636","text":"1637"},{"range":"1638","text":"1593"},{"range":"1639","text":"1595"},{"range":"1640","text":"1593"},{"range":"1641","text":"1595"},{"range":"1642","text":"1599"},{"range":"1643","text":"1599"},{"range":"1644","text":"1599"},{"range":"1645","text":"1599"},{"range":"1646","text":"1599"},{"range":"1647","text":"1599"},{"range":"1648","text":"1599"},{"range":"1649","text":"1613"},{"range":"1650","text":"1599"},{"range":"1651","text":"1599"},{"range":"1652","text":"1599"},{"range":"1653","text":"1609"},{"range":"1654","text":"1599"},{"range":"1655","text":"1637"},{"range":"1656","text":"1609"},{"range":"1657","text":"1628"},{"range":"1658","text":"1599"},{"range":"1659","text":"1618"},{"range":"1660","text":"1625"},{"range":"1661","text":"1599"},{"range":"1662","text":"1599"},{"range":"1663","text":"1618"},{"range":"1664","text":"1618"},{"range":"1665","text":"1630"},{"range":"1666","text":"1599"},{"range":"1667","text":"1599"},{"range":"1668","text":"1593"},{"range":"1669","text":"1595"},{"range":"1670","text":"1593"},{"range":"1671","text":"1595"},{"range":"1672","text":"1635"},[1452,1453],"",[1452,1452],"\\",[1469,1470],[1469,1469],[1857,1859],"[currentUser.email]",[1530,1532],[1918,1920],[1424,1426],[1082,1084],[697,699],[1617,1619],[1001,1003],[794,796],[776,778],"[document.DocEmail]",[770,772],[1636,1638],[2287,2289],"[Appointment.DocEmail, currentUser.email]",[2407,2409],[1309,1311],[1735,1737],[1135,1137],"[appointment.DocEmail, appointment.id]",[1553,1554],[1553,1553],[1570,1571],[1570,1570],[1953,1955],[1397,1399],"[md.PatientEmail]",[715,717],[2500,2502],"[options]",[1681,1683],"[appointment.id]",[1754,1756],[1583,1585],[793,795],[1191,1193],"[currentUser.email, props.email]",[2297,2299],"[appointment.DocEmail, currentUser.email]",[1452,1453],[1452,1452],[1469,1470],[1469,1469],[1857,1859],[1530,1532],[1918,1920],[1424,1426],[1082,1084],[1636,1638],[697,699],[2287,2289],[794,796],[1617,1619],[1001,1003],[776,778],[2407,2409],[2297,2299],[770,772],[2500,2502],[715,717],[1953,1955],[1397,1399],[1309,1311],[1735,1737],[1135,1137],[1583,1585],[1681,1683],[1754,1756],[793,795],[1553,1554],[1553,1553],[1570,1571],[1570,1570],[1191,1193]]